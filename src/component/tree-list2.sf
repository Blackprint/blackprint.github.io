This tree list accept: {
	Key: {
		branch: {
			DeepKey: {branch: ...}
		}
	}
}

## html
<tree-list2 class="tree-list-menu {{ hidden ? 'hidden' : '' }}">
	<div class="tree-item" sf-each="key, val in deep" tree-item-key="{{ key.replace(/\W/g, '_') }}">
		<div class="title" @click="collapse(this)"><i class="fa tree-icon"></i> {{ key }}</div>
		{{@if val.branch != null:
			return new $TreeList2({parentKey: parentKey, key, val: val.branch});
		}}
	</div>
</tree-list2>

## js-global
sf.component('tree-list2', {template: #this.path}, function(My, include, $item={}){
	My.parentKey = $item.parentKey ?? '';
	My.parentKey += $item.key && My.parentKey !== '' ? `/${$item.key}` : ($item.key ?? '');

	My.deep = $item.val ?? {};
	My.hidden = false;

	My.init = function(){
		My.$el.parent().addClass("has-child").addClass("collapsed");
	}

	My.collapse = function(el){
		el = el.nextElementSibling;
		if(el == null) return;

		let hidden = el.model.hidden = !el.model.hidden;

		if(hidden)
			$(el.parentNode).addClass("collapsed");
		else $(el.parentNode).removeClass("collapsed");
	}
});