{"version":3,"sources":["src/global/BlackprintEventFallback.js","src/global/engine.js","src/global/NodeHoverInfo.js","src/global/PortHoverInfo.js","src/global/init.js","src/global/sampleList.js","src/global/SuggestNodeTypeCaster.js","src/global/utils.js","src/model/header.js","src/routes/routes.js"],"names":["async","imports","urls","sf","loader","mjs","Promise","all","map","v","import","task","BlackprintEventFallback","error","types","type","data","port","cable","SmallNotif","add","source","iface","target","title","name","_name","node_port_not_found","portName","node_not_found","namespace","node_delete_not_found","console","node_template_not_found","tagName","element","Blackprint","on","slot","ev","message","window","addEventListener","e","replace","engine","Engine","NodeHoverInfo","hovered","$","off","PortHoverInfo","_move","clearTimeout","_timer","_show","ToolTip","set","event","setTimeout","attr","log","engineTest","confirm","nodes","views","goto","SketchList","forEach","sketch","clearNodes","importJSON","sampleList","warn","location","hash","includes","decodeURIComponent","importSketch","URI","Modal","hide","pako","inflateRaw","Base64","toUint8Array","to","SketchImporter","loadJSON","test","navigator","userAgent","model","disableVFX","Window","height","innerHeight","width","innerWidth","i","length","container","scope","origSize","h","size","w","hostname","pathname","_","moduleJS","x","y","value","output","Out","Result","id","Clicked","Changed","Value","URL","mix","time","feedback","AudioNode","Element","VideoTrack","AudioTrack","min","max","step","localStorage","offlineSampleModule","key","meta","SuggestNodeTypeCaster","Data","input","handler","owner","Number","String","createNode","In","connectCable","connectPort","primitive","has","Object","loadModuleFromURL","Set","Boolean","BigInt","instance","rect","_list","getElement","getBoundingClientRect","Ofst","offset","pos","scale","moveNode","stopPropagation","preventDefault","$el","movementX","movementY","_BPEditorUtils","utils","_nodeGitHub","openNodeSource","node","Node","objPath","split","toast","result","Error","_scopeURL","isGenerated","url","packageInfo","getJSON","repository","sourceAlias","blackprint","githubURL","get","list","ii","indexOf","splice","EditorHeader","My","include","showOptions","info","_loadedModuleURL","_modulesURL","_moduleExampleList","init","parse","mainMenu","page","show","icon","deep","val","Swal","fire","callback","el","document","createElement","setAttribute","onchange","this","files","text","JSON","trim","slice","click","cancelButtonText","confirmButtonText","denyButtonText","denyButtonColor","showCancelButton","showDenyButton","showCloseButton","isDismissed","dismiss","option","isConfirmed","toJS","space","isDenied","position","temp","exportJSON","clipboard","writeText","btn","file","Blob","href","createObjectURL","download","revokeObjectURL","compress","deflateRaw","fromUint8Array","loc","hotReload","socket","connected","disconnect","___browserSync___","isConnected","isDefault","io","uri","origin","className","cloneActive","cloneContainer","disableVFXActive","addClass","removeClass","visualizeActive","visualizeFlow","settings","Views","current","animatePageTransition","maxCache","modal","onCrossing","open","transitioning","lastSibling","animateKey","showedSibling","duration","delay","visible","relatedDOM"],"mappings":"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","file":"myjs.min.js","sourcesContent":["// Please use sketch.on('...', callback) instead\n// This is used if no one listened to the event\nvar BlackprintEventFallback = {\n\terror(error){\n\t\tBlackprintEventFallback.error.types[error.type](error.data || error);\n\t},\n\t'cable.wrong_pair'({ port, cable }){\n\t\tSmallNotif.add(`The cable is not suitable (${cable.source}, ${port.source})`, 'yellow');\n\t},\n\t'cable.wrong_type'({ cable, iface, port, target }){\n\t\tSmallNotif.add(iface.title+\"> Port from '\"+port.iface.title + \" - \" + port.name+\"' was not an \"+(target.type._name || target.type.name), 'yellow');\n\t},\n\t'cable.wrong_type_pair'({ cable, port, target }){\n\t\tSmallNotif.add(`The cable type is not suitable (${target.type.name}, ${port.type.name})`, 'yellow');\n\t},\n\t'cable.duplicate_removed'({ cable, port }){\n\t\tSmallNotif.add(\"Duplicated cable removed\", 'yellow');\n\t},\n\t'cable.replaced'({ cable, port }){\n\t\tSmallNotif.add(\"Cable was replaced because input doesn't support array\", 'yellow');\n\t}\n};\n\nBlackprintEventFallback.error.types = {\n\tnode_port_not_found({ iface, portName }){\n\t\tSmallNotif.add(`Node port not found for ${iface.title} with name: ${portName}`, 'red');\n\t},\n\tnode_not_found({ namespace }){\n\t\tSmallNotif.add(`Node for ${namespace} was not found, maybe .registerNode() haven't being called?`, 'red')\n\t},\n\tnode_delete_not_found({ iface }){\n\t\tSmallNotif.add(\"Node was not found on the list\", 'red');\n\t\tconsole.error(\"Node was not found on the list\", iface);\n\t},\n\tnode_template_not_found({ tagName, element }){\n\t\tSmallNotif.add(`It seems '${tagName}' HTML haven't been registered as component or can't be loaded.`, 'red');\n\t\tconsole.error(\"It seems '\"+tagName+\"' HTML haven't been registered as component or can't be loaded. Please double check the interface file path or name, the interface path name and the file name is case sensitive.\", element);\n\t},\n};\n\nBlackprint.on('error', {slot: 'bp-editor'}, function(ev){\n\tSmallNotif.add(ev.message, 'red');\n});\n\nwindow.addEventListener('error', function(e){\n\tlet message = e.message || \"Something went wrong..\";\n\tmessage = message.replace('Uncaught ', '');\n\n\tSmallNotif.add(message, 'red');\n});\n\nwindow.addEventListener('onunhandledrejection', function(e){\n\tlet message = e.message || \"Something went wrong..\";\n\tmessage = message.replace('Uncaught ', '');\n\n\tSmallNotif.add(message, 'red');\n});","// New engine instance (separated from the editor) that can be accessed from the console\nlet engine = new Blackprint.Engine();\nwindow.engine = engine;\n\nconsole.log(\"-- Do you want to run a sample for engine-js?\");\nconsole.log(\"-- Call engineTest() from this console\");\n\nwindow.engineTest = async function(){\n\tif(!window.confirm(\"This action will clear current workspace, are you sure to continue?\"))\n\t\treturn;\n\n\t// These nodes are the handler that registered from ./register-handler.js\n\tvar registered = Blackprint.nodes;\n\n\tconsole.log(\"-- The sketch and the console was imported from same JSON example, but they're imported in different engine. Any modification from the sketch page will not change the imported console nodes.\");\n\n\t// Go to first sketch page\n\tawait views.goto('/sketch/1');\n\n\t// Clear all sketch page\n\tSketchList.forEach(sketch => sketch.clearNodes());\n\n\t// For the editor (sketch page)\n\tSketchList[0].importJSON(sampleList[\"Random Multiply\"]);\n\n\t// For console (on DevTools)\n\tawait engine.importJSON(sampleList['Random Multiply']);\n\n\n\t// Just some information when using on DevTools console\n\tconsole.warn(`The engine nodes on this console is using sample from 'Random Multiply'\\n> %csampleList[\"Random Multiply\"]`, \"color: gray\");\n\tconsole.warn('If you want to import your JSON, don\\'t forget to run engine.clearNodes() first');\n\n\tconsole.log(`For obtain engine node:%c\nvar button = engine.iface.myButton;\nvar input = engine.iface.myInput;\nvar logger = engine.iface.myLogger;\n`, \"color: gray\");\n\tconsole.log(\"To click on invisible button: %cbutton.clicked()\", \"color: gray\");\n\tconsole.log(\"To set the invisible input: %cinput.data.value = 'hello'\", \"color: gray\");\n\tconsole.log(\"Or send the input to the handle output directly: %cinput.const.Output.Value = 'hello'\", \"color: gray\");\n\tconsole.log(\"To get the logger value: %clogger.const.Input.Any\", \"color: gray\");\n}","function NodeHoverInfo(ev, hovered){\n\t$(window).off('pointermove', PortHoverInfo._move);\n\n\tif(!hovered){\n\t\tclearTimeout(NodeHoverInfo._timer);\n\t\tif(NodeHoverInfo._show) ToolTip.set();\n\t\treturn;\n\t}\n\n\tlet event = ev.event;\n\t$(window).on('pointermove', PortHoverInfo._move = ev => event = ev);\n\n\tclearTimeout(NodeHoverInfo._timer);\n\tNodeHoverInfo._timer = setTimeout(()=> {\n\t\tToolTip.set(ev.iface.namespace, event);\n\t\tNodeHoverInfo._show = true;\n\t}, 400);\n}\n\nNodeHoverInfo._timer = null;\nNodeHoverInfo._show = true;","function PortHoverInfo(ev, hovered){\n\t$(window).off('pointermove', PortHoverInfo._move);\n\n\tif(!hovered){\n\t\tclearTimeout(PortHoverInfo._timer);\n\t\tif(PortHoverInfo._show) ToolTip.set();\n\t\treturn;\n\t}\n\n\tlet target = $(ev.event.target);\n\tif(!!target.attr('title')) target.attr('title', '');\n\n\tlet event = ev.event;\n\t$(window).on('pointermove', PortHoverInfo._move = ev => event = ev);\n\n\tclearTimeout(NodeHoverInfo._timer);\n\tclearTimeout(PortHoverInfo._timer);\n\tPortHoverInfo._timer = setTimeout(()=> {\n\t\tToolTip.set(ev.port.type.name, event);\n\t\tPortHoverInfo._show = true;\n\t}, 400);\n}\n\nPortHoverInfo._timer = null;\nPortHoverInfo._show = false;\nPortHoverInfo._move = ()=>{};","$(function(){\n\t// Fix for Telegram who encode the URL after the hashtag\n\tif((location.hash.includes('%23'))){\n\t\tlocation.hash = decodeURIComponent(location.hash)\n\t}\n\n\tlet importSketch = sf.URI.data.importSketch;\n\tif(importSketch !== void 0){\n\t\tModal.hide();\n\n\t\tsetTimeout(()=> {\n\t\t\timportSketch = pako.inflateRaw(Base64.toUint8Array(importSketch[0]), {to: 'string'});\n\t\t\tSketchImporter.loadJSON(importSketch);\n\t\t}, 1000);\n\t}\n\n\tsetTimeout(()=> {\n\t\t// Disable VFX for mobile device or non-chrome browser\n\t\tif(/android|ios/i.test(navigator.userAgent) || !/chrome/i.test(navigator.userAgent)){\n\t\t\tsf.model('header').disableVFX();\n\t\t}\n\t}, 100);\n\n\t$(sf.Window).on('resize', ev => {\n\t\tlet height = ev.target.innerHeight;\n\t\tlet width = ev.target.innerWidth;\n\n\t\tfor (var i = 0; i < SketchList.length; i++) {\n\t\t\tlet container = SketchList[i].scope('container');\n\t\t\tif(container.origSize.h < height)\n\t\t\t\tcontainer.origSize.h = container.size.h = height;\n\n\t\t\tif(container.origSize.w < width)\n\t\t\t\tcontainer.origSize.w = container.size.w = width;\n\t\t}\n\t});\n\n\t// Auto switch to dev mode when being used on localhost\n\t$(function(){\n\t\tif(location.hostname === 'localhost' && !location.pathname.includes('/dev.html'))\n\t\t\tlocation.pathname = '/dev.html';\n\t});\n});","var sampleList = {\n\t\"Empty Sketch\": {\"_\":{\"moduleJS\":[\"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.3.0/dist/nodes-decoration.mjs\"]},\"Decoration/Text/Notes\":[{\"i\":0,\"x\":93,\"y\":89,\"data\":{\"value\":\"Hiya!\\n\\nI'm a placeholder for this sketch container.\\n\\nYou can delete me by right clicking my header, and create new nodes by right clicking the container.\"}}]},\n\n\t\"Random Multiply\": {\"_\":{\"moduleJS\":[\"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.3.0/dist/nodes-example.mjs\"]},\"Example/Math/Random\":[{\"i\":0,\"x\":298,\"y\":73,\"output\":{\"Out\":[{\"i\":2,\"name\":\"A\"}]}},{\"i\":1,\"x\":298,\"y\":239,\"output\":{\"Out\":[{\"i\":2,\"name\":\"B\"}]}}],\"Example/Math/Multiply\":[{\"i\":2,\"x\":525,\"y\":155,\"output\":{\"Result\":[{\"i\":3,\"name\":\"Any\"}]}}],\"Example/Display/Logger\":[{\"i\":3,\"id\":\"myLogger\",\"x\":763,\"y\":169}],\"Example/Button/Simple\":[{\"i\":4,\"id\":\"myButton\",\"x\":41,\"y\":59,\"output\":{\"Clicked\":[{\"i\":2,\"name\":\"Exec\"}]}}],\"Example/Input/Simple\":[{\"i\":5,\"id\":\"myInput\",\"x\":38,\"y\":281,\"data\":{\"value\":\"saved input\"},\"output\":{\"Changed\":[{\"i\":1,\"name\":\"Re-seed\"}],\"Value\":[{\"i\":3,\"name\":\"Any\"}]}}]},\n\n\t\"Audio and Video\": {\"_\":{\"moduleJS\":[\"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.3.0/dist/nodes-example.mjs\", \"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.3.0/dist/nodes-input.mjs\", \"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.3.0/dist/nodes-decoration.mjs\", \"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.3.0/dist/nodes-console.mjs\", \"https://cdn.jsdelivr.net/npm/@blackprint/nodes-multimedia@0.2.0/dist/nodes-multimedia.mjs\", \"https://cdn.jsdelivr.net/npm/@blackprint/nodes-pixi.js@0.3.0/dist/nodes-pixijs.mjs\"]},\"Input/File\":[{\"i\":0,\"x\":74,\"y\":26,\"output\":{\"URL\":[{\"i\":7,\"name\":\"URL\"}]}},{\"i\":1,\"x\":47,\"y\":557}],\"Multimedia/Audio/Input/Microphone\":[{\"i\":2,\"x\":21,\"y\":321}],\"Multimedia/Audio/Output/Destination\":[{\"i\":3,\"x\":597,\"y\":273}],\"Multimedia/Audio/Effect/PingPongDelay\":[{\"i\":4,\"x\":322,\"y\":222,\"data\":{\"mix\":0.5,\"time\":0.3,\"feedback\":0.5},\"output\":{\"Out\":[{\"i\":3,\"name\":\"In\"}]}}],\"Example/Button/Simple\":[{\"i\":5,\"x\":35,\"y\":139,\"output\":{\"Clicked\":[{\"i\":7,\"name\":\"Play\"}]}},{\"i\":6,\"x\":39,\"y\":225,\"output\":{\"Clicked\":[{\"i\":7,\"name\":\"Pause\"}]}}],\"Multimedia/Player\":[{\"i\":7,\"x\":325,\"y\":34,\"output\":{\"AudioNode\":[],\"Element\":[],\"VideoTrack\":[{\"i\":9,\"name\":\"VideoTrack\"}],\"AudioTrack\":[]}}],\"Input/SliderBox\":[{\"i\":8,\"x\":141,\"y\":417,\"data\":{\"0\":{\"value\":0,\"min\":-100,\"max\":100,\"step\":0.1},\"1\":{\"value\":0,\"min\":-100,\"max\":100,\"step\":0.1},\"2\":{\"value\":1,\"min\":-100,\"max\":100,\"step\":0.1},\"3\":{\"value\":1,\"min\":-100,\"max\":100,\"step\":0.1},\"4\":{\"value\":0,\"min\":-100,\"max\":100,\"step\":0.1}},\"output\":{\"0\":[{\"i\":10,\"name\":\"x\"}],\"1\":[{\"i\":10,\"name\":\"y\"}],\"2\":[{\"i\":10,\"name\":\"ScaleX\"}],\"3\":[{\"i\":10,\"name\":\"ScaleY\"}],\"4\":[{\"i\":10,\"name\":\"Rotate\"}]}}],\"Multimedia/Display/Video\":[{\"i\":9,\"x\":593,\"y\":25}],\"Pixi.js/Sprite\":[{\"i\":10,\"x\":364,\"y\":374},{\"i\":11,\"x\":510,\"y\":544}],\"Pixi.js/Display/Canvas\":[{\"i\":12,\"x\":756,\"y\":269},{\"i\":13,\"x\":749,\"y\":490}],\"Pixi.js/Converter/GIF\":[{\"i\":14,\"x\":246,\"y\":643}],\"Decoration/Text/Notes\":[{\"i\":15,\"x\":931,\"y\":27,\"data\":{\"value\":\"Sorry it's messy here ｡ﾟ( ﾟ^∀^ﾟ)ﾟ｡\\n\\nFirst you need to open video file.\\nTrigger the play, or connect AudioNode to PingPongDelay first.\\n\\nThe AudioNode can be connected directly to WebAudio Destination.\\n\\nMedia Player's Element can be connected to Sprite Source.\"}},{\"i\":16,\"x\":58,\"y\":737,\"data\":{\"value\":\"To begin with GIF animation, open your GIF file.\\n\\nThen connect to GIF Player.\\nConnect the Canvas to Sprite's Source\\nthen connect the Sprite to Canvas Visualization.\"}}]}\n};\n\nif(localStorage.offlineSampleModule === '1'){\n\tfor(let key in sampleList){\n\t\tlet meta = sampleList[key]._;\n\n\t\tif(meta !== void 0)\n\t\t\tdelete meta.moduleJS;\n\t}\n}","$(()=>{\n\tsetTimeout(async ()=> {\n\t\tawait sf.loader.task;\n\n\t\tif(Blackprint.nodes.Data != null)\n\t\t\treturn;\n\n\t\tSmallNotif.add(\"Loading required nodes\", 'yellow', 500);\n\n\t\t// Load nodes for data manipulation\n\t\tBlackprint.loadModuleFromURL('https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.4/dist/nodes-data.mjs');\n\t}, 3000);\n});\n\nfunction SuggestNodeTypeCaster(ev){\n\tif(Blackprint.nodes.Data == null)\n\t\treturn;\n\n\tlet { cable, port, target, handler } = ev;\n\n\tlet input, output;\n\tif(cable.owner.source === 'input'){\n\t\tinput = port;\n\t\toutput = target;\n\t}\n\telse {\n\t\tinput = target;\n\t\toutput = port;\n\t}\n\n\tif(output.type === Number && input.type === String){\n\t\thandler(() => {\n\t\t\tlet iface = SuggestNodeTypeCaster.createNode('Data/Number/To/String', ev, input);\n\n\t\t\tif(cable.owner === output){\n\t\t\t\tiface.input.In.connectCable(cable);\n\t\t\t\tiface.output.Out.connectPort(input);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tiface.input.In.connectPort(output);\n\t\t\t\tiface.output.Out.connectCable(cable);\n\t\t\t}\n\t\t});\n\t}\n\telse if(output.type === String && input.type === Number){\n\t\thandler(() => {\n\t\t\tlet iface = SuggestNodeTypeCaster.createNode('Data/String/To/Number', ev, input);\n\n\t\t\tif(cable.owner === output){\n\t\t\t\tiface.input.In.connectCable(cable);\n\t\t\t\tiface.output.Out.connectPort(input);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tiface.input.In.connectPort(output);\n\t\t\t\tiface.output.Out.connectCable(cable);\n\t\t\t}\n\t\t});\n\t}\n\telse if(!SuggestNodeTypeCaster.primitive.has(output.type) && SuggestNodeTypeCaster.primitive.has(input.type)){\n\t\thandler(() => {\n\t\t\tlet iface = SuggestNodeTypeCaster.createNode('Data/Object/GetValue', ev, input);\n\n\t\t\tif(cable.owner === output){\n\t\t\t\tiface.input.Object.connectCable(cable);\n\t\t\t\tiface.output.Value.connectPort(input);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tiface.input.Object.connectPort(output);\n\t\t\t\tiface.output.Value.connectCable(cable);\n\t\t\t}\n\t\t});\n\t}\n}\n\nSuggestNodeTypeCaster.primitive = new Set([String, Number, Boolean, BigInt]);\nSuggestNodeTypeCaster.createNode = function(namespace, ev, input){\n\tlet instance =  ev.instance;\n\tlet rect = input.iface.input._list.getElement(input).getBoundingClientRect();\n\tlet container = instance.scope('container');\n\n\tlet Ofst = container.offset;\n\tlet y = (rect.y - container.pos.y - Ofst.y) / container.scale\n\tlet x = (rect.x - container.pos.x - Ofst.x) / container.scale\n\tlet iface = instance.createNode(namespace, {x, y});\n\n\tsetTimeout(()=> {\n\t\tif(iface.w == null) return;\n\t\tiface.moveNode({\n\t\t\tstopPropagation(){}, preventDefault(){},\n\t\t\ttarget: iface.$el[0],\n\t\t\tmovementX: -(iface.w + 20) * container.scale,\n\t\t\tmovementY: -2\n\t\t});\n\t}, 300);\n\n\treturn iface;\n}","window._BPEditorUtils ??= {};\nvar utils = window._BPEditorUtils;\n\nutils._nodeGitHub ??= {};\nutils.openNodeSource = async function(node){\n\t// If Blackprint.Interface\n\tif(node.node != null && !(node instanceof Blackprint.Node))\n\t\tnode = node.node;\n\n\tlet namespace = node.iface.namespace;\n\tlet objPath = namespace.split('/');\n\tlet nodes = Blackprint.nodes;\n\n\tlet toast = SmallNotif.add(\"Obtaining path\", 'yellow', false);\n\tlet result = false;\n\n\ttry{\n\t\tfor (var i = 0; i < objPath.length; i++) {\n\t\t\tnodes = nodes[objPath[i]];\n\t\t\tif(nodes == null) throw new Error(\"Node namespace was not found: \"+namespace);\n\t\t}\n\n\t\tif(nodes._scopeURL == null)\n\t\t\tthrow new Error(\"Can't view source because the node doesn't seems to be loaded from known URL.\");\n\n\t\tif(nodes.isGenerated)\n\t\t\tthrow new Error(\"Can't view source of node that was dynamically generated\");\n\n\t\tif(utils._nodeGitHub[nodes._scopeURL] == null){\n\t\t\tlet url = nodes._scopeURL;\n\t\t\tif(!url.includes('/dist/')) throw new Error(\"'/dist/' was not found on the URL: \"+url);\n\n\t\t\ttoast.message = 'Obtaining \"package.json\"';\n\n\t\t\turl = url.split('/dist/')[0];\n\n\t\t\ttry {\n\t\t\t\tvar packageInfo = await $.getJSON(`${url}/package.json`);\n\t\t\t} catch(e){\n\t\t\t\tthrow new Error(\"Failed to fetch '/package.json'\");\n\t\t\t}\n\n\t\t\tif(packageInfo.repository == null)\n\t\t\t\tthrow new Error(\"'repository' field was not found on package.json file\");\n\n\t\t\turl = packageInfo.repository.url\n\t\t\t\t.replace(/\\.git$/m, '')\n\t\t\t\t.replace(/https?:\\/\\/.*?\\//, '')\n\t\t\t\t.replace(/@/, '');\n\n\t\t\tutils._nodeGitHub[nodes._scopeURL] = `https://cdn.jsdelivr.net/gh/${url}@latest`;\n\n\t\t\tlet sourceAlias = packageInfo.blackprint?.source;\n\t\t\tif(sourceAlias != null){\n\t\t\t\tfor(let key in sourceAlias){\n\t\t\t\t\tif(nodes._scopeURL.includes('/'+key)){\n\t\t\t\t\t\tutils._nodeGitHub[nodes._scopeURL] += '/'+sourceAlias[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse utils._nodeGitHub[nodes._scopeURL] += '/src';\n\t\t}\n\n\t\tlet githubURL = utils._nodeGitHub[nodes._scopeURL];\n\t\tnamespace = namespace.replace(/^.*?\\//m, '');\n\t\t// return githubURL + '/' + namespace + '.js';\n\n\t\ttry {\n\t\t\ttoast.message = `Obtaining \"${namespace}.js\"`;\n\t\t\tresult = await $.get(githubURL + '/' + namespace + '.js');\n\t\t} catch(e){\n\t\t\tconsole.error(`File can't be loaded: \"${githubURL + '/' + namespace + '.js'}\"`);\n\t\t\tthrow new Error(\"Source was not found, maybe the settings on package.json was incorrect.\");\n\t\t}\n\t} catch(e) {\n\t\tSmallNotif.add(e.message || \"Something went wrong\", 'red');\n\t\tconsole.error(e);\n\t}\n\n\tlet list = SmallNotif.list;\n\tlet ii = list.indexOf(toast);\n\n\tif(ii !== -1) list.splice(ii, 1);\n\n\treturn result;\n}","// https://www.npmjs.com/package/scarletsframe#initializedefine-model\r\nvar EditorHeader = sf.model('header', function(My, include){\r\n\tMy.message = \"Hello\";\r\n\tMy.showOptions = false;\r\n\tMy.info = {scale:100};\r\n\tMy._loadedModuleURL = Blackprint._modulesURL;\r\n\tMy._moduleExampleList = []; // will be referenced by: /src/routes/+vw-modal/module-example-list.sf\r\n\r\n\tMy.init = function(){\r\n\t\tsf.URI.parse(); // Trigger to reparse current URL\r\n\t}\r\n\r\n\tasync function importJSON(sketch, json){\r\n\t\tLoading.set(\"Importing nodes\");\r\n\t\tsf.loader.onProgress(function(loaded, total){\r\n\t\t\tif(loaded === total)\r\n\t\t\t\tLoading.set(\"Importing nodes\");\r\n\t\t\telse Loading.set(`Downloading ${loaded}/${total}`);\r\n\t\t});\r\n\r\n\t\tawait sketch.importJSON(json);\r\n\t\tLoading.set('');\r\n\t}\r\n\r\n\tMy.mainMenu = function(ev){\r\n\t\tif(My.showOptions === false) return;\r\n\t\tlet sketch = SketchList[views.data.page - 1];\r\n\r\n\t\tinclude('dropdown').show([{\r\n\t\t\ttitle: 'Sketch',\r\n\t\t\ticon: 'fa fa-pencil-ruler',\r\n\t\t\tdeep:[{\r\n\t\t\t\ttitle: 'Open',\r\n\t\t\t\ticon: 'fa fa-folder-open',\r\n\t\t\t\tdeep:[{\r\n\t\t\t\t\ttitle: \"From Clipboard\",\r\n\t\t\t\t\tasync callback(){\r\n\t\t\t\t\t\tlet val = await Swal.fire({\r\n\t\t\t\t\t\t\ttitle: \"Paste the JSON here\",\r\n\t\t\t\t\t\t\tinput: \"text\",\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tval = val.value;\r\n\t\t\t\t\t\tif(!val) return;\r\n\r\n\t\t\t\t\t\tSketchImporter.loadJSON(val, sketch);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: \"From File\",\r\n\t\t\t\t\tcallback(){\r\n\t\t\t\t\t\tvar el = document.createElement(\"input\");\r\n\t\t\t\t\t\tel.setAttribute('type', 'file');\r\n\t\t\t\t\t\tel.onchange = async function(){\r\n\t\t\t\t\t\t\tif(this.files.length === 0) return;\r\n\t\t\t\t\t\t\tif(this.files.length !== 1){\r\n\t\t\t\t\t\t\t\tconsole.log(this.files);\r\n\t\t\t\t\t\t\t\tconsole.log(\"Currently only support 1 file\");\r\n\t\t\t\t\t\t\t\tSmallNotif.add('Currently only support 1 file', 'error');\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlet text = JSON.parse(await this.files[0].text());\r\n\t\t\t\t\t\t\tif(text){\r\n\t\t\t\t\t\t\t\ttext = text.trim();\r\n\t\t\t\t\t\t\t\tif(text.slice(0, 1) !== '{')\r\n\t\t\t\t\t\t\t\t\tSmallNotif.add('Data in the file is not a JSON', 'error');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tSketchImporter.loadJSON(text, sketch);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tel.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n\t\t\t}, {\r\n\t\t\t\ttitle:'Export',\r\n\t\t\t\ticon: 'fa fa-save',\r\n\t\t\t\tdeep:[{\r\n\t\t\t\t\ttitle: 'To Clipboard',\r\n\t\t\t\t\tasync callback(){\r\n\t\t\t\t\t\tlet confirm = await Swal.fire({\r\n\t\t\t\t\t\t\ttitle: \"Choose one of the export mode\",\r\n\t\t\t\t\t\t\tcancelButtonText: 'Minified JSON',\r\n\t\t\t\t\t\t\tconfirmButtonText: 'Prettified JS',\r\n\t\t\t\t\t\t\tdenyButtonText: 'Minimal JSON',\r\n\t\t\t\t\t\t\tdenyButtonColor: 'gray',\r\n\t\t\t\t\t\t\tshowCancelButton: true,\r\n\t\t\t\t\t\t\tshowDenyButton: true,\r\n\t\t\t\t\t\t\tshowCloseButton: true\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(confirm.isDismissed && confirm.dismiss === 'backdrop')\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\tlet option = {};\r\n\t\t\t\t\t\tif(confirm.isConfirmed){\r\n\t\t\t\t\t\t\toption.toJS = true;\r\n\t\t\t\t\t\t\toption.space = '\\t';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(confirm.isDenied)\r\n\t\t\t\t\t\t\toption.position = false;\r\n\r\n\t\t\t\t\t\tvar temp = sketch.exportJSON(option);\r\n\t\t\t\t\t\tnavigator.clipboard.writeText(temp);\r\n\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttitle: \"Copied to clipboard!\",\r\n\t\t\t\t\t\t\ttext: temp\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'To File',\r\n\t\t\t\t\tcallback(){\r\n\t\t\t\t\t\tvar btn = document.createElement(\"a\");\r\n\t\t\t\t\t\tvar file = new Blob([sketch.exportJSON()], {type: 'application/json'});\r\n\t\t\t\t\t\tbtn.href = URL.createObjectURL(file);\r\n\t\t\t\t\t\tbtn.download = 'blackprint.json';\r\n\t\t\t\t\t\tbtn.click();\r\n\r\n\t\t\t\t\t\t// Auto revoke after 120 sec\r\n\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\tURL.revokeObjectURL(btn.href);\r\n\t\t\t\t\t\t}, 120e3);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'To URL',\r\n\t\t\t\t\tcallback(){\r\n\t\t\t\t\t\tvar compress = pako.deflateRaw(sketch.exportJSON());\r\n\t\t\t\t\t\tvar temp = Base64.fromUint8Array(compress, true);\r\n\r\n\t\t\t\t\t\tsf.URI.data.importSketch = [temp];\r\n\t\t\t\t\t\tsf.URI.replace();\r\n\r\n\t\t\t\t\t\tlet loc = location.href;\r\n\t\t\t\t\t\tnavigator.clipboard.writeText(loc);\r\n\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttitle: \"Copied to clipboard!\",\r\n\t\t\t\t\t\t\ttext: loc\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'Examples',\r\n\t\t\t\ticon: 'fa fa-layer-group',\r\n\t\t\t\tcallback(){\r\n\t\t\t\t\tModal.goto('/example-list');\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'Reload',\r\n\t\t\t\ticon: 'fa fa-sync',\r\n\t\t\t\tasync callback(){\r\n\t\t\t\t\tlet val = await Swal.fire({\r\n\t\t\t\t\t\ttitle: \"This action will export and reimport current sketch\",\r\n\t\t\t\t\t\tshowCancelButton: true,\r\n\t\t\t\t\t\tshowCloseButton: true\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(confirm.isDismissed && confirm.dismiss === 'backdrop')\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\tlet sketch = SketchList[0];\r\n\t\t\t\t\tlet temp = sketch.exportJSON();\r\n\t\t\t\t\tsketch.clearNodes();\r\n\r\n\t\t\t\t\tawait sketch.importJSON(temp);\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}, {\r\n\t\t\ttitle: 'Modules',\r\n\t\t\ticon: 'fa fa-layer-group',\r\n\t\t\tdeep:[{\r\n\t\t\t\ttitle: 'Create Custom',\r\n\t\t\t\ticon: 'fa fa-plus',\r\n\t\t\t\thide: sf.hotReload === void 0,\r\n\t\t\t\tcallback(){\r\n\t\t\t\t\tModal.goto('/custom-node-editor');\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'Loaded module',\r\n\t\t\t\ticon: 'fa fa-boxes',\r\n\t\t\t\tcallback(){\r\n\t\t\t\t\tModal.goto('/module-url');\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}, {\r\n\t\t\ttitle: 'Remote',\r\n\t\t\ticon: 'fa fa-plug',\r\n\t\t\thide: sf.hotReload === void 0,\r\n\t\t\tdeep:[{\r\n\t\t\t\ttitle: 'Sketch' + (sf.model('modal-remote-sketch-connect').socket?.connected ? ' ✔️' : ''),\r\n\t\t\t\ticon: 'fa fa-plug',\r\n\t\t\t\tasync callback(){\r\n\t\t\t\t\tlet socket = sf.model('modal-remote-sketch-connect').socket;\r\n\t\t\t\t\tif(socket?.connected) socket.disconnect();\r\n\r\n\t\t\t\t\tModal.goto('/remote-sketch-connect');\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'Engine' + (sf.model('modal-remote-engine-connect').socket?.connected ? ' ✔️' : ''),\r\n\t\t\t\ticon: 'fa fa-plug',\r\n\t\t\t\tasync callback(){\r\n\t\t\t\t\tlet socket = sf.model('modal-remote-engine-connect').socket;\r\n\t\t\t\t\tif(socket?.connected) socket.disconnect();\r\n\r\n\t\t\t\t\tModal.goto('/remote-engine-connect');\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\ttitle: (function(){\r\n\t\t\t\t\tif(window.___browserSync___ === void 0)\r\n\t\t\t\t\t\treturn \"Module server\";\r\n\r\n\t\t\t\t\tlet socket = ___browserSync___.socket;\r\n\t\t\t\t\tlet isConnected = socket.connected;\r\n\t\t\t\t\tlet isDefault = socket.io.uri.indexOf(location.origin) === 0;\r\n\r\n\t\t\t\t\treturn 'Module server '+(!isConnected || isDefault ? \"\" : \"✔️\");\r\n\t\t\t\t})(),\r\n\t\t\t\ticon: 'fa fa-plug',\r\n\t\t\t\tcallback(){\r\n\t\t\t\t\tif(window.___browserSync___){\r\n\t\t\t\t\t\tlet socket = ___browserSync___.socket;\r\n\t\t\t\t\t\tlet isConnected = socket.connected;\r\n\t\t\t\t\t\tlet isDefault = socket.io.uri.indexOf(location.origin) === 0;\r\n\r\n\t\t\t\t\t\tif(isConnected && !isDefault)\r\n\t\t\t\t\t\t\tsocket.disconnect();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tModal.goto('/dev-mode');\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}, {\r\n\t\t\ttitle: 'Development Mode',\r\n\t\t\ticon: 'fa fa-tools',\r\n\t\t\thide: sf.hotReload !== void 0,\r\n\t\t\tcallback(){\r\n\t\t\t\tlocation.pathname = '/dev.html';\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\ttitle: 'Environment',\r\n\t\t\ticon: 'fa fa-key',\r\n\t\t\tcallback(){\r\n\t\t\t\tModal.goto('/environment-variables');\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\ttitle: 'Settings',\r\n\t\t\ticon: 'fa fa-tools',\r\n\t\t\tcallback(){\r\n\t\t\t\tModal.goto('/sketch-settings');\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\ttitle: 'Home',\r\n\t\t\ticon: 'fa fa-home',\r\n\t\t\tcallback(){\r\n\t\t\t\tviews.goto('/');\r\n\t\t\t}\r\n\t\t}], {\r\n\t\t\telement: My.$el('.header-left')[0],\r\n\t\t\tclassName: 'header-left-menu'\r\n\t\t});\r\n\t}\r\n\r\n\tMy.cloneActive = false;\r\n\tMy.cloneContainer = function(){\r\n\t\tlet sketch = SketchList[views.data.page - 1];\r\n\t\tsketch.page.cloneContainer();\r\n\t\tMy.cloneActive = sketch.page.cloneActive;\r\n\t}\r\n\r\n\tMy.disableVFXActive = false;\r\n\tMy.disableVFX = function(){\r\n\t\tMy.disableVFXActive = !My.disableVFXActive;\r\n\r\n\t\tif(My.disableVFXActive)\r\n\t\t\t$('body').addClass('blackprint-no-vfx');\r\n\t\telse $('body').removeClass('blackprint-no-vfx');\r\n\r\n\t\tlocalStorage.disableVFXActive = My.disableVFXActive ? '1' : '0';\r\n\t}\r\n\r\n\tif(localStorage.disableVFXActive === '1' && My.disableVFXActive === false)\r\n\t\tMy.disableVFX();\r\n\r\n\tMy.visualizeActive = true;\r\n\tMy.visualizeFlow = function(){\r\n\t\tMy.visualizeActive = !My.visualizeActive;\r\n\t\tBlackprint.settings('visualizeFlow', My.visualizeActive);\r\n\t}\r\n});","// This project is using file-system directory structure routes\n// You can just easily add .sf file inside the views-route\n\n// ====== Main content routes ======\nvar views = (new sf.Views('vw-ground', 'page')) // page = http://url.com/#page/...\n.on('finish', function(current, target, data){\n\t// Add animation\n\tanimatePageTransition(views);\n});\n\n// Increase views limit from 3 into 100\nviews.maxCache = 100;\n\n\n// ====== Modal content routes ======\nvar modal = (new sf.Views('vw-modal', false)); // false = We don't need to use hashtag route\n\n\n// ====== Handle any cross domain URL ======\n// Will throw error if this was not being set\nsf.Views.onCrossing = function(url, target){\n\twindow.open(url, '_blank');\n}\n\n\n// === Function for transitioning page ===\n\nvar transitioning = 0;\nfunction animatePageTransition(views){\n\tif(views.lastSibling)\n\t\t$(views.lastSibling).animateKey('scaleDown', 0.6, function(){\n\t\t\t$(this).addClass('disable-anim');\n\t\t});\n\n\tif(views.showedSibling)\n\t\t$(views.showedSibling).removeClass('disable-anim').animateKey('scaleUpDown', {\n\t\t\tduration:0.6,\n\t\t\tdelay:0.3,\n\t\t\tvisible:false\n\t\t});\n\n\t// Make sure showed element is not hidden after animation\n\tclearTimeout(transitioning);\n\ttransitioning = setTimeout(function(){\n\t\ttransitioning = false;\n\t\t$(views.relatedDOM).removeClass('disable-anim');\n\t}, 1000);\n}"]}