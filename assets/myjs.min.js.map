{"version":3,"sources":["src/global/BlackprintEventFallback.js","src/global/EditorDB.js","src/global/FileDirectory.js","src/global/NodeHoverInfo.js","src/global/PortHoverInfo.js","src/global/SuggestNodeTypeCaster.js","src/global/engine.js","src/global/isConnectablePort.js","src/global/init.js","src/global/keyboardShortcut.js","src/global/sampleList.js","src/global/sf-parser.js","src/global/utils.js","src/nodes/editor.js","src/routes/routes.js"],"names":["_Class","_Class2","_Class3","async","imports","urls","sf","loader","mjs","Promise","all","map","v","import","task","BlackprintEventFallback","error","types","type","data","port","cable","target","SmallNotif","add","iface","namespace","source","title","name","_name","A","virtualType","join","B","node_port_not_found","portName","node_not_found","node_delete_not_found","console","node_template_not_found","tagName","element","Blackprint","on","slot","ev","message","window","addEventListener","e","includes","replace","$","EditorDB","SFDatabase","idbVersion","websql","structure","Settings","$name","value","Object","assign","getSettings","resolve","this","get","setSettings","has","exist","insert","update","EditorWorkingDir","setPrototypeOf","CustomDirectory","prototype","reconstruct","once","handle","requestPermission","Events","EditorWorkingDirReady","EditorWorkingDirChange","MyStorage","myStorage","_","merge","dbInit","DBReady","Engine","CustomEvent","constructor","_dirName","super","parentHandle","_path","path","kind","move","toPath","dirHandle","rootDirHandle","getDirectory","createFile","writeData","readBuffer","delete","resolveHandle","_handle","_create","Array","split","check","shift","length","first","getDirectoryHandle","create","getFileHandle","resolveCustomHandle","CustomFile","ls","lastHandle","arr","val","values","push","mkdir","fileName","pop","catch","Error","getFile","recursiveReadFiles","recursiveGetFileHandles","_data","dirs","WeakMap","readText","list","i","item","set","getBlob","text","arrayBuffer","getStream","stream","writeDataAt","pos","appendData","prependData","removeEntry","_CustomDirectory","writer","createWritable","keepExistingData","write","close","seek","lastModified","size","NodeHoverInfo","hovered","off","_move","clearTimeout","_timer","_show","ToolTip","event","closest","pressure","attr","parent","setTimeout","PortHoverInfo","SuggestNodeTypeCaster","nodes","Data","input","output","handler","owner","any","Number","String","createNode","In","connectCable","Out","connectPort","Function","Value","Call","primitive","Set","Boolean","BigInt","instance","rect","_portList","getElement","getBoundingClientRect","container","scope","Ofst","offset","y","scale","x","w","moveNode","stopPropagation","preventDefault","$el","movementX","movementY","engine","isConnectablePort","clazz","temp","log","engineTest","confirm","views","goto","SketchList","forEach","sketch","clearNodes","importJSON","sampleList","warn","BPEditor","Dialog","Swal","fire","bind","location","hash","decodeURIComponent","onProgress","loaded","total","Loading","importSketch","URI","requestAnimationFrame","pako","inflateRaw","Base64","toUint8Array","to","SketchImporter","loadJSON","exampleURL","openExample","ModuleExampleList","addExampleFromURL","test","navigator","userAgent","model","disableVFX","page","currentPath","Window","height","innerHeight","width","innerWidth","origSize","h","hostname","pathname","___browserSync___","socket","Sketch","registerDocs","onModuleConflict","entries","useOld","serviceWorker","register","isSuggestion","Example","events","alert","My","workspacePanel","projectList","initialized","workspaceShortcuts","ctrlKey","key","saveInstanceTab","loadInstanceTab","altKey","switchInstanceTab","closeTab","getActiveTab","saveTab","index","tab","createTab","switchTab","moduleJS","z","Result","id","Clicked","Changed","comment","URL","mix","time","feedback","input_d","Mix","Time","Feedback","Seek","AudioNode","Element","parentId","MediaStreamVideo","output_sw","MediaStream","_cable","branch","min","max","step","hideUnusedPort","Sprite","ScaleX","ScaleY","Rotate","color","localStorage","offlineSampleModule","hotReload","_BPEditorUtils","utils","_nodeGitHub","openNodeSource","node","Node","githubURL","objPath","toast","result","_scopeURL","isGenerated","ghName","packageInfo","url","match","getJSON","repository","sourceAlias","blackprint","ii","indexOf","splice","code","scopeURL","registerNode","setInterface","description","el","panels","left","setPreview","_returnOldEl","_oldEl","_oldParentEl","parentNode","_oldNextEl","nextSibling","insertBefore","destroy","workspace","_utils","imported","slice","_fileChange","Handle","resolvePath","FileSystemFileHandle","FileSystemDirectoryHandle","BP_Editor","hidden","Views","current","startsWith","lastSibling","addClass","showedSibling","removeClass","currentDOM","animatePageTransition","maxCache","modal","onCrossing","open","transitioning","animateKey","duration","delay","visible","relatedDOM"],"mappings":"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","file":"myjs.min.js","sourcesContent":["// Please use sketch.on('...', callback) instead\n// This is used if no one listened to the event\nvar BlackprintEventFallback = {\n\terror(error){\n\t\tBlackprintEventFallback.error.types[error.type](error.data || error);\n\t},\n\t'cable.rule.disallowed'({ port, cable, target }){\n\t\tSmallNotif.add(`Cable connection is disallowed for (${port.iface.namespace} <-> ${target.iface.namespace})`, 'red');\n\t},\n\t'cable.wrong_pair'({ port, cable }){\n\t\tSmallNotif.add(`The cable is not suitable (${cable.source}, ${port.source})`, 'red');\n\t},\n\t'cable.wrong_type'({ cable, iface, port, target }){\n\t\tSmallNotif.add(iface.title+\"> Port from '\"+port.iface.title + \" - \" + port.name+\"' was not an \"+(target.type._name || target.type.name), 'red');\n\t},\n\t'cable.wrong_type_pair'({ port, target }){\n\t\tSmallNotif.add(`The cable type is not suitable (${target.type.name} != ${port.type.name})`, 'red');\n\t},\n\t'cable.virtual_type_mismatch'({ port, target }){\n\t\tlet A = port.virtualType?.map(v => v.name).join(\"|\") ?? port.type.name;\n\t\tlet B = target.virtualType?.map(v => v.name).join(\"|\") ?? target.type.name;\n\t\tSmallNotif.add(`No virtual type that matched each other (${A} != ${B})`, 'yellow');\n\t},\n\t'cable.duplicate_removed'({ cable, port }){\n\t\tSmallNotif.add(\"Duplicated cable removed\", 'yellow');\n\t},\n\t'cable.replaced'({ cable, port }){\n\t\tSmallNotif.add(\"Cable was replaced because input doesn't support array\", 'yellow');\n\t},\n\t'cable.unsupported_dynamic_port'({ cable, port }){\n\t\tSmallNotif.add(\"Connecting cable between dynamically generated port is not supported\", 'red');\n\t}\n};\n\nBlackprintEventFallback.error.types = {\n\tnode_port_not_found({ iface, portName }){\n\t\tSmallNotif.add(`Node port not found for ${iface.title} with name: ${portName}`, 'red');\n\t},\n\tnode_not_found({ namespace }){\n\t\tSmallNotif.add(`Node for ${namespace} was not found, maybe .registerNode() haven't being called?`, 'red')\n\t},\n\tnode_delete_not_found({ iface }){\n\t\tSmallNotif.add(\"Node was not found on the list\", 'red');\n\t\tconsole.error(\"Node was not found on the list\", iface);\n\t},\n\tnode_template_not_found({ tagName, element }){\n\t\tSmallNotif.add(`It seems '${tagName}' HTML haven't been registered as component or can't be loaded.`, 'red');\n\t\tconsole.error(\"It seems '\"+tagName+\"' HTML haven't been registered as component or can't be loaded. Please double check the interface file path or name, the interface path name and the file name is case sensitive.\", element);\n\t},\n};\n\nBlackprint.on('error', {slot: 'bp-editor'}, function(ev){\n\tSmallNotif.add(ev.message, 'red');\n});\n\nwindow.addEventListener('error', function(e){\n\tlet message = e.message || \"Something went wrong..\";\n\tif(message.includes('ResizeObserver')) return (e);\n\tmessage = message.replace('Uncaught ', '');\n\n\tSmallNotif.add(message, 'red');\n});\n\nwindow.addEventListener('onunhandledrejection', function(e){\n\tlet message = e.message || \"Something went wrong..\";\n\tif(message.includes('ResizeObserver')) return (e);\n\tmessage = message.replace('Uncaught ', '');\n\n\tSmallNotif.add(message, 'red');\n});","$(() => {\n\t// Let's begin the initialization\n\twindow.EditorDB = new SFDatabase('EditorDB', {\n\t\t// When you have changed the DBStructure you need to update this version\n\t\tidbVersion: 1,\n\t\twebsql: false, // We will use IndexedDB\n\t\n\t\t// Your database table's structure\n\t\tstructure: {\n\t\t\tSettings:{\n\t\t\t\t$name: ['text', 'unique'], // indexed name\n\t\t\t\tvalue: 'any',\n\t\t\t},\n\t\t},\n\t}, function(){\n\t\tObject.assign(EditorDB, {\n\t\t\tgetSettings(name){\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tthis.get('Settings', 'value', { name }, resolve);\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetSettings(name, value){\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tthis.has('Settings', { name }, exist => {\n\t\t\t\t\t\tif(exist === false)\n\t\t\t\t\t\t\tthis.insert('Settings', { name, value }, resolve);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthis.update('Settings', { value }, { name }, resolve);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\n\t\tdbInit();\n\t\tEvents.DBReady = true;\n\t});\n\t\n\tasync function dbInit(){\n\t\twindow.EditorWorkingDir = await EditorDB.getSettings(\"EditorWorkingDir\");\n\t\tif(EditorWorkingDir != null){\n\t\t\tObject.setPrototypeOf(EditorWorkingDir, CustomDirectory.prototype);\n\t\t\tEditorWorkingDir.reconstruct();\n\t\n\t\t\t$(window).once('click', async () => {\n\t\t\t\tawait EditorWorkingDir.handle.requestPermission();\n\t\t\t\tEvents.EditorWorkingDirReady = true;\n\t\t\t\tEvents.EditorWorkingDirChange();\n\t\t\t});\n\t\t}\n\t\n\t\t$(window).once('beforeunload', function(){\n\t\t\tEditorDB.setSettings('MyStorage', window.MyStorage);\n\t\t});\n\t\n\t\tlet myStorage = await EditorDB.getSettings('MyStorage');\n\t\tif(myStorage != null) _.merge(MyStorage, myStorage);\n\t}\n});","class CustomDirectory extends Blackprint.Engine.CustomEvent {\n\tconstructor(handle, _dirName){\n\t\tsuper();\n\n\t\tthis.name = handle.name;\n\t\tif(handle.parentHandle == null)\n\t\t\thandle._path = this.path = '.';\n\n\t\telse this.path = handle._path;\n\t\tthis.kind = 'directory';\n\n\t\tthis.handle = handle;\n\t\tthis.parentHandle = handle.parentHandle;\n\t\tdelete handle.parentHandle;\n\t}\n\n\treconstruct(){\n\t\tthis.handle.parentHandle = this.parentHandle;\n\t\tthis.handle._path = this.path;\n\t}\n\n\tasync move(toPath){\n\t\tlet dirHandle = new CustomDirectory(this.handle.rootDirHandle);\n\n\t\tif(this.kind === 'directory')\n\t\t\tawait dirHandle.getDirectory(toPath, true);\n\t\telse {\n\t\t\tlet target = await dirHandle.createFile(toPath);\n\t\t\tawait target.writeData(await this.readBuffer());\n\t\t}\n\n\t\tawait this.delete();\n\t}\n\n\tasync resolveHandle(path, _handle, _create = false){\n\t\t_handle ??= this.handle;\n\t\tif(!path) return _handle;\n\n\t\tif(path.constructor !== Array){\n\t\t\tif(path === '.' || path === './') return _handle;\n\t\t\tif(path.includes('\\\\')) path = path.split('\\\\').join('/');\n\t\t\tpath = path.split('/');\n\t\t}\n\n\t\tlet check = path[0];\n\t\tif(check === '.' || check === '') path.shift();\n\t\tif(path.length === 0) return _handle;\n\n\t\tlet first = path.shift();\n\n\t\ttry {\n\t\t\tvar handle = await _handle.getDirectoryHandle(first, {create: _create});\n\t\t} catch(e) {\n\t\t\tvar handle = await _handle.getFileHandle(first);\n\t\t}\n\n\t\tif(handle == null) return null;\n\t\thandle.rootDirHandle = _handle.rootDirHandle || _handle;\n\t\thandle.parentHandle = _handle;\n\t\thandle._path = _handle._path +'/'+ first;\n\t\treturn await this.resolveHandle(path, handle, _create);\n\t}\n\n\tasync resolveCustomHandle(path, _handle, _create = false){\n\t\tlet handle = await this.resolveHandle(path, _handle, _create);\n\n\t\tif(handle.kind === 'directory') return new CustomDirectory(handle);\n\t\telse return new CustomFile(handle, handle.parentHandle);\n\t}\n\n\tasync getDirectory(path, create=false){\n\t\treturn new CustomDirectory(await this.resolveHandle(path, null, create));\n\t}\n\n\tasync ls(path){\n\t\tlet lastHandle = await this.resolveHandle(path);\n\t\tlet arr = [];\n\n\t\tfor await(let val of lastHandle.values()){\n\t\t\tif(val.kind === 'file'){\n\t\t\t\tval = new CustomFile(val, lastHandle);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tval.parentHandle = lastHandle;\n\t\t\t\tval._path = lastHandle._path +'/'+ val.name;\n\t\t\t\tval = new CustomDirectory(val);\n\t\t\t}\n\n\t\t\tarr.push(val);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tasync mkdir(path){\n\t\treturn new CustomDirectory(await this.resolveHandle(path, null, true));\n\t}\n\n\tasync createFile(path){\n\t\tpath = path.split('/');\n\t\tlet fileName = path.pop();\n\t\tlet lastHandle = await this.resolveHandle(path, null, true);\n\t\tlet handle = await lastHandle.getFileHandle(fileName).catch(()=>{});\n\t\tif(handle != null) throw new Error(\"File already exist\");\n\n\t\thandle = await lastHandle.getFileHandle(fileName, {create: true});\n\t\tif(handle == null) return null;\n\t\treturn new CustomFile(handle, lastHandle);\n\t}\n\n\tasync getFile(path){\n\t\tpath = path.split('/');\n\t\tlet fileName = path.pop();\n\t\tlet lastHandle = await this.resolveHandle(path);\n\t\tlet handle = await lastHandle.getFileHandle(fileName).catch(()=>{});\n\t\tif(handle == null) return null;\n\n\t\treturn new CustomFile(handle, lastHandle);\n\t}\n\n\tasync recursiveReadFiles(path){\n\t\tlet data = {};\n\t\tthis.recursiveGetFileHandles(path, data, null, true);\n\t\treturn data;\n\t}\n\n\tasync recursiveGetFileHandles(path, _data={}, dirs=new WeakMap(), readText=false){\n\t\tlet list = await this.ls(path);\n\t\tfor (let i=0; i < list.length; i++) {\n\t\t\tlet item = list[i];\n\t\t\tif(item.kind === 'file'){\n\t\t\t\tif(readText) _data[item.name] = await item.readText();\n\t\t\t\telse _data[item.name] = item;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_data[item.name] = await item.recursiveGetFileHandles('.', {}, dirs, readText);\n\t\t\t\tdirs?.set(_data[item.name], item);\n\t\t\t}\n\t\t}\n\n\t\treturn _data;\n\t}\n\n\tasync getBlob(path){ return await (await this.getFile(path)).getBlob() }\n\tasync readText(path){ return await (await this.getBlob(path)).text() }\n\tasync readBuffer(path){ return await (await this.getBlob(path)).arrayBuffer() }\n\tasync getStream(path){ return await (await this.getBlob(path)).stream() }\n\n\tasync writeData(path, text){\n\t\tawait (await this.getFile(path)).writeData();\n\t}\n\n\tasync writeDataAt(path, pos, text){\n\t\tawait (await this.getFile(path)).writeDataAt(pos, text);\n\t}\n\n\tasync appendData(path, text){\n\t\tawait (await this.getFile(path)).appendData(text);\n\t}\n\n\tasync prependData(path, text){\n\t\tawait (await this.getFile(path)).prependData(text);\n\t}\n\n\tasync delete(){\n\t\tlet list = await this.ls();\n\t\tfor (let i=0; i < list.length; i++)\n\t\t\tawait list[i].delete();\n\n\t\tawait this.parentHandle.removeEntry(this.name);\n\t}\n}\n\nwindow._CustomDirectory = CustomDirectory;\n\nclass CustomFile {\n\tconstructor(handle, dirHandle){\n\t\tthis.path = dirHandle._path+'/'+handle.name;\n\t\tthis.name = handle.name;\n\t\tthis.handle = handle;\n\t\tthis.dirHandle = dirHandle;\n\t\tthis.rootDirHandle = dirHandle.rootDirHandle;\n\t\tthis.kind = 'file';\n\t}\n\n\tasync getBlob(){ return await (await this.handle.getFile()) }\n\tasync readText(){ return await (await this.getBlob()).text() }\n\tasync readBuffer(){ return await (await this.getBlob()).arrayBuffer() }\n\tasync getStream(){ return await (await this.getBlob()).stream() }\n\n\tasync writeData(data){\n\t\tlet writer = await this.handle.createWritable({keepExistingData: false});\n\t\tawait writer.write(data);\n\t\tawait writer.close();\n\t}\n\n\tasync writeDataAt(pos, data){\n\t\tlet writer = await this.handle.createWritable({keepExistingData: true});\n\t\tawait writer.seek(pos);\n\t\tawait writer.write(data);\n\t\tawait writer.close();\n\t}\n\n\tasync appendData(data){\n\t\tlet writer = await this.handle.createWritable({keepExistingData: true});\n\t\tawait writer.write(data);\n\t\tawait writer.close();\n\t}\n\n\tasync prependData(data){\n\t\tlet writer = await this.handle.createWritable({keepExistingData: true});\n\t\tawait writer.seek(0);\n\t\tawait writer.write(data);\n\t\tawait writer.close();\n\t}\n\n\tasync lastModified(){\n\t\treturn (await this.handle.getFile()).lastModified;\n\t}\n\n\tasync size(){\n\t\treturn (await this.handle.getFile()).size;\n\t}\n\n\tasync type(){\n\t\treturn (await this.handle.getFile()).type;\n\t}\n\n\tasync delete(){\n\t\tawait this.dirHandle.removeEntry(this.name);\n\t}\n}\n\nCustomFile.prototype.move = CustomDirectory.prototype.move;","function NodeHoverInfo(ev, hovered){\n\t$(window).off('pointermove', NodeHoverInfo._move);\n\n\tif(!hovered){\n\t\tclearTimeout(NodeHoverInfo._timer);\n\t\tif(NodeHoverInfo._show) ToolTip.set();\n\t\tNodeHoverInfo._show = false;\n\t\treturn;\n\t}\n\n\t// Skip node decoration and skip if any button was pressed\n\tif(ev.event.target.closest('.extra') != null || ev.event.pressure !== 0){\n\t\tNodeHoverInfo(ev, false);\n\t\treturn;\n\t}\n\n\tlet target = $(ev.event.target);\n\tif(!!target.attr('title')) target.attr('title', '');\n\n\ttarget = target.parent();\n\tif(!!target.attr('title')) target.attr('title', '');\n\n\tlet event = ev.event;\n\t$(window).on('pointermove', NodeHoverInfo._move = ev => {\n\t\tif(ev.pressure !== 0)\n\t\t\tNodeHoverInfo(ev, false);\n\n\t\tevent = ev;\n\t});\n\n\tclearTimeout(NodeHoverInfo._timer);\n\tNodeHoverInfo._timer = setTimeout(()=> {\n\t\tToolTip.set(ev.iface, event, 'node');\n\t\tNodeHoverInfo._show = true;\n\t}, 400);\n}\n\nNodeHoverInfo._timer = null;\nNodeHoverInfo._show = false;\nNodeHoverInfo._move = ()=>{};","function PortHoverInfo(ev, hovered){\n\t$(window).off('pointermove', PortHoverInfo._move);\n\n\tif(!hovered){\n\t\tclearTimeout(PortHoverInfo._timer);\n\t\tif(PortHoverInfo._show) ToolTip.set();\n\t\tPortHoverInfo._show = false;\n\t\treturn;\n\t}\n\n\t// Skip if any button was pressed\n\tif(ev.event.pressure !== 0){\n\t\tPortHoverInfo(ev, false);\n\t\treturn;\n\t}\n\n\tlet target = $(ev.event.target);\n\tif(!!target.attr('title')) target.attr('title', '');\n\n\tlet event = ev.event;\n\t$(window).on('pointermove', PortHoverInfo._move = ev => {\n\t\tif(ev.pressure !== 0)\n\t\t\tPortHoverInfo(ev, false);\n\t\t\t\n\t\tevent = ev;\n\t});\n\n\tclearTimeout(NodeHoverInfo._timer);\n\tclearTimeout(PortHoverInfo._timer);\n\tPortHoverInfo._timer = setTimeout(()=> {\n\t\tToolTip.set(ev.port, event, 'port');\n\t\tPortHoverInfo._show = true;\n\t}, 400);\n}\n\nPortHoverInfo._timer = null;\nPortHoverInfo._show = false;\nPortHoverInfo._move = ()=>{};","function SuggestNodeTypeCaster(ev){\n\tif(Blackprint.nodes.Data == null)\n\t\treturn;\n\n\tlet { cable, port, target, handler } = ev;\n\n\tif(target.iface.namespace === \"BP/Fn/Input\") return;\n\tif(target.iface.namespace === \"BP/Fn/Output\") return;\n\n\tlet input, output;\n\tif(cable.owner.source === 'input'){\n\t\tinput = port;\n\t\toutput = target;\n\t}\n\telse {\n\t\tinput = target;\n\t\toutput = port;\n\t}\n\n\t// Skip untyped port\n\tif(input.type.any || output.type.any) return;\n\n\tif(output.type === Number && input.type === String){\n\t\thandler(() => {\n\t\t\tlet iface = SuggestNodeTypeCaster.createNode('Data/Number/To/String', ev, input);\n\n\t\t\tif(cable.owner === output){\n\t\t\t\tiface.input.In.connectCable(cable);\n\t\t\t\tiface.output.Out.connectPort(input);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tiface.input.In.connectPort(output);\n\t\t\t\tiface.output.Out.connectCable(cable);\n\t\t\t}\n\t\t});\n\t}\n\telse if(output.type !== Function && input.type === Function){\n\t\thandler(() => {\n\t\t\tlet iface = SuggestNodeTypeCaster.createNode('Data/Any/To/Trigger', ev, input);\n\n\t\t\tif(cable.owner === output){\n\t\t\t\tiface.input.Value.connectCable(cable);\n\t\t\t\tiface.output.Call.connectPort(input);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tiface.input.Value.connectPort(output);\n\t\t\t\tiface.output.Call.connectCable(cable);\n\t\t\t}\n\t\t});\n\t}\n\telse if(output.type === String && input.type === Number){\n\t\thandler(() => {\n\t\t\tlet iface = SuggestNodeTypeCaster.createNode('Data/String/To/Number', ev, input);\n\n\t\t\tif(cable.owner === output){\n\t\t\t\tiface.input.In.connectCable(cable);\n\t\t\t\tiface.output.Out.connectPort(input);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tiface.input.In.connectPort(output);\n\t\t\t\tiface.output.Out.connectCable(cable);\n\t\t\t}\n\t\t});\n\t}\n}\n\nSuggestNodeTypeCaster.primitive = new Set([String, Number, Boolean, BigInt]);\nSuggestNodeTypeCaster.createNode = function(namespace, ev, input){\n\tlet instance =  ev.instance;\n\tlet rect = input.iface.input._portList.getElement(input).getBoundingClientRect();\n\tlet container = instance.scope('container');\n\n\tlet Ofst = container.offset;\n\tlet y = (rect.y - container.pos.y - Ofst.y) / container.scale\n\tlet x = (rect.x - container.pos.x - Ofst.x) / container.scale\n\tlet iface = instance.createNode(namespace, {x, y});\n\n\tsetTimeout(()=> {\n\t\tif(iface.w == null) return;\n\t\tiface.moveNode({\n\t\t\tstopPropagation(){}, preventDefault(){},\n\t\t\ttarget: iface.$el[0],\n\t\t\tmovementX: -(iface.w + 20) * container.scale,\n\t\t\tmovementY: -2\n\t\t});\n\t}, 300);\n\n\treturn iface;\n}","// New engine instance (separated from the editor) that can be accessed from the console\nlet engine = new Blackprint.Engine();\nwindow.engine = engine;\n\nconsole.log(\"-- Do you want to run a sample for engine-js?\");\nconsole.log(\"-- Call engineTest() from this console\");\n\nwindow.engineTest = async function(){\n\tif(!window.confirm(\"This action will clear current workspace, are you sure to continue?\"))\n\t\treturn;\n\n\t// These nodes are the handler that registered from ./register-handler.js\n\tvar registered = Blackprint.nodes;\n\n\tconsole.log(\"-- The sketch and the console was imported from same JSON example, but they're imported in different engine. Any modification from the sketch page will not change the imported console nodes.\");\n\n\t// Go to first sketch page\n\tawait views.goto('/sketch/1');\n\n\t// Clear all sketch page\n\tSketchList.forEach(sketch => sketch.clearNodes());\n\n\t// For the editor (sketch page)\n\tawait SketchList[0].importJSON(sampleList[\"Random Multiply\"]);\n\n\t// For console (on DevTools)\n\tawait engine.importJSON(sampleList['Random Multiply']);\n\n\n\t// Just some information when using on DevTools console\n\tconsole.warn(`The engine nodes on this console is using sample from 'Random Multiply'\\n> %csampleList[\"Random Multiply\"]`, \"color: gray\");\n\tconsole.warn('If you want to import your JSON, don\\'t forget to run engine.clearNodes() first');\n\n\tconsole.log(`For obtain engine node:%c\nvar button = engine.iface.myButton;\nvar input = engine.iface.myInput;\nvar logger = engine.iface.myLogger;\n`, \"color: gray\");\n\tconsole.log(\"To click on invisible button: %cbutton.clicked()\", \"color: gray\");\n\tconsole.log(\"To set the invisible input: %cinput.data.value = 'hello'\", \"color: gray\");\n\tconsole.log(\"Or send the input to the handle output directly: %cinput.ref.Output.Value = 'hello'\", \"color: gray\");\n\tconsole.log(\"To get the logger value: %clogger.ref.Input.Any\", \"color: gray\");\n}","function isConnectablePort(clazz, target){\n\tif(target === clazz)\n\t\treturn true;\n\n\tif(clazz === Object || target === Object) return false;\n\n\tif(clazz.constructor === Array || target.constructor === Array){\n\t\tif(target.constructor === Array){\n\t\t\tlet temp = target;\n\t\t\ttarget = clazz;\n\t\t\tclazz = temp;\n\t\t}\n\n\t\tfor (var i = 0; i < clazz.length; i++) {\n\t\t\tif(isConnectablePort(clazz[i], target))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tif(target.any || clazz.any) return true;\n\tif(target.constructor === Object || clazz.constructor === Object) return false;\n\tif(target.prototype instanceof clazz || clazz.prototype instanceof target)\n\t\treturn true;\n\n\treturn false;\n}","$(function(){\n\twindow.BPEditor = {\n\t\tDialog: Swal.fire.bind(Swal),\n\t};\n\n\t// Fix for Telegram who encode the URL after the hashtag\n\tif((location.hash.includes('%23'))){\n\t\tlocation.hash = decodeURIComponent(location.hash)\n\t}\n\n\t// Global sf.loader background load's progress bar\n\tsf.loader.onProgress(function(loaded, total){\n\t\tLoading.set(`Loading ${loaded}/${total}`);\n\t\tif(loaded === total) Loading.set();\n\t}, true);\n\n\tlet importSketch = sf.URI.data.importSketch;\n\tif(importSketch !== void 0){\n\t\trequestAnimationFrame(function(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\timportSketch = pako.inflateRaw(Base64.toUint8Array(importSketch[0]), {to: 'string'});\n\t\t\t\tSketchImporter.loadJSON(importSketch);\n\t\t\t}, 500);\n\t\t});\n\t}\n\n\tlet exampleURL = sf.URI.data.openExample;\n\tif(importSketch == null && exampleURL !== void 0){\n\t\trequestAnimationFrame(()=> {\n\t\t\tsetTimeout(()=> ModuleExampleList.addExampleFromURL(exampleURL[0]), 500);\n\t\t});\n\t}\n\n\tsetTimeout(()=> {\n\t\t// Disable VFX for mobile device or non-chrome browser\n\t\tif(/android|ios/i.test(navigator.userAgent) || !/chrome/i.test(navigator.userAgent)){\n\t\t\tsf.model('header').disableVFX();\n\t\t}\n\n\t\tif(views.data.page != null && /\\/sketch\\/[0-9]/.test(views.currentPath))\n\t\t\tviews.goto(\"/sketch/1\");\n\t}, 100);\n\n\t$(sf.Window).on('resize', ev => {\n\t\tlet height = ev.target.innerHeight;\n\t\tlet width = ev.target.innerWidth;\n\n\t\tfor (var i = 0; i < SketchList.length; i++) {\n\t\t\tif(SketchList[i] == null) continue;\n\n\t\t\tlet container = SketchList[i].scope('container');\n\t\t\tif(container.origSize.h < height)\n\t\t\t\tcontainer.origSize.h = container.size.h = height;\n\n\t\t\tif(container.origSize.w < width)\n\t\t\t\tcontainer.origSize.w = container.size.w = width;\n\t\t}\n\t});\n\n\t// Auto switch to dev mode when being used on localhost\n\t$(function(){\n\t\tif(/localhost|127\\.0\\.0\\.1|\\.repl\\.co/.test(location.hostname) && !location.pathname.includes('/dev.html'))\n\t\t\tlocation.pathname = '/dev.html';\n\t});\n\n\tif(window.___browserSync___ != null){\n\t\twindow.___browserSync___.socket.on('bp-docs-append', function(data){\n\t\t\tBlackprint.Sketch.registerDocs(data);\n\t\t});\n\t}\n\n\t// Always use the newest module\n\tBlackprint.onModuleConflict = async map =>{\n\t\t// ToDo: show popup to select if user is prefer old version or the newest version\n\t\treturn Object.entries(map).forEach(v => v.useOld = false);\n\t};\n\n\tif(navigator.serviceWorker != null)\n\t\tnavigator.serviceWorker.register(\"/service-worker.js\");\n\n\tBlackprint.on('menu.create.node', function(ev){\n\t\tlet { list, isSuggestion } = ev;\n\t\tif(!isSuggestion) return;\n\n\t\tdelete list.Example; // Delete example nodes from suggestion\n\t});\n});\n\nwindow.Events = sf.events;\n$(function(){\n\tif(window.SmallNotif == null)\n\t\talert(\"This editor doesn't seems supported for your browser, please try using Chromium based browser instead\");\n\n\t// Register event listener\n\tEvents.register('DBReady', false);\n\tEvents.register('EditorWorkingDirReady', false);\n\tEvents.register('EditorWorkingDirChange');\n});","// Use sf.model so we can use the hot reload feature\nsf.model('keyboard-shortcut', My => {\n\tMy.workspacePanel = sf.model(\"project-panel-workspace\"); // panel on the left\n\tMy.projectList = sf.model(\"project-list\"); // project tabs on top\n\n\tsetTimeout(init, 1);\n\tfunction init(){\n\t\tif(My.initialized) return;\n\t\tMy.initialized = true;\n\n\t\t$(window).on('keydown', My.workspaceShortcuts);\n\t}\n\n\tMy.workspaceShortcuts = function(ev){\n\t\tif(ev.ctrlKey && ev.key === 's')\n\t\t\tMy.saveInstanceTab(ev);\n\t\telse if(ev.ctrlKey && ev.key === 'o')\n\t\t\tMy.loadInstanceTab(ev);\n\t\telse if(ev.altKey && /^[0-9]$/m.test(ev.key))\n\t\t\tMy.switchInstanceTab(+ev.key);\n\t\telse if(ev.altKey && ev.key === 'w')\n\t\t\tMy.projectList.closeTab(My.projectList.getActiveTab());\n\t\telse return;\n\n\t\tev.preventDefault();\n\t}\n\n\tMy.saveInstanceTab = function(ev){\n\t\tMy.projectList.saveTab(true);\n\t}\n\n\tMy.loadInstanceTab = function(ev){\n\t\tconsole.log('load');\n\t}\n\n\tMy.switchInstanceTab = function(index){\n\t\tlet { projectList } = My;\n\n\t\tif(index === 0) index = 10;\n\t\tindex--;\n\n\t\tlet tab = projectList.list[index];\n\n\t\tif(tab == null) projectList.createTab();\n\t\telse projectList.switchTab(tab);\n\t}\n});","var sampleList = {\n\t\"Empty Sketch\": {\"moduleJS\":[\"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9.x/dist/nodes-decoration.mjs\"], \"instance\":{\"Decoration/Text/Notes\":[{\"i\":0,\"x\":93,\"y\":89,\"z\":0,\"data\":{\"value\":\"Hiya!\\n\\nI'm a placeholder for this sketch container.\\n\\nYou can delete me by right clicking my header, and create new nodes by right clicking the container.\"}}]}},\n\n\t\"Random Multiply\": {\"moduleJS\":[\"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9.x/dist/nodes-example.mjs\"], \"instance\": {\"Example/Math/Random\":[{\"i\":0,\"x\":298,\"y\":73,\"output\":{\"Out\":[{\"i\":2,\"name\":\"A\"}]}},{\"i\":1,\"x\":298,\"y\":239,\"output\":{\"Out\":[{\"i\":2,\"name\":\"B\"}]}}],\"Example/Math/Multiply\":[{\"i\":2,\"x\":525,\"y\":155,\"output\":{\"Result\":[{\"i\":3,\"name\":\"Any\"}]}}],\"Example/Display/Logger\":[{\"i\":3,\"id\":\"myLogger\",\"x\":763,\"y\":169}],\"Example/Button/Simple\":[{\"i\":4,\"id\":\"myButton\",\"x\":41,\"y\":59,\"output\":{\"Clicked\":[{\"i\":2,\"name\":\"Exec\"}]}}],\"Example/Input/Simple\":[{\"i\":5,\"id\":\"myInput\",\"x\":38,\"y\":281,\"data\":{\"value\":\"saved input\"},\"output\":{\"Changed\":[{\"i\":1,\"name\":\"Re-seed\"}],\"Value\":[{\"i\":3,\"name\":\"Any\"}]}}]}},\n\n\t\"Audio and Video\": {\"moduleJS\":[\"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9.x/dist/nodes-input.mjs\",\"https://cdn.jsdelivr.net/npm/@blackprint/nodes-multimedia@0.5.x/dist/nodes-multimedia.mjs\",\"https://cdn.jsdelivr.net/npm/@blackprint/nodes-pixi.js@0.5.x/dist/nodes-pixijs.mjs\",\"https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9.x/dist/nodes-decoration.mjs\"], \"instance\": {\"Input/UI/File\":[{\"i\":0,\"x\":119,\"y\":120,\"z\":12,\"comment\":\"Drag and drop your video file here\",\"output\":{\"URL\":[{\"i\":7,\"name\":\"URL\"}]}},{\"i\":1,\"x\":180,\"y\":1096,\"z\":2,\"comment\":\"Drag and drop your .gif file here\"}],\"Multimedia/Audio/Input/Microphone\":[{\"i\":2,\"x\":455,\"y\":352,\"z\":11,\"comment\":\"Use this if you want to sing :)\"}],\"Multimedia/Audio/Output/Destination\":[{\"i\":3,\"x\":1138,\"y\":131,\"z\":8}],\"Multimedia/Audio/Effect/PingPongDelay\":[{\"i\":4,\"x\":808,\"y\":127,\"z\":7,\"comment\":\"An audio effect for you to try\",\"data\":{\"mix\":0.5,\"time\":0.3,\"feedback\":0.5},\"input_d\":{\"Mix\":0,\"Time\":0,\"Feedback\":0},\"output\":{\"Out\":[{\"i\":3,\"name\":\"In\"}]}}],\"Input/UI/Button\":[{\"i\":5,\"x\":91,\"y\":198,\"z\":4,\"output\":{\"Clicked\":[{\"i\":7,\"name\":\"Play\"}]}},{\"i\":6,\"x\":93,\"y\":287,\"z\":5,\"output\":{\"Clicked\":[{\"i\":7,\"name\":\"Pause\"}]}}],\"Multimedia/Player\":[{\"i\":7,\"x\":399,\"y\":126,\"z\":13,\"comment\":\"Don't forget to connect AudioNode to Destination, or you willn't hear any sound\",\"input_d\":{\"Seek\":0},\"output\":{\"AudioNode\":[{\"i\":4,\"name\":\"In\"}],\"Element\":[{\"i\":10,\"name\":\"Source\",\"parentId\":0},{\"i\":17,\"name\":\"Element\",\"parentId\":1}],\"MediaStreamVideo\":[{\"i\":9,\"name\":\"VideoTrack\",\"parentId\":0}]},\"output_sw\":{\"MediaStream\":1},\"_cable\":{\"Element\":[{\"x\":763,\"y\":192,\"branch\":[{\"x\":775,\"y\":596,\"branch\":[{\"id\":0},{\"id\":1}]}]}],\"MediaStreamVideo\":[{\"x\":820,\"y\":261,\"branch\":[{\"x\":1023,\"y\":259,\"branch\":[{\"id\":0}]}]}]}}],\"Input/UI/SliderBox\":[{\"i\":8,\"x\":592,\"y\":663,\"z\":10,\"data\":{\"0\":{\"value\":0,\"min\":-100,\"max\":100,\"step\":0.1,\"hideUnusedPort\":false},\"1\":{\"value\":0,\"min\":-100,\"max\":100,\"step\":0.1},\"2\":{\"value\":1,\"min\":-100,\"max\":100,\"step\":0.1,\"hideUnusedPort\":false},\"3\":{\"value\":1,\"min\":-100,\"max\":100,\"step\":0.1,\"hideUnusedPort\":false},\"4\":{\"value\":0,\"min\":-100,\"max\":100,\"step\":0.1}},\"output\":{\"0\":[{\"i\":10,\"name\":\"x\"}],\"1\":[{\"i\":10,\"name\":\"y\"}],\"2\":[{\"i\":10,\"name\":\"ScaleX\"}],\"3\":[{\"i\":10,\"name\":\"ScaleY\"}],\"4\":[{\"i\":10,\"name\":\"Rotate\"}]}}],\"Multimedia/Display/Video\":[{\"i\":9,\"x\":1065,\"y\":298,\"z\":9}],\"Pixi.js/Sprite\":[{\"i\":10,\"x\":824,\"y\":612,\"z\":14,\"output\":{\"Sprite\":[{\"i\":12,\"name\":\"Sprite\"}]}},{\"i\":11,\"x\":695,\"y\":1084,\"z\":16,\"input_d\":{\"x\":0,\"y\":0,\"ScaleX\":1,\"ScaleY\":1,\"Rotate\":0}}],\"Pixi.js/Display/Canvas\":[{\"i\":12,\"x\":1062,\"y\":554,\"z\":6},{\"i\":13,\"x\":1019,\"y\":1058,\"z\":17,\"comment\":\"I can render multiple sprite into one canvas. Let's give it a try by connect to GIF and a video sprice\"}],\"Pixi.js/Converter/GIF\":[{\"i\":14,\"x\":405,\"y\":1096,\"z\":3,\"input_d\":{\"URL\":\"\"}}],\"Decoration/Group/Default\":[{\"i\":15,\"x\":137,\"y\":925,\"z\":1,\"data\":{\"width\":1218,\"height\":414,\"title\":\"GIF Player\",\"color\":\"\"}},{\"i\":16,\"x\":58,\"y\":25,\"z\":0,\"data\":{\"width\":1360,\"height\":851,\"title\":\"Video Player\",\"color\":\"\"}}],\"BP_Editor/LeftPanel/Preview\":[{\"i\":17,\"x\":827,\"y\":508,\"z\":15}]}},\n};\n\nif(localStorage.offlineSampleModule === '1'){\n\tfor(let key in sampleList){\n\t\tdelete sampleList[key].moduleJS;\n\t}\n}","// This only available on development mode editor (as this have eval, it can be dangerous)\nif(sf.hotReload != null && location.pathname === '/dev.html' && false){ // Disable this feature for now\n\tsf.loader.js(['https://cdn.jsdelivr.net/npm/sass.js@0.11.1/dist/sass.sync.js']);\n\tsf.parser = {\n\t\tparseTemplate(text){\n\t\t\ttext = text.split(/^## (?<![0-9a-zA-Z\\-_])/gm);\n\t\t\ttext.shift(); // Remove comment section\n\n\t\t\tlet list = [];\n\t\t\tfor (let i=0; i < text.length; i++) {\n\t\t\t\tlet temp = text[i].trim().split('\\n');\n\t\t\t\tlet section = temp.shift().trim().split('.');\n\t\t\t\tlet attribute = section.slice(1);\n\t\t\t\tsection = section[0];\n\n\t\t\t\tlist.push({\n\t\t\t\t\tsection,\n\t\t\t\t\tcontent: temp.join('\\n'),\n\t\t\t\t\tattribute,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn list;\n\t\t},\n\n\t\tcssGlobal: document.header,\n\t\tloadedCSS: {},\n\t\tasync load(path, template){\n\t\t\tlet css = this.loadedCSS[path] = '';\n\n\t\t\tif(this.cssGlobal == null){\n\t\t\t\tthis.cssGlobal = $('<style type=\"text/css\"></style>');\n\t\t\t\t$(document.head).append(this.cssGlobal);\n\t\t\t}\n\n\t\t\tfor (let i=0; i < template.length; i++) {\n\t\t\t\tlet temp = template[i];\n\n\t\t\t\tif(temp.section === 'html'){\n\t\t\t\t\twindow.templates[path] = temp.content;\n\t\t\t\t\twindow.templates = window.templates; // Trigger hot reload\n\t\t\t\t}\n\t\t\t\telse if(temp.section === 'js-global'){\n\t\t\t\t\ttemp.content = temp.content.replace(/\\#this\\.path/g, JSON.stringify(path));\n\t\t\t\t\teval(temp.content);\n\t\t\t\t}\n\t\t\t\telse if(temp.section === 'css-global'){\n\t\t\t\t\tcss += '\\n'+temp.content;\n\t\t\t\t}\n\t\t\t\telse if(temp.section === 'scss-global'){\n\t\t\t\t\tawait new Promise(resolve => Sass.compile(temp.content, function(result) {\n\t\t\t\t\t\tcss += '\\n'+result.text;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.loadedCSS[path] = css;\n\t\t\tthis.cssGlobal.text(Object.values(this.loadedCSS).join('\\n'));\n\t\t},\n\t};\n}","window._BPEditorUtils ??= {};\nvar utils = window._BPEditorUtils;\n\nutils._nodeGitHub ??= {};\nutils.openNodeSource = async function(node){\n\t// If Blackprint.Interface\n\tif(node.node != null && !(node instanceof Blackprint.Node))\n\t\tnode = node.node;\n\n\tlet namespace = node.iface.namespace;\n\tlet objPath = namespace.split('/');\n\tlet nodes = Blackprint.nodes;\n\n\tlet toast = SmallNotif.add(\"Obtaining path\", 'yellow', false);\n\tlet result = false;\n\tlet githubURL;\n\n\ttry{\n\t\tfor (var i = 0; i < objPath.length; i++) {\n\t\t\tnodes = nodes[objPath[i]];\n\t\t\tif(nodes == null) throw new Error(\"Node namespace was not found: \"+namespace);\n\t\t}\n\n\t\tif(nodes._scopeURL == null)\n\t\t\tthrow new Error(\"Can't view source because the node doesn't seems to be loaded from known URL.\");\n\n\t\tif(nodes.isGenerated)\n\t\t\tthrow new Error(\"Can't view source of node that was dynamically generated\");\n\n\t\t// For JSDelivr\n\t\tif(utils._nodeGitHub[nodes._scopeURL] == null){\n\t\t\tlet url = nodes._scopeURL;\n\t\t\tlet ghName;\n\t\t\tlet packageInfo;\n\n\t\t\tif(url.includes('@dist/') && url.includes('/gh/'))\n\t\t\t\tghName = url.match(/\\/\\/cdn.jsdelivr.net\\/gh\\/(.*?)@dist\\//)[1];\n\t\t\telse {\n\t\t\t\tif(!url.includes('/dist/')) throw new Error(\"'/dist/' was not found on the URL: \"+url);\n\n\t\t\t\ttoast.message = 'Obtaining \"package.json\"';\n\t\t\t\turl = url.split('/dist/')[0];\n\t\n\t\t\t\ttry {\n\t\t\t\t\tpackageInfo = await $.getJSON(`${url}/package.json`);\n\t\t\t\t} catch(e){\n\t\t\t\t\tthrow new Error(\"Failed to fetch '/package.json'\");\n\t\t\t\t}\n\t\n\t\t\t\tif(packageInfo.repository == null)\n\t\t\t\t\tthrow new Error(\"'repository' field was not found on package.json file\");\n\n\t\t\t\tghName = packageInfo.repository.url\n\t\t\t\t\t.replace(/\\.git$/m, '')\n\t\t\t\t\t.replace(/https?:\\/\\/.*?\\//, '')\n\t\t\t\t\t.replace(/@/, '');\n\t\t\t}\n\n\t\t\t// var commitHash = await $.getJSON(`https://api.github.com/repos/${ghName}/commits?per_page=1`);\n\t\t\tutils._nodeGitHub[nodes._scopeURL] = `https://cdn.jsdelivr.net/gh/${ghName}@latest`;\n\n\t\t\tlet sourceAlias = packageInfo?.blackprint?.source;\n\t\t\tif(sourceAlias != null){\n\t\t\t\tfor(let key in sourceAlias){\n\t\t\t\t\tif(nodes._scopeURL.includes('/'+key)){\n\t\t\t\t\t\tutils._nodeGitHub[nodes._scopeURL] += '/'+sourceAlias[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse utils._nodeGitHub[nodes._scopeURL] += '/src';\n\t\t}\n\n\t\tgithubURL = utils._nodeGitHub[nodes._scopeURL];\n\t\tnamespace = namespace.replace(/^.*?\\//m, '');\n\t\t// return githubURL + '/' + namespace + '.js';\n\n\t\ttry {\n\t\t\ttoast.message = `Obtaining \"${namespace}.js\"`;\n\t\t\tresult = await $.get(githubURL + '/' + namespace + '.js');\n\t\t} catch(e){\n\t\t\tconsole.error(`File can't be loaded: \"${githubURL + '/' + namespace + '.js'}\"`);\n\t\t\tthrow new Error(\"Source was not found, maybe the settings on package.json was incorrect.\");\n\t\t}\n\t} catch(e) {\n\t\tSmallNotif.add(e.message || \"Something went wrong\", 'red');\n\t\tconsole.error(e);\n\t}\n\n\tlet list = SmallNotif.list;\n\tlet ii = list.indexOf(toast);\n\n\tif(ii !== -1) list.splice(ii, 1);\n\n\treturn { code: result, githubURL, scopeURL: nodes._scopeURL };\n}","Blackprint.registerNode('BP_Editor/LeftPanel/Preview',\nclass extends Blackprint.Node {\n\tstatic input = { Element };\n\tconstructor(instance){\n\t\tsuper(instance);\n\n\t\tlet iface = this.setInterface();\n\t\tiface.title = \"Editor Preview\"\n\t\tiface.description = \"Put element on the left panel\";\n\n\t\t// Manually call 'update' when any cable from input port was disconnected\n\t\tthis.iface.on('cable.disconnect', {slot: 'bp-editor'}, ({ port })=> {\n\t\t\tif(port.source === 'input') this.update();\n\t\t});\n\t}\n\n\tupdate(){\n\t\tlet { page } = this.instance;\n\n\t\tlet el = this.input.Element;\n\n\t\t// Remove first from preview if the input is null\n\t\tif(el == null)\n\t\t\tpage.panels.left.setPreview(el);\n\n\t\tthis._returnOldEl();\n\n\t\tlet left = this.instance.page.panels.left;\n\t\tif(el != null){\n\t\t\tleft._oldEl = el;\n\t\t\tleft._oldParentEl = el.parentNode;\n\t\t\tleft._oldNextEl = el.nextSibling;\n\t\t}\n\t\telse left._oldEl = left._oldParentEl = left._oldNextEl = null;\n\t\tpage.panels.left.setPreview(el);\n\t}\n\n\t_returnOldEl(){\n\t\tlet left = this.instance.page.panels.left;\n\n\t\tif(left._oldEl != null && left._oldParentEl != null)\n\t\t\tleft._oldParentEl.insertBefore(left._oldEl, left._oldNextEl);\n\t}\n\n\tdestroy(){\n\t\tif(this.input.Element != null){\n\t\t\tthis.instance.page.panels.left.setPreview(null);\n\t\t\tthis._returnOldEl();\n\t\t}\n\t}\n});\n\nBlackprint.registerNode('BP_Editor/Workspace/Assets/File',\nclass extends Blackprint.Node {\n\tstatic output = { Handle: FileSystemFileHandle };\n\tconstructor(instance){\n\t\tsuper(instance);\n\n\t\tlet iface = this.setInterface();\n\t\tiface.title = \"Workspace File\"\n\t\tiface.data = {};\n\n\t\tthis.workspace = sf.model(\"project-panel-workspace\")._utils;\n\t}\n\n\timported(data){\n\t\tlet iface = this.iface;\n\t\tiface.data.path = data.path;\n\n\t\tlet name = data.path;\n\t\tiface.description = name.slice(name.indexOf('/assets')).slice(-25);\n\n\t\tthis.workspace.on('file.change', this._fileChange = async ev => {\n\t\t\tthis.output.Handle = this.workspace.resolvePath(data.path)?.handle || null;\n\t\t});\n\n\t\tthis._fileChange(data);\n\t}\n\n\tdestroy(){\n\t\tthis.workspace.off('file.change', this._fileChange);\n\t}\n});\n\nBlackprint.registerNode('BP_Editor/Workspace/Assets/Directory',\nclass extends Blackprint.Node {\n\tstatic output = { Handle: FileSystemDirectoryHandle };\n\tconstructor(instance){\n\t\tsuper(instance);\n\n\t\tlet iface = this.setInterface();\n\t\tiface.title = \"Workspace Dir\"\n\t\tiface.data = {};\n\n\t\tthis.workspace = sf.model(\"project-panel-workspace\")._utils;\n\t}\n\n\timported(data){\n\t\tlet iface = this.iface;\n\t\tiface.data.path = data.path;\n\n\t\tlet name = data.path;\n\t\tiface.description = name.slice(name.indexOf('/assets')).slice(-25);\n\n\t\tthis.workspace.on('file.change', this._fileChange = async ev => {\n\t\t\tthis.output.Handle = this.workspace.resolvePath(data.path)?.handle || null;\n\t\t});\n\n\t\tthis._fileChange(data);\n\t}\n\n\tdestroy(){\n\t\tthis.workspace.off('file.change', this._fileChange);\n\t}\n});\n\nsetTimeout(() => {\n\tBlackprint.nodes.BP_Editor.hidden = true;\n}, 1000);","// This project is using file-system directory structure routes\n// You can just easily add .sf file inside the views-route\n\n// ====== Main content routes ======\nvar views = (new sf.Views('vw-ground', 'page')) // page = http://url.com/#page/...\n.on('finish', function(current, target, data){\n\t// Skip page animation when switching between sketch page\n\tif(current.startsWith('/sketch/') && target.startsWith('/sketch/')){\n\t\tif(views.lastSibling) $(views.lastSibling).addClass('disable-anim');\n\t\tif(views.showedSibling) $(views.showedSibling).removeClass('disable-anim');\n\t\telse $(views.currentDOM).removeClass('disable-anim');\n\t\treturn;\n\t}\n\n\t// Add animation\n\tanimatePageTransition(views);\n});\n\n// Increase views limit from 3 into 100\nviews.maxCache = 100;\n\n\n// ====== Modal content routes ======\nvar modal = (new sf.Views('vw-modal', false)); // false = We don't need to use hashtag route\n\n\n// ====== Handle any cross domain URL ======\n// Will throw error if this was not being set\nsf.Views.onCrossing = function(url, target){\n\twindow.open(url, '_blank');\n}\n\n\n// === Function for transitioning page ===\n\nvar transitioning = 0;\nfunction animatePageTransition(views){\n\tif(views.lastSibling)\n\t\t$(views.lastSibling).animateKey('scaleDown', 0.6, function(){\n\t\t\t$(this).addClass('disable-anim');\n\t\t});\n\n\tif(views.showedSibling)\n\t\t$(views.showedSibling).removeClass('disable-anim').animateKey('scaleUpDown', {\n\t\t\tduration:0.6,\n\t\t\tdelay:0.3,\n\t\t\tvisible:false\n\t\t});\n\n\t// Make sure showed element is not hidden after animation\n\tclearTimeout(transitioning);\n\ttransitioning = setTimeout(function(){\n\t\ttransitioning = false;\n\t\t$(views.relatedDOM).removeClass('disable-anim');\n\t}, 1000);\n}"]}