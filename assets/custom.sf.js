{async function imports(e){return"undefined"!=typeof sf&&void 0!==sf.loader?await sf.loader.mjs(e):Promise.all(e.map((e=>import(e))))}imports.task=function(){return"undefined"!=typeof sf&&void 0!==sf.loader?sf.loader.task:null},window.templates||(window.templates={});var _$_=sf.dom||sf.$,__tmplt=window.templates,_sf_internal=window._sf_internal=window._sf_internal||{body_map:{},_replace(e,t){let o=_$_(t);return this.body_map[e]&&this.body_map[e].remove(),this.reinitViews&&this.reinitViews(o),this.body_map[e]=o},append(e,t){_$_(document.body).append(this._replace.apply(this,arguments))},prepend(e,t){_$_(document.body).prepend(this._replace.apply(this,arguments))}};__tmplt["component/dropdown.sf"]='<drop-down class="dropdown-menu {{hidden}}" style="display: {{visible ? \'block\' : \'none\'}};\r\n    transform: translate({{x | 0}}px, {{y | 0}}px);"><div class="first" style="display: {{!title && \'none\'}}">{{title || \'\'}}</div><ul><li sf-each="x in options" :class="{{x.divider ? \'divider\' : \'\'}} {{x.disabled ? \'disabled\' : \'\'}}" title="{{x.info || \'\'}}">{{@if x.title !== undefined: {[<a>]} if(x.icon !== void 0){ if(x.icon.includes(\'//\')) {[<img class="dropdown-icon" :src="{{x.icon}}">]}; else {[<i class="dropdown-icon {{x.icon}}"></i>]}; } {[<div>{{ x.title }}</div>]} if(x.deep !== void 0) {[<i class="{{ root.icon.more }} has-deep"></i>]}; {[</a>]} }}</li></ul></drop-down>';var DropDown=sf.model("dropdown",(function(e){e.menus=[],e.onCancel=void 0,e.className="",e.pendingDeepOpen=!1,e.pendingDeepOpen_=0,e.icon={more:"fa fa-chevron-right"},e.show=function(i,{x:l,y:s,event:a,element:d,title:c,className:r}){if(0!==e.menus.length?e.menus.splice(0):function(){if(t)return;n.insertBefore(sf.Window.source(e.$el)),setTimeout((function(){n.addClass("show"),$(sf.Window).on("pointerdown",o),$(sf.Window).once("contextmenu",(e=>e.preventDefault())),t=!0}),10)}(),i.title=c,void 0!==d){let e=d.getBoundingClientRect();i.x=e.x+5,i.y=e.y+e.height}else void 0!==l?(i.x=l,i.y=s):(i.x=a.x,i.y=a.y,i.event=a);for(var p=i.length-1;p>=0;p--)i[p].hide&&i.splice(p,1);return e.className=r||"",e.menus.push(i),e},e.hide=function(){for(var t=0;t<e.menus.length;t++)e.menus.getElement(t).model.deepRemove();e.pendingDeepOpen=!1,e.pendingDeepOpen_=0,e.menus.splice(0),i(),e.className=""};var t=!1;function o(t){$(t.target).parent("sf-m")[0]!==sf.Window.source(e.$el)&&(i(),e.hide(),e.onCancel&&e.onCancel())}var n=$('<div class="ground-backdrop"></div>');function i(){t=!1,n.removeClass("show"),setTimeout((()=>{n.remove()}),200),$(sf.Window).off("pointerdown",o)}}));sf.component("drop-down",{template:"component/dropdown.sf"},(function(e,t,o){e.visible=!1,e.hidden="hidden",e.options=o,e._parent=o._parent,e.x=o.x,e.y=o.y,e.root=t("dropdown"),e.width=0,e.height=0,e.disabled=!0===o.disabled;for(var n=o.length-1;n>=0;n--)o[n].hide&&o.splice(n,1);var i,l;e.title=o.title,e.init=function(){if(void 0!==o.event){var t=sf.Window.source(e.$el,o.event);if(null===t)return;l=$(t)}else l=e.$el;e.visible=!0;var n=sf.Window.source(e.$el,o.event).querySelector("ul");$.afterRepaint().then((function(){let t=0,o=0,i=e._parent,l=void 0!==i?i.width:0;for(;void 0!==i;)t+=i.x,o+=i.y,i=i._parent;e.width=n.offsetWidth,e.height=n.offsetHeight,t+e.x+e.width>sf.Window.focus.innerWidth&&(e.x-=e.width+l),o+e.y+e.height>sf.Window.focus.innerHeight&&(e.y-=e.height),e.hidden=""}));for(var s=e.options,a=0;a<s.length;a++){let t=s[a];const o=$(s.getElements(a));if(void 0===t.deep)o.on("mouseover",(function(o){e.root.pendingDeepOpen=o.target,clearTimeout(e.root.pendingDeepOpen_),e.root.pendingDeepOpen_=setTimeout((()=>{void 0!==i&&(e.deepRemove(),i=void 0),t.hover&&t.hover.apply(t.context,t.args)}),200)})),t.callback&&o.on("click",(function(o){void 0!==t.unhover&&t.unhover.apply(t.context,t.args),t.callback.apply(t.context,t.args),e.root.hide()})),t.unhover&&o.on("mouseout",(function(e){t.unhover.apply(t.context,t.args)}));else{function d(o){void 0!==i&&e.deepRemove(),void 0!==t.hover&&t.hover.apply(t.context,t.args);var s=t.deep;if(s.event=o,s._parent=e,void 0!==s.el)return i=s.el,s.el.model.y=s.yi-(s.ul?.scrollTop||0),void l.append(s.el);s.ul=e.$el.children("ul")[0],s.x=n.offsetWidth,s.yi=o.target.offsetTop-7,s.y=s.yi-(s.ul?.scrollTop||0),s.el=i=new $DropDown(s,e.$space),i.sf$noGC=!0,l.append(i)}o.on("mouseover",(function(t){e.root.pendingDeepOpen=t.target,clearTimeout(e.root.pendingDeepOpen_),e.root.pendingDeepOpen_=setTimeout((()=>{e.root.pendingDeepOpen===t.target&&d(t)}),200)})),o.on("click",d)}}},e.deepRemove=function(){void 0!==i&&(i.remove(),i.model.deepRemove())}})),__tmplt["component/sketch-panel-bottom.sf"]='<sketch-panel-bottom class="panel {{opened ? \'opened\' : \'\'}}" @contextmenu="SmallNotif.add(\'Some panels still WIP\')"><div class="opener" @click="opened ? closePanel(event) : openPanel()"><i class="fas fa-chevron-{{opened ? \'down\' : \'up\'}}"></i></div><div class="content">This editor still in development (≧▽≦)／<br>I want to make it better and easier to use.<br>Please use right click to open drop down menu for the cable, node, container, or port.</div></sketch-panel-bottom>',sf.component("sketch-panel-bottom",{template:"component/sketch-panel-bottom.sf"},(function(e){function t(){e.$el.css("backdrop-filter","none"),setTimeout((()=>e.$el.css("backdrop-filter","blur(1px)")),300)}e.opened=!1,e.init=function(){e.$el.parent("sketch-page")[0].model.panels.bottom=e},e.openPanel=function(){t(),e.opened=!0},e.closePanel=function(o){t(),o.stopPropagation(),e.opened=!1}})),__tmplt["component/sketch-panel-left.sf"]="<sketch-panel-left class=\"panel {{opened ? 'opened' : ''}}\"><div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\"><i class=\"fas fa-chevron-{{opened ? 'left' : 'right'}}\"></i></div></sketch-panel-left>",sf.component("sketch-panel-left",{template:"component/sketch-panel-left.sf"},(function(e){function t(){e.$el.css("backdrop-filter","none"),setTimeout((()=>e.$el.css("backdrop-filter","blur(1px)")),300)}e.opened=!1,e.init=function(){e.$el.parent("sketch-page")[0].model.panels.left=e},e.openPanel=function(){t(),e.opened=!0},e.closePanel=function(o){t(),o.stopPropagation(),e.opened=!1}})),__tmplt["component/sketch-panel-right.sf"]='<sketch-panel-right class="panel {{opened ? \'opened\' : \'\'}} {{nodeSelected == null ? \'hide\' : \'\'}}"><div class="content"><div class="panel-title">Properties</div><div class="default-field"><div class="field"><span class="name">Title:</span> <span>{{data.title}}</span></div><div class="field"><span class="name" title="Registered node path">Namespace:</span> <span style="font-size:12px">{{data.namespace}}</span></div><div class="field"><span class="name" title="Add an ID so you can easily reference to this node from scripts">Node ID:</span> <input sf-bind="data.id" placeholder="..."></div><div class="field"><span class="name">Comment:</span> <textarea sf-bind="data.comment" placeholder="Add node comment here..."></textarea></div></div></div><div class="opener" @click="opened ? closePanel(event) : openPanel()"><i class="fas fa-chevron-{{opened ? \'right\' : \'left\'}}"></i></div></sketch-panel-right>',sf.component("sketch-panel-right",{template:"component/sketch-panel-right.sf"},(function(e){function t(){e.$el.css("backdrop-filter","none"),setTimeout((()=>e.$el.css("backdrop-filter","blur(1px)")),300)}e.opened=!1,e.nodeSelected=null,e.data={title:"",namespace:"",id:"",v2m$id(t){e.nodeSelected.id=t},comment:"",v2m$comment(t){e.nodeSelected.comment=t}},e.init=function(){e.$el.parent("sketch-page")[0].model.panels.right=e},e.hide=function(){e.nodeSelected=null};let o=!0;e.selectNode=function(t){e.nodeSelected=t,e.data.title=t.title,e.data.namespace=t.namespace,e.data.id=t.id||"",e.data.comment=t.comment||"",o&&setTimeout((()=>{o=!1,e.opened=!0}),500)},e.openPanel=function(){t(),e.opened=!0},e.closePanel=function(o){t(),o.stopPropagation(),e.opened=!1}})),__tmplt["component/SmallNotif.sf"]='\x3c!-- /src/component/SmallNotif.sf --\x3e<sf-m name="small.notif"><div class="notify-container right-top"><div sf-each="x in list" class="notify-base notify-{{x.color}}"><span>{{x.message}}</span> <button @click="close(x)" class="close">×</button></div></div></sf-m>';var SmallNotif=sf.model("small.notif",(function(e){const t=sf.$;e.list=[],e.on$list={create(e){t(e).animateKey("fadeInUp")},remove:(e,o)=>(t(e).animateKey("fadeOutUp",o),setTimeout(o,500),!0)},t((function(){0===t('sf-m[name="small.notif"]').length&&t("body").append(t(window.templates["component/SmallNotif.sf"]))})),e.add=function(t,o,n){var i={message:t,color:o||"yellow"};return e.list.push(i),!1!==n&&(i.timer=setTimeout((()=>{e.list.splice(e.list.indexOf(i),1)}),n||1e3+100*t.length)),i},e.close=function(t){e.list.splice(e.list.indexOf(t),1)}}));_sf_internal.append("model/Loading.sf",'\x3c!-- /src/model/loading.sf --\x3e<sf-m name="loading" class="{{showed && \'show\'}}"><span class="icon"><i class="fa fa-fan fa-spin"></i></span> <span class="desc">{{desc}}</span></sf-m>');var Loading=sf.model("loading",(function(e){e.showed=!1,e.desc="",e.set=function(t){t&&!1===e.showed?e.showed=!0:e.showed=!1,e.desc=t}}));_sf_internal.append("model/modal.sf",'\x3c!-- /src/model/modal.sf --\x3e<sf-m name="modal" class="modal {{showed && \'show\'}}"><div class="modal-dialog"><vw-modal></vw-modal></div></sf-m>');var Modal=sf.model("modal",(function(e){e.showed=!1,e.init=e.hotReloaded=function(){e.views=sf.Views.listSelector["vw-modal"]},e.hide=function(){e.showed=!1,e.$el(".modal-dialog").off("pointerdown",e.hide,{outside:!0})},e.goto=function(t){e.views.goto(t),e.showed=!0,setTimeout((()=>{e.$el(".modal-dialog").on("pointerdown",e.hide,{outside:!0})}),400)}}));_sf_internal.append("model/tooltip.sf",'\x3c!-- /src/model/tooltip.sf --\x3e<sf-m name="tooltip" class="{{showed && \'show\'}}" style="transform: translate({{x}}px, {{y}}px);"><div class="desc">{{desc}}</div></sf-m>');var ToolTip=sf.model("tooltip",(function(e){e.showed=!1,e.desc="",e.x=0,e.y=0,e._listener=function(t){e.x=t.clientX,e.y=t.clientY},e.set=function(t,o){null!=o&&(e.x=o.x,e.y=o.y),t&&!1===e.showed?(e.showed=!0,$(window).on("pointermove",e._listener)):(e.showed=!1,$(window).off("pointermove",e._listener)),e.desc=t}}));_sf_internal.append("routes/body.sf",'<div class="background"><div class="img" style="background-image: url(\'/assets/img/background/black3.jpg\')"></div><div class="tile"></div></div>\x3c!-- Model on ./blackprint/header.js --\x3e<sf-m name="header" class="header {{showOptions ? \'sketch-mode\' : \'\'}}"><div class="header-left" @click="mainMenu"><img src="/assets/img/icon/blackprint.png"><div>Blackprint</div><i class="fa fa-caret-down menu-button-hint"></i></div><div class="header-center"><div>A node to node general purpose visual programming</div></div><div class="header-menu"><div class="item-list"><div class="item inactive" @click="SmallNotif.add(\'Please be patient, still work in progress 😅\');" style="color: #2b2b2b" title="Guide/Docs still work in progress"><i class="fa fa-journal-whills"></i></div><div class="item" @click="Modal.goto(\'/module-example-list\')" title="Module examples"><i class="fa fa-map-signs"></i><div class="module-counter">{{_moduleExampleList.length}}</div></div><div class="item" @click="Modal.goto(\'/module-url\')" title="Loaded module"><i class="fa fa-boxes"></i><div class="module-counter">{{_loadedModuleURL.length}}</div></div><div class="item {{cloneActive ? \'active\' : \'\'}}" @click="cloneContainer" title="Show the minimap and open new window"><i class="fa fa-window-restore"></i></div><div class="item {{disableVFXActive ? \'active\' : \'\'}}" @click="disableVFX" title="Improve performance by disable VFX"><i class="fas fa-rocket"></i></div><div class="item {{visualizeActive ? \'active\' : \'\'}}" @click="visualizeFlow" title="Visualize data flow"><i class="fas fa-bezier-curve"></i></div></div><div class="header-zoom"><div style="display: {{info.scale === 100 ? \'none\' : \'block\'}}"><i class="fas fa-search"></i> {{info.scale}}%</div></div></div></sf-m>\x3c!-- Ground viewport --\x3e\x3c!-- ./src/vw-ground/router.js --\x3e<vw-ground style="display: none"></vw-ground><input type="text" id="hidden_text" style="position: fixed; top: 100vh;">\x3c!-- /src/component/dropdown.sf --\x3e<sf-m name="dropdown" class="{{className}}"><drop-down sf-each="val in menus"></drop-down></sf-m>'),sf.model("welcome-text",(function(e){e.toWorkspace=function(){0!==SketchList.length?views.goto("/sketch/1"):e.openExamples()},e.openExamples=function(){Modal.goto("/example-list")}})),sf.model("sketch-pages",(function(e){e.miniViewer={topRight:null,topRightHidden:!0,on$topRight(t){if(null===t)return e.miniViewer.topRightHidden=!0;e.miniViewer.topRightHidden=!1}}})),sf.model("custom-node-editor",(function(My){My.content="// After execute this, you can test it by connecting\n// Input -> Slider and Logger to this node\n\nlet EventSlot = {slot: 'my-unique'}; // To avoid duplicate listener\n\nBlackprint.registerNode('Test/Hello',\nclass extends Blackprint.Node {\n\tstatic input = { // Port\n\t\t'Give Input': Number\n\t}\n\t\n\tstatic output = { // Port\n\t\tOut: Number\n\t}\n\n\tconstructor(instance){\n\t\tsuper(instance);\n\n\t\t// You can remove this if you want to use default node interface/HTML\n\t\tlet iface = this.setInterface('BPIC/Test/Hello');\n\n\t\tiface.title = 'Add +5';\n\t\tiface.description = 'Add 5 to any number';\n\t}\n});\n\n// You can remove this if you're using default node interface/HTML\nBlackprint.Sketch.registerInterface('BPIC/Test/Hello', {\n\thtml: `\n<div class=\"node {{ type || 'general' }}\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\n\n  <div class=\"content\">\n\t<div class=\"left-port\">\n\t  <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\n\t</div>\n\t\n\t<div style=\"display: inline-block; color: yellow\">\n\t\t{{ log }}\n\t</div>\n    \n\t<div class=\"right-port\">\n\t  <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\n\t</div>\n  </div>\n</div>`\n}, class extends Blackprint.Interface {\n\tconstructor(node){\n\t\tsuper(node);\n\n\t\tthis.log = 0;\n\t}\n\n\t// HTML/Interface Init\n\tinit(el){\n\t\tlet iface = this;\n\t\t\n\t\tconst {\n\t\t\tIInput, IOutput, // Port interface (event, utils, etc)\n\t\t\tInput, Output, // Node Port (get/set value)\n\t\t} = iface.ref;\n\n\t\tIInput['Give Input'].on('value', EventSlot, function({ cable }){\n\t\t\tlet val = cable.value;\n\n\t\t\tiface.log = val + 5; // Give Input -> {{ log }}\n\t\t\tOutput.Out = val + 5; // Give Input -> Out\n\t\t});\n\t}\n\n\t// Run init again to hot reload this node\n\thotReloaded(){\n\t\tthis.init();\n\t}\n\n\t// When this node UI was cloned somewhere\n\t// You can reinit some HTML element if needed\n\tinitClone(el){}\n});",My.init=async function(){void 0===window.monaco&&(await sf.loader.js(["https://cdn.jsdelivr.net/npm/@monaco-editor/loader@1.2.0/lib/umd/monaco-loader.min.js"]),await monaco_loader.init()),My.container=My.$el(".editor"),My.recreate()},My.recreate=function(){void 0!==window.monaco&&(My.editor||(My.editor&&My.editor.dispose(),setTimeout((()=>{let e=My.container.find(".bp-loading-status");My.editor=monaco.editor.create(My.container[0],{value:My.content,language:"javascript",theme:"vs-dark",minimap:{enabled:!1}}),e.css("display","none")}),1e3)))},My.run=function(){eval(My.editor.getValue())},My.setValue=function(e){null!=My.editor&&My.editor.setValue(e),My.content=e},My.close=function(){Modal.hide()}})),sf.model("modal-dev-mode",(function(e){e.url=localStorage.BPModuleServer??="",e.placeholder=location.origin,e.connectDefault=function(){localStorage.BPModuleServer=e.url="",e.changeServer()},e.changeServer=async function(t){let o=e.url;o||(o=e.placeholder);let n=o;if("/"===o.slice(-1)&&(o=o.slice(0,-1)),o+="/browser-sync",void 0===window.___browserSync___)try{await sf.loader.js([o+"/browser-sync-client.js?v=2"])}catch(e){return void SmallNotif.add("Failed to load client","red")}___browserSync___.socketUrl=o;let i=___browserSync___.socket;function l(){console.log("Connected to Blackprint module server:",o),SmallNotif.add("Connected to Blackprint module server","green"),localStorage.BPModuleServer=e.url}i.disconnect(),setTimeout((()=>{i.connected||(console.log("Failed to connect to Blackprint module server:",o),SmallNotif.add("Failed to connect to Blackprint module server","red"),i.disconnect(),i.off("connect",l),t&&(localStorage.BPModuleServer=""))}),8e3),i.once("connect",l),i.nsp="/browser-sync",i.io.uri=o,i.connect();let s=!1;try{let e=Object.values(await $.getJSON(n+"/api/module-list"));for(var a=0;a<e.length;a++)e[a]=n+e[a];0!==e.length&&(SmallNotif.add(`Loading ${e.length} new modules`,"yellow"),await Blackprint.loadModuleFromURL(e,{loadBrowserInterface:!0}),SmallNotif.add("New modules have been loaded","green")),s=!0}catch(e){throw SmallNotif.add("Failed to load new modules","red"),e}setTimeout((()=>{s||(SmallNotif.add("Loading modules was taking longer than 10s","red"),0!==sf.loader.pendingResources.size&&console.log("Pending resources:",sf.loader.pendingResources))}),1e4),Modal.showed&&Modal.hide()},""!==e.url&&void 0!==sf.hotReload&&$((()=>setTimeout((()=>e.changeServer(!0)),200)))})),sf.model("environment-variables",(function(e){function t(){$("input",e.list.getElement(e.list.length-1))[0].focus()}e.list=Blackprint.Environment.list,e.newValue="",e.newKey="",e.v2m$newKey=function(o){return 0!==(o=e.validateKey(o)).length&&(Blackprint.Environment.set(o,e.newValue),e.newKey=e.newValue="",t()),""},e.itemChanged=function(n){if(clearTimeout(o),o=setTimeout((function(){let{map:e,list:t}=Blackprint.Environment,o=new Set;for(var n=0;n<t.length;n++){let i=t[n];e[i.key]=i.value,o.add(i.key)}for(let t in e)o.has(t)||Blackprint.Environment.delete(t,!0)}),1e3),0===n.key.length&&(Number.isNaN(n.value)||!n.value))return e.list.splice(e.list.indexOf(n),1),void t()};let o=0;e.validateKey=function(e){return e.replace(/[ \-]+/gm,"_").replace(/\W+/gm,"").replace(/^[0-9]+/gm,"").toUpperCase()},e.close=function(){Modal.hide(),modal.goto("/")}})),sf.model("example-list",(function(e){e.list=[],e.open=function(e){let t=sampleList[e];for(var o=0;o<SketchList.length;o++)SketchList[o].clearNodes();Modal.hide(),(SketchList[0]??=new Blackprint.Sketch).__importing=!0,SketchImporter.pendingLoad=t,SketchImporter.importNow()}})),sf.model("module-example-list-deep",(function(e){e.packageName="",e.baseUrl="",e.list=[],e.openModal=function(t){e.packageName=t.packageName;let o=t.examples;for(var n=0;n<o.length;n++){let e=o[n];e.name||(e.name=e.url.replace("example/","").replace(/^\//,"").replace(".json","").replace(/\-/g," "))}e.list=o,e.baseUrl=t.packageURL},e.openExample=async function(t){SmallNotif.add("Loading information..");let o=t.url;"/"!==o.slice(0,1)&&(o=`/${o}`);let n=await $.getJSON(e.baseUrl+o);SketchImporter.loadJSON(n)},e.back=function(){Modal.goto("/module-example-list")}}));var ModuleExampleList=sf.model("module-example-list",(function(e){e.list=EditorHeader._moduleExampleList,function(){let t=localStorage.bpModuleExampleList;if(!t)return;e.list.push(...JSON.parse(t))}(),e.open=function(e){sf.model("module-example-list-deep").openModal(e),Modal.goto("/module-example-list-deep")},e.add=function(t,o,n){let i=e.list;for(var l=0;l<i.length&&i[l].packageName!==t;l++);if(l===i.length){i.push({packageName:t,packageURL:n,examples:o}),e.list=i=i.sort(((e,t)=>e.packageName.localeCompare(t.packageName)));try{i.refresh()}catch(e){}SmallNotif.add(`"${t}" example has been added`,"green")}else i[l].examples=o;localStorage.bpModuleExampleList=JSON.stringify(e.list)}}));let _editorModuleURL=sf.model("module-url",(function(e){e.list=Blackprint._modulesURL,e.firstInit=!1,e.newURL="";let t=localStorage.bpModuleURLList;async function o(t,o){let n=e.newURL;e.newURL="";let i=SmallNotif.add("Loading","yellow",!1);sf.loader.DOMWasLoaded=!1,sf.loader.onProgress((function(e,t){i.message=`Loading ${e}/${t}`}));try{await Blackprint.loadModuleFromURL(t,o),await sf.loader.task,SmallNotif.add("Module sucessfully loaded","green")}catch(t){SmallNotif.add("Failed to load module","red"),console.error(t),e.newURL=n}finally{sf.loader.DOMWasLoaded=!0}let l=SmallNotif.list;l.splice(l.indexOf(i),1),e.sortURL()}e.init=async function(){},e.sortURL=function(){e.list.sort(((e,t)=>e._url.localeCompare(t._url))),e.list.refresh(),0!==e.list.length&&(localStorage.bpModuleURLList=JSON.stringify(e.list.map((e=>e._url))))},e.shortenLink=function(e,t){if(e=new URL(e),"search"===t)return e.search;if("host"===t)return e.host||location.host;let o=e.pathname;return o.includes("@dist")?o.replace(/(cjs|mjs)\/|\.(min|mjs|js)/g,"").split("/").slice(-2).join("/"):o.replace(/(cjs|mjs|dist)\/|\.(min|mjs|js)/g,"").split("/").slice(-2).join("/")},e.addURL=function(){let t=e.list;for(var n=0;n<t.length;n++){let i=t[n];if(e.newURL===i._url)return;if(e.newURL.replace(/\?.*?$/m,"")===i._url.replace(/\?.*?$/m,""))return i._url=e.newURL.replace(/\?.*?$/m,""),void o(i._url,{loadBrowserInterface:!0})}o(e.newURL.replace(/\?.*?$/m,"")+"?"+(Date.now()/1e3|0),{loadBrowserInterface:!0})},e.reloadURL=function(e){/\?[0-9]/.test(e._url)?e._url=e._url.replace(/\?([0-9]+)/,((e,t)=>"?"+(1+Number(t)))):e._url.includes("?")?e._url=e._url.replace(/\?.*?$/m,"")+"?1":e._url+="?1";for(var t=0;t<SketchList.length;t++)SketchList[t]._remote?.syncModuleList();Blackprint.loadModuleFromURL(e._url)};let{diveModuleURL:n}=Blackprint.utils;e.hideFromURL=function(e){let t=e._url.replace(/\?.*?$/m,""),o=e._hidden=!e._hidden;n(Blackprint.modulesURL[t],(function(e,t,n,i){e[t].hidden=o;for(var l=i.length-1;l>=0;l--){let e=i[l];if(!(--e.val._visibleNode<=0))break;if(0===l){Blackprint.nodes[n[0]].hidden=o;break}i[l-1].val[e.key].hidden=o}}))},e.deleteFromURL=function(t){if(-1===e.list.indexOf(t))return;let o=t._url.replace(/[?#].*?$/m,"");Blackprint.deleteModuleFromURL(o)},Blackprint.on("moduleDelete",{slot:"bp-editor"},(function({url:t}){let o=document.styleSheets,n=t.replace(/[?#].*?$/m,"").replace(/\.(sf|js|css|min|mjs)\b/g,"");for(var i=0;i<o.length;i++){let e=o[i];if(null!=e.href&&e.href.replace(/[?#].*?$/m,"").replace(/\.(sf|js|css|min|mjs)\b/g,"")===n){e.ownerNode.remove();break}}let l=e.list;for(i=0;i<l.length;i++)if(l[i]._url.includes(n)){l.splice(i,1);break}})),e.npmList=function(){modal.goto("/npm-packages")},e.loadCachedList=function(){let n=t;n&&(n=JSON.parse(n),0!==n.length&&(e.firstInit=!1,o(n,{loadBrowserInterface:!0})))},e.close=function(){Modal.hide(),modal.goto("/")}}));sf.model("npm-package-info",(function(e){let t;async function o(){if(t)return;t=SmallNotif.add("Loading","yellow",!1);let e=setInterval((()=>{!function(e,o){if(e===o)return sf.loader.DOMWasLoaded=!0,t.message=`Loading ${e}/${o}`,void(t=!1);t&&(t.message=`Loading ${e}/${o}`)}(sf.loader.loadedContent,sf.loader.totalContent)}),500);try{await sf.loader.task}catch(e){SmallNotif.add(e.message,"red"),console.error(e)}clearInterval(e);let o=SmallNotif.list;o.splice(o.indexOf(t),1)}e.list=[],e.title="",e.description="",e.version="",e.author="",e.date="",e.repository="",e.packageURL="",e.package=0,e.open=function(t,o,n){e.list=o,e.exampleList=n,e.package=t,e.title=t.name,e.description=t.description||"",e.version=t.version,e.date=t.date.split("T")[0],e.author=t.publisher.username||"",e.repository=t.links.repository||"",e.packageURL=`https://cdn.jsdelivr.net/npm/${t.name}@${t.version}`;let i=Blackprint.modulesURL,l=e.list;for(let e in i)for(var s=0;s<l.length;s++){let t=l[s];e.includes(t.url)&&(t.active="active")}Modal.goto("/npm-package-info")},e.load=async function(t){sf.loader.DOMWasLoaded=!1,setTimeout((()=>{sf.loader.totalContent!==sf.loader.loadedContent&&o()}),500),t.active="loading";try{await Blackprint.loadModuleFromURL([e.packageURL+t.url],{loadBrowserInterface:!0})}finally{sf.loader.totalContent===sf.loader.loadedContent&&(sf.loader.DOMWasLoaded=!0)}0!==e.exampleList.length&&ModuleExampleList.add(e.title,e.exampleList,e.packageURL),t.active="active",e.package._active=!0},e.back=function(){Modal.goto("/npm-packages")}})),sf.model("npm-packages",(function(e){e.list=[],e.search="",e.loading=!1,e.init=function(){e.refreshList()},e.refreshList=async function(){let t="https://registry.npmjs.org/-/v1/search?text=blackprint%20nodes";""!==e.search&&(t+="%20"+e.search),e.loading=!0;let o=(await $.getJSON(t)).objects;e.loading=!1;let n=Blackprint.modulesURL;for(let e in n)for(var i=0;i<o.length;i++){let t=o[i].package;e.includes(t.name)&&(t._active=!0,t._update=Blackprint.utils.packageIsNewer(e,t.name+"@"+t.version))}e.list=o},e.open=async function(t){e.loading=!0;let o=await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${t.name}@${t.version}`);o=o.files;let n=[],i=[];for(var l=0;l<o.length;l++){let e=o[l];if("directory"===e.type)if("dist"===e.name){let t=e.files;for(var s=0;s<t.length;s++){let e=t[s];if("file"!==e.type)continue;let o=e.name;/\.(map|sf\.mjs|sf\.js|css)$/.test(o)||n.push({url:`/dist/${o}`})}}else if("example"===e.name){let t=e.files;for(s=0;s<t.length;s++){let e=t[s];"file"===e.type&&i.push({url:`/example/${e.name}`})}}}e.loading=!1,sf.model("npm-package-info").open(t,n,i)}})),sf.model("modal-remote-engine-connect",(function(e){e.url=localStorage.BPRemoteEngine??="",e.placeholder="http://localhost:2345",e.allowModuleSync=!0,e.allowRemoteImport=!0,e.allowDataOutSync=!0,e.client=null,e.socket=null,e.connectDefault=function(){localStorage.BPRemoteEngine=e.url="",e.changeServer()};e.changeServer=async function(t){let o=e.url;o||(o=e.placeholder),null==window.io&&await sf.loader.js(["https://cdn.socket.io/4.4.1/socket.io.min.js"]);let n=window.SketchList[0],i=e.client??=new Blackprint.RemoteControl(n);e.client.enable?.(),e.socket?.destroy();let l=e.socket=io(o);l.on("startup-time",(e=>{Date.now()-e<1e4?i.sendSketchToRemote():(i.importRemoteJSON(),i.once("empty.json.import",(function(){i.sendSketchToRemote()})))})),i.on("disabled",(()=>SmallNotif.add("Remote sync was disabled","red"))),i.on("remote-save.begin",(function(){SmallNotif.add("Sketch saved on remote")})),n.disablePorts=!0,i.onImport=t=>e.allowRemoteImport,i.onModule=t=>e.allowModuleSync,l.on("relay",(e=>i.onSyncIn(e))),i.onSyncOut=e=>l.emit("relay",e),Modal.showed&&Modal.hide(),setTimeout((()=>{l.connected||(console.log("Failed to connect to remote engine:",o),SmallNotif.add("Failed to connect to remote engine","red"),l.destroy(),t&&(localStorage.BPRemoteEngine=""))}),8e3),l.on("disconnect",(()=>SmallNotif.add("Disconnected from remote engine"))),l.on("connect",(function(){console.log("Connected to remote engine:",o),SmallNotif.add("Connected to remote engine","green"),localStorage.BPRemoteEngine=o}))},""!==e.url&&null!=Blackprint.RemoteControl&&$((()=>setTimeout((()=>e.changeServer(!0)),200)))})),sf.model("modal-remote-sketch-connect",(function(e){e.url=localStorage.BPSketchRelayServer??="",e.placeholder="http://localhost:2345",e.allowModuleSync=!0,e.allowRemoteImport=!0,e.allowDataOutSync=!0,e.client=null,e.socket=null,e.connectDefault=function(){localStorage.BPSketchRelayServer=e.url="",e.changeServer()},e.changeServer=async function(t){let o=e.url;null==window.io&&await sf.loader.js(["https://cdn.socket.io/4.4.1/socket.io.min.js"]);let n=window.SketchList[0],i=e.client??=new Blackprint.RemoteSketch(n);e.client.enable?.(),i.onImport=t=>e.allowRemoteImport,i.onModule=t=>e.allowModuleSync,i.on("disabled",(()=>SmallNotif.add("Remote sync was disabled","red"))),e.socket?.destroy();let l=e.socket=io(o);l.on("relay",(e=>i.onSyncIn(e))),i.onSyncOut=e=>l.emit("relay",e),setTimeout((()=>{l.connected||(console.log("Failed to connect to sketch's relay server:",o),SmallNotif.add("Failed to connect to sketch's relay server","red"),l.destroy(),t&&(localStorage.BPSketchRelayServer=""))}),8e3),l.on("disconnect",(()=>SmallNotif.add("Disconnected from relay server"))),l.on("connect",(function(){console.log("Connected to sketch's relay server:",o),SmallNotif.add("Connected to sketch's relay server","green"),localStorage.BPSketchRelayServer=o})),Modal.showed&&Modal.hide()},""!==e.url&&null!=Blackprint.RemoteSketch&&$((()=>setTimeout((()=>e.changeServer(!0)),200)))}));var SketchImporter=sf.model("sketch-importer",(function(e){e.modules=[],e.nodes=[],e.pendingLoad=void 0,e.savedKeys={localStorage:[],sessionStorage:[],environmentVariables:[],sketchPages:[]};let t=!1,o=!0;e.loadJSON=async function(t){Modal.goto("/sketch-importer"),t.constructor===String&&(t=JSON.parse(t)),e.pendingLoad=t;let o=t._;e.modules=o&&o.moduleJS||[],e.nodes=[];for(let o in t)"_"!==o&&e.nodes.push({name:o,count:t[o].length});e.checkSavedData()},e.importNow=function(){if(void 0===e.pendingLoad){let e="Please call 'SketchImport.loadJSON' first";return console.error(e),SmallNotif.add(e,"yellow"),!1}Modal.hide();let n=SketchList[0]??=new Blackprint.Sketch;async function i(){sf.loader.DOMWasLoaded=!1,o&&sf.loader.onProgress((function(e,n){t.message=`Loading ${e}/${n}`,o=!0}));try{await n.importJSON(e.pendingLoad)}catch(e){throw SmallNotif.add("Failed to import data","red"),e}finally{sf.loader.DOMWasLoaded=!0,delete n.__importing,e.pendingLoad=void 0}let i=SmallNotif.list;i.splice(i.indexOf(t),1)}if(n.__importing=!0,"/sketch/1"===views.currentPath)return t=SmallNotif.add("Loading","yellow",!1),setTimeout(i,400);views.goto("/sketch/1"),t=SmallNotif.add("Loading","yellow",!1),setTimeout(i,1e3)},e.checkSavedData=function(){e.savedKeys.localStorage=Object.keys(localStorage),e.savedKeys.sessionStorage=Object.keys(sessionStorage),e.savedKeys.environmentVariables=Object.keys(Blackprint.Environment.map),e.savedKeys.sketchPages=SketchList},e.clear={localStorage(){let t=Object.keys(localStorage);for(let e=0;e<t.length;e++)delete localStorage[t[e]];e.savedKeys.localStorage=Object.keys(localStorage)},sessionStorage(){let t=Object.keys(sessionStorage);for(let e=0;e<t.length;e++)delete sessionStorage[t[e]];e.savedKeys.sessionStorage=Object.keys(sessionStorage)},environmentVariables(){let t=Blackprint.Environment,o=Object.keys(t.map);for(let e=0;e<o.length;e++)t.delete(o[e]);e.savedKeys.environmentVariables=Object.keys(Blackprint.Environment.map)},sketchPages(){for(var e=0;e<SketchList.length;e++)SketchList[e].destroy();SketchList.splice(1),views.goto("/sketch/1")}}}));sf.model("sketch-settings",(function(e){e.theme="default",e.on$theme=function(t){$("body").removeClass("node-ui-"+e.theme).addClass("node-ui-"+t)},e.background=localStorage.bpBackgroundURL||"",e.on$background=function(e){$("body > .background > .img").css("background-image","url('"+(e||"/assets/img/background/black3.jpg")+"')").css("background-size","cover"),localStorage.bpBackgroundURL=e},e.hideUnusedPort="true"==localStorage.bpHideUnusedPort||!1,e.on$hideUnusedPort=function(e){for(var t=0;t<SketchList.length;t++){let n=SketchList[t].scope("container");n.hideUnusedPort=e;let i=n.nodeScope.list;for(var o=0;o<i.length;o++)i[o].hideUnusedPort=e}localStorage.bpHideUnusedPort=e},e.background&&e.on$background(e.background)}));var SketchList=[];sf.component("sketch-page",(function(e){let t=e.sketch=SketchList[views.data.page-1]??=new Blackprint.Sketch;t.page=e,e.panels={left:null,bottom:null,right:null},t._event.$_fallback=BlackprintEventFallback,t.on("port.cable.test",{slot:"bp-editor"},SuggestNodeTypeCaster),t.on("port.hover node.hover",{slot:"bp-editor"},(e=>{e.instance=t,null!=e.port&&PortHoverInfo(e,!0),null!=e.iface&&NodeHoverInfo(e,!0)})),t.on("port.unhover node.unhover",{slot:"bp-editor"},(e=>{e.instance=t,null!=e.port&&PortHoverInfo(e,!1),null!=e.iface&&NodeHoverInfo(e,!1)})),t.on("node.click",{slot:"bp-editor"},(t=>{e.panels.right.selectNode(t.iface),NodeHoverInfo(t,!1)})),Blackprint.settings("visualizeFlow",!0),e.space??=t.cloneContainer();let o=sf.model("sketch-pages"),n=t.scope("container"),i=sf.model("header");n.hideUnusedPort=sf.model("sketch-settings").hideUnusedPort,n.onScale=function(e){i.info.scale=Math.round(100*e)},e.init=async function(){let t=$(e.space.firstElementChild);t.eq(0).hasClass("bg-tile")||t.prepend('<div class="bg-tile"></div>')},e.importJSON=e=>t.importJSON(e),e.clearNodes=()=>t.clearNodes(),e.cloneActive=!1,e.cloneContainer=function(){if(e.cloneActive=!e.cloneActive,e.cloneActive){!1===e.disableVFXActive&&e.disableVFX();var n,i=t.scope("container");function l(){setTimeout((function(){i.pos.x=-.1,setTimeout((function(){i.pos.x=0}),500)}),1e3)}i.pos.x=0,i.pos.y=0,i.scale=1,i.minimap?n=i.minimap:(n=t.cloneContainer(!0),$('sf-m[name="dropdown"]',n).remove()),new sf.Window({title:"Cloned Sketch Container",templateHTML:t.cloneContainer()},l),o.miniViewer.topRight=n,l()}else o.miniViewer.topRight=null,sf.Window.destroy()},t.on("node.menu",(function({iface:e,menu:t}){t.unshift({title:e.id?"Modify ID":"Add ID",async callback(){let t=await Swal.fire({title:"Write the new ID here",text:e.id?"Current ID: "+e.id:void 0,input:"text"});if(!1===t.isConfirmed)return;let o=SketchList[0],n=t.value;if(""===n)return delete o.iface[e.id],void(e.id=n);if(void 0!==o.iface[n])throw new Error("ID already exist");e.id=n,o.iface[n]=e}},{title:"View source code",async callback(){let t=await utils.openNodeSource(e);t&&(sf.model("custom-node-editor").setValue(t),Modal.goto("/custom-node-editor"))}})}))})),sf.Views._$edit("vw-ground",[{path:"/getting-started",html:"Preparing this file for the future example"},{path:"/",html:'\x3c!-- Filling the default page if haven\'t being routed --\x3e<sf-m name="welcome-text" class="welcome-text"><h1>Welcome to Blackprint Editor!</h1><div class="description">This editor haven\'t being designed for mobile screen.</div><div class="content"><div class="item" @click="toWorkspace"><i class="fas fa-torii-gate"></i> Go to sketch page</div><div class="item" @click="openExamples"><i class="fa fa-map-signs"></i> <span>Open examples</span></div><div class="item" style="cursor: default"><i class="fa fa-book-open"></i> <span style="text-decoration: line-through">Learn from editor</span></div></div><div class="available-engine"><div class="title">Blackprint Engine also available for:</div><div class="list">\x3c!-- python, csharp, java/kotlin, cplusplus, go, rust, docker --\x3e\x3c!-- css3, html5 --\x3e <a class="item" href="https://github.com/Blackprint/engine-js" target="_blank"><img src="/assets/img/icon/denojs.svg"><div class="name">Deno</div></a><a class="item" href="https://github.com/Blackprint/engine-js" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/nodejs/nodejs-plain.svg"><div class="name">Node.js</div></a><a class="item" href="https://github.com/Blackprint/engine-php" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/php/php-plain.svg"><div class="name">PHP</div></a><a class="item" href="https://github.com/Blackprint/engine-go" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/go/go-original-wordmark.svg"><div class="name">Golang</div></a></div></div></sf-m><div class="welcome-left"><a target="_blank" href="https://ko-fi.com/stefansarya"><i class="fas fa-mug-hot"></i> Ko-fi </a><a target="_blank" href="https://github.com/Blackprint/Blackprint"><i class="fab fa-github"></i> GitHub </a><a target="_blank" href="https://stefansarya.gitbook.io/blackprint"><i class="fa fa-book-open"></i> Documentation </a><a target="_blank" href="https://github.com/Blackprint/Blackprint/discussions"><i class="fa fa-comments"></i> Discussions</a></div><div class="welcome-right"><a target="_blank" style="cursor: pointer;" onclick="Modal.goto(\'/npm-packages\')">Package List <i class="fas fa-boxes"></i> </a><a target="_blank" href="https://www.npmjs.com/search?q=keywords:blackprint">npm.js <i class="fas fa-box"></i></a></div>'},{path:"/sketch",html:'<sf-m name="sketch-pages">\x3c!-- /src/routes/+vw-ground/sketch.sf --\x3e<vw-page></vw-page><div class="mini-blackprint disable-effect {{miniViewer.topRightHidden && \'hidden\'}}">\x3c!-- Will be replaced with element returned by Blackprint.cloneContainer(true) --\x3e<sf-slot for="miniViewer.topRight"></sf-slot></div></sf-m>',on:{showed(){sf.model("header").showOptions=!0},hidden(){sf.model("header").showOptions=!1}}},{path:"/sketch",html:'<sf-m name="sketch-pages">\x3c!-- /src/routes/+vw-ground/sketch.sf --\x3e<vw-page></vw-page><div class="mini-blackprint disable-effect {{miniViewer.topRightHidden && \'hidden\'}}">\x3c!-- Will be replaced with element returned by Blackprint.cloneContainer(true) --\x3e<sf-slot for="miniViewer.topRight"></sf-slot></div></sf-m>',on:{showed(){sf.model("header").showOptions=!0},hidden(){sf.model("header").showOptions=!1}},"vw-page":[{path:"/:page",html:'<sketch-page>\x3c!-- This element will be replaced with \'My.space\' --\x3e<sf-slot for="space"></sf-slot>\x3c!-- Panels --\x3e<div class="panels">\x3c!-- /src/component/sketch-panel-left.sf --\x3e<sketch-panel-left></sketch-panel-left>\x3c!-- /src/component/sketch-panel-bottom.sf --\x3e<sketch-panel-bottom></sketch-panel-bottom>\x3c!-- /src/component/sketch-panel-right.sf --\x3e<sketch-panel-right></sketch-panel-right></div></sketch-page>',on:{coming(e){console.log("Sketch page data:",e);let t=SketchList[e.page-1];sf.model("header").cloneActive=t.page.cloneActive},showed(){setTimeout((()=>{if(1===SketchList.length&&0===SketchList[0].ifaceList.length){if(SketchList[0].__importing)return;if("/sketch-importer"===modal.currentPath)return;Modal.goto("/example-list")}}),100),$("body > .background .tile").css("display","none")},leaving(){console.log("Leaving from sketch page data:",arguments),$("body > .background .tile").css("display","")}}}]}]),sf.Views._$edit("vw-modal",[{path:"/",html:"'index.sf' was not found"},{path:"/custom-node-editor",html:'<sf-m name="custom-node-editor"><div class="editor" @keydown.ctrl.enter.prevent="run"><div class="bp-loading-status" style="color: white; padding: 20px">Loading Monaco Editor...</div></div><div class="menu"><div class="item" @click="run" title="Execute (Ctrl + Enter)"><i class="fa fa-play"></i></div>\x3c!-- <div class="item" @click="Modal.hide()" title="Minimize"><i class="fa fa-window-minimize"></i></div> --\x3e<div class="item" @click="close" title="Close"><i class="fa fa-times"></i></div></div></sf-m>',on:{showed(){sf.model("custom-node-editor").recreate()}}},{path:"/dev-mode",html:'<sf-m name="modal-dev-mode"><div class="description">Please set the Blackprint module server URL</div><div class="note" style="display: {{url === \'\' || url === placeholder ? \'none\':\'\'}}" @click="connectDefault">(Click here to connect to default server)</div><div class="text-input"><input placeholder="{{placeholder}}" type="text" sf-bind="url" @keyup.enter="changeServer"></div><div class="button-import" @click="changeServer">Connect</div></sf-m>',on:{coming(){setTimeout((()=>{sf.model("modal-dev-mode").$el("input").focus()}),500)},showed(){setTimeout((()=>{sf.model("modal-dev-mode").$el("input").focus()}),100)}}},{path:"/environment-variables",html:'<sf-m name="environment-variables"><div class="title">Environment Variables</div><div class="head"><div class="row">Key</div><div class="row">Value</div></div><div class="content"><div><div class="row" sf-each="x in list" @keyup="itemChanged(x)"><input class="column key" type="text" @input="(this.value = x.key = validateKey(this.value))" sf-bind="x.key" placeholder="..."> <input class="column" type="text" sf-bind="x.value" placeholder="..."></div></div><div class="row"><input class="column key" type="text" @input="this.value = newKey = validateKey(this.value)" sf-bind="newKey" placeholder="Add new key..."> <input class="column" type="text" sf-bind="newValue" placeholder="..."></div></div><div class="menu"><div class="item" @click="close" title="Close"><i class="fa fa-times"></i></div></div></sf-m>'},{path:"/example-list",html:'<sf-m name="example-list"><div class="description">Please select one of these example (<a href="https://github.com/Blackprint/blackprint.github.io/blob/develop/src/global/sampleList.js">source</a>)</div><div class="list"><div class="item" sf-each="x in list" @click="open(x)">{{x}}</div></div></sf-m>',on:{coming(){sf.model("example-list").list=Object.keys(sampleList)}}},{path:"/module-example-list-deep",html:'<sf-m name="module-example-list-deep"><div class="description">Examples for: <b>{{packageName}}</b></div><div class="list"><div class="item" sf-each="x in list" @click="openExample(x)">{{x.name}}</div></div><div class="menu"><div class="item" @click="back" title="Back"><i class="fa fa-reply"></i></div></div></sf-m>'},{path:"/module-example-list",html:'<sf-m name="module-example-list"><div class="description">Please select one of the module to load the example list</div><div class="list"><div class="item" sf-each="x in list" @click="open(x)">{{x.packageName}}</div></div></sf-m>',on:{coming(){}}},{path:"/module-url",html:'<div style="height:70vh"><sf-m name="module-url"><div class="head"><div class="row url">Shortened Module URL</div><div class="row nodes">Nodes</div><div class="row actions">Actions</div></div><div class="content"><div><div class="row" sf-each="x in list"><div class="column url"><div><b>{{shortenLink(x._url, \'host\')}}</b> {{shortenLink(x._url, \'path\')}} <b>{{shortenLink(x._url, \'search\')}}</b> <a title="Right click to copy link address, click to open on new tab" target="_blank" href="{{x._url}}"><i class="fa fa-link"></i></a></div></div><div class="column nodes">{{x._nodeLength}}</div><div class="column actions"><button title="Show this module on dropdown/module list" @click="hideFromURL(x)"><i class="fa fa-list"></i> <i class="fa fa-slash" style="position: absolute;\r\n\t\t\t\t\t\t\t    margin-left: -15px;\r\n\t\t\t\t\t\t\t    display: {{x._hidden ? \'inline-block\' : \'none\'}}"></i></button> <button title="Reload this module again from URL" @click="reloadURL(x)"><i class="fa fa-sync"></i></button> <button title="Remove any related nodes and also remove this module" @click="deleteFromURL(x)"><i class="fa fa-trash"></i></button></div></div></div><div class="row"><input class="column url-input" type="text" @keyup.enter="addURL()" sf-bind="newURL" placeholder="Add module from URL here... (Then press enter)"></div></div><div class="menu"><div class="item" @click="close" title="Close"><i class="fa fa-times"></i></div><div class="item" @click="npmList" title="Search from NPM"><i class="fa fa-book-open"></i></div><div class="item" @click="loadCachedList" style="{{firstInit ? \'\' : \'display: none\'}}" title="Load cached list"><i class="fa fa-boxes"></i></div></div></sf-m></div>',on:{coming(){_editorModuleURL.sortURL()}}},{path:"/npm-package-info",html:'<sf-m name="npm-package-info"><div class="title">{{title}} (v{{version}})</div><div class="info"><span>{{author}}</span> <a style="display: {{repository ? \'\' : \'none\'}}" href="{{repository}}" target="_blank">(Repository)</a></div><div class="description">{{description}}</div><div class="list-info">Please select module to import:</div><div class="list"><div class="item {{x.active || \'\'}}" sf-each="x in list" @click="load(x)">{{x.url}} <i class="{{x.active === \'loading\' ? \'fa fa-spinner fa-spin\' : \'\'}}"></i></div></div><div class="menu"><div class="item" @click="back" title="Back"><i class="fa fa-reply"></i></div></div></sf-m>'},{path:"/npm-packages",html:'<sf-m name="npm-packages"><div class="description">Search package on NPM repository <i class="{{loading ? \'fa fa-spinner fa-spin\' : \'\'}}"></i></div><div class="mini-description" title="especially if you\'re not a developer, always becareful if someone ask you to do something with Blackprint, like inputting password or private key">Always becareful and verify the module\'s source code before going to production</div><div class="search"><input type="text" sf-bind="search" @keyup.enter="refreshList" placeholder="Search..."></div><div class="list"><div class="item {{x.package._active && \'active\'}} {{x.package._update && \'update\'}}" sf-each="x in list" @click="open(x.package)"><div><div class="title">{{x.package.name}} <span>(v{{x.package.version}})</span></div><div class="author">{{x.package.publisher.username}}</div></div><div><div class="description">{{x.package.description}}</div><div class="date">{{x.package.date.split(\'T\')[0]}}</div></div></div></div></sf-m>'},{path:"/remote-engine-connect",html:'<sf-m name="modal-remote-engine-connect"><div class="description">Please set the remote engine URL</div><div class="note" style="display: {{url === \'\' || url === placeholder ? \'none\':\'\'}}" @click="connectDefault">(Click here to connect to default localhost server)</div><div class="text-input"><input placeholder="{{placeholder}}" type="text" sf-bind="url" @keyup.enter="changeServer"></div><div class="button-import" @click="changeServer">Connect</div></sf-m>',on:{coming(){setTimeout((()=>{sf.model("modal-remote-engine-connect").$el("input").focus()}),500)},showed(){setTimeout((()=>{sf.model("modal-remote-engine-connect").$el("input").focus()}),100)}}},{path:"/remote-sketch-connect",html:'<sf-m name="modal-remote-sketch-connect"><div class="description">Please set the remote sketch\'s relay URL</div><div class="note" style="display: {{url === \'\' || url === placeholder ? \'none\':\'\'}}" @click="connectDefault">(Click here to connect to default localhost server)</div><div class="text-input"><input placeholder="{{placeholder}}" type="text" sf-bind="url" @keyup.enter="changeServer"></div><div class="button-import" @click="changeServer">Connect</div></sf-m>',on:{coming(){setTimeout((()=>{sf.model("modal-remote-sketch-connect").$el("input").focus()}),500)},showed(){setTimeout((()=>{sf.model("modal-remote-sketch-connect").$el("input").focus()}),100)}}},{path:"/sketch-importer",html:'<sf-m name="sketch-importer"><div class="description" title="To avoid any risks if you have stored sensitive data on this editor, make sure you have verify the author of the nodes and the JSON to be imported.">Please verify the author before importing</div><div class="info-modules"><div class="title">These modules will be imported:</div><ul class="list"><li class="item" sf-each="x in modules">{{x}}</li></ul></div><div class="info-nodes"><div class="title">These nodes will be used:</div><ul class="list"><li class="item" sf-each="x in nodes">{{x.name}} ({{x.count}})</li></ul></div><div class="info-clear"><div class="title">Please be careful if you saved sensitive data on this editor<br>You can click below to clear the saved data:</div>\x3c!-- Hi! can you contribute for clearing browser data like WebSQL or IndexedDB? --\x3e<div class="button-clear"><div @click="clear.localStorage">Local Storage ({{savedKeys.localStorage.length}})</div><div @click="clear.sessionStorage">Session Storage ({{savedKeys.sessionStorage.length}})</div><br><div @click="clear.environmentVariables">Environment Variables ({{savedKeys.environmentVariables.length}})</div><div @click="clear.sketchPages">Sketch Pages ({{savedKeys.sketchPages.length}})</div></div></div><div class="button-import" @click="importNow">Import Sketch</div></sf-m>'},{path:"/sketch-settings",html:'<sf-m name="sketch-settings"><div class="description">Settings</div><div class="list"><div class="item"><div class="title">Theme:</div><select sf-bind="theme"><option value="default">Default</option><option value="darker">Darker</option></select></div><div class="item"><div class="title">Background:</div><input type="text" sf-bind="background" placeholder="https://..."></div><div class="item"><div class="title">Hide unused port</div><input type="checkbox" sf-bind="hideUnusedPort"></div></div></sf-m>'}])}
//# sourceMappingURL=custom.sf.js.map