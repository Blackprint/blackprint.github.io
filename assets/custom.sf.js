{async function imports(e){return"undefined"!=typeof sf&&void 0!==sf.loader?await sf.loader.mjs(e):Promise.all(e.map(e=>import(e)))}imports.task=function(){return"undefined"!=typeof sf&&void 0!==sf.loader?sf.loader.task:null},window.templates||(window.templates={});var _$_=sf.dom||sf.$,__tmplt=window.templates,_sf_internal=window._sf_internal=window._sf_internal||{body_map:{},_replace(e,t){let i=_$_(t);return this.body_map[e]&&this.body_map[e].remove(),this.reinitViews&&this.reinitViews(i),this.body_map[e]=i},append(e,t){_$_(document.body).append(this._replace.apply(this,arguments))},prepend(e,t){_$_(document.body).prepend(this._replace.apply(this,arguments))}};__tmplt["BPEditor/component/SmallNotif.sf"]='\x3c!-- /src/component/SmallNotif.sf --\x3e<sf-m name="small.notif"><div class="notify-container right-top"><div sf-each="x in list" class="notify-base notify-{{x.color}}"><i class="item-icon {{x.icon ? x.icon : \'hide-icon\'}}"></i> <span>{{x.message}}</span> <button @click="close(x)" class="close">×</button></div></div></sf-m>';var SmallNotif=sf.model("small.notif",function(e){const t=sf.$;e.list=[],e.on$list={create(e){t(e).animateKey("fadeInUp")},remove:(e,i)=>(t(e).animateKey("fadeOutUp",i),setTimeout(i,500),!0)},t(function(){0===t('sf-m[name="small.notif"]').length&&t("body").append(t(window.templates["BPEditor/component/SmallNotif.sf"]))}),e.add=function(t,i,n){var o;if("object"==typeof i){let e=i;i=e.color??"yellow",n=e.delay,o=e.icon}var a={message:t,color:i||"yellow",icon:o};return e.list.push(a),!1!==n?a.timer=setTimeout(()=>{e.list.splice(e.list.indexOf(a),1)},n||1e3+100*t.length):(a.destroy=function(){let t=e.list.indexOf(a);-1!==t&&e.list.splice(t,1)},a.change=function(e,t,i){a.message=e,a.color=t,!1!==i&&(a.timer=setTimeout(a.destroy,i||1e3+100*a.message.length))}),a},e.close=function(t){e.list.splice(e.list.indexOf(t),1)}});__tmplt["BPEditor/component/dropdown.sf"]='<drop-down class="dropdown-menu {{hidden}}" style="display: {{visible ? \'block\' : \'none\'}};\n    transform: translate({{x | 0}}px, {{y | 0}}px);"><div class="first" style="display: {{!title && \'none\'}}">{{title || \'\'}}</div><input><ul><li sf-each="x in options" :class="{{x.divider ? \'divider\' : \'\'}} {{x.disabled ? \'disabled\' : \'\'}} {{x.description ? \'has-desc\' : \'\'}}" title="{{x.info || \'\'}}">{{@if x.title != null: {[<a>]} if(x.icon != null){ if(x.icon.includes(\'//\')) {[<img class="dropdown-icon" :src="{{x.icon}}">]}; else {[<i class="dropdown-icon {{x.icon}}"></i>]}; } {[<div class="title">{{ x.title }}</div>]} if(x.description != null) {[<div class="description">{{ x.description }}</div>]}; if(x.deep != null) {[<i class="{{ root.icon.more }} has-deep"></i>]}; {[</a>]} }}</li></ul></drop-down>';var DropDown=sf.model("dropdown",function(e){e.menus=[],e.onCancel=void 0,e.className="",e.hasSearch=!1,e.searchActive=!1,e.pendingDeepOpen=!1,e.pendingDeepOpen_=0,e.lastClickEvent=null,e.icon={more:"fa fa-chevron-right"},e.show=function(o,{x:a,y:l,event:s,element:r,title:c,className:d,hasSearch:p,searchObject:u}){if(e._event=s,0!==e.menus.length?e.menus.splice(0):function(){if(t)return;n.insertBefore(sf.Window.source(e.$el,e._event)),setTimeout(function(){n.addClass("show"),$(sf.Window).on("pointerdown",i),$(sf.Window).once("contextmenu",e=>e.preventDefault()),t=!0},10)}(),o.title=c,void 0!==r){let h=r.getBoundingClientRect();o.x=h.x+5,o.y=h.y+h.height}else void 0!==a?(o.x=a,o.y=l):(o.x=s.x,o.y=s.y);o.event=s;for(var f=o.length-1;f>=0;f--)o[f].hide&&o.splice(f,1);if(e.className=d||"",e.menus.push(o),p){let v=e.$el("input").eq(0),g=0,k=e.menus[0],y=e.menus[0].slice(0);function m(t){let i=t.target.model;DropDown.lastClickEvent=t,i.callback.apply(i.context,i.args),e.$el("drop-down > ul").off("click",m),e.hide()}v.attr("placeholder"," Type here to search..."),e.hasSearch=!0,v.on("keyup",function(t){clearTimeout(g),g=setTimeout(()=>{let t=v[0].value;if(!t||!e.hasSearch)return e.searchActive=!1,v[0].value="",k.splice(0),k.push(...y),void e.$el("drop-down > ul").off("click",m);e.searchActive=!0;let i=t.split(" ").map(e=>{let t=RegExp(e,"i");return t.found=!1,t}),n=[];!function e(t,o,a=""){for(let s=0;s<t.length;s++){let r=t[s],c=o?.[r.title],d=a+r.title+" > ";if(null!=r.deep)e(r.deep,c,d);else{let e,t=!0;for(var l=0;l<i.length;l++){let e=i[l];e.test(d)?e.found=!0:t=!1}if(null!=c&&(({description:e}=c),!1===t))for(let t=0;t<i.length;t++){let n=i[t];n.test(e)&&(n.found=!0)}t=!0;for(let e=0;e<i.length;e++){let n=i[e];!1===n.found&&(t=!1),n.found=!1}if(!1===t)continue;n.push(Object.assign({description:e,info:e},r,{title:d.slice(0,-3)}))}}}(y,u);for(var o=0;o<e.menus.length;o++)e.menus.getElement(o).model.deepRemove();k.splice(0),k.push(...n),e.$el("drop-down > ul").on("click",m)},300)}),setTimeout(()=>v.focus(),200)}return e},e.hide=function(){for(var t=0;t<e.menus.length;t++)e.menus.getElement(t).model.deepRemove();e.pendingDeepOpen=!1,e.pendingDeepOpen_=0,e.menus.splice(0),o(),e.className="",e.hasSearch=!1,e.$el("input").off("keyup")};var t=!1;function i(t){$(t.target).parent("sf-m")[0]!==sf.Window.source(e.$el,e._event)&&(o(),e.hide(),e.onCancel&&e.onCancel())}var n=$('<div class="ground-backdrop"></div>');function o(){t=!1,n.removeClass("show"),setTimeout(()=>{n.remove()},200),$(sf.Window).off("pointerdown",i)}});sf.component("drop-down",{template:"BPEditor/component/dropdown.sf"},function(e,t,i){e.visible=!1,e.hidden="hidden",e.options=i,e._parent=i._parent,e.x=i.x,e.y=i.y,e.root=t("dropdown"),e.width=0,e.height=0,e.disabled=!0===i.disabled;for(var n=i.length-1;n>=0;n--)i[n].hide&&i.splice(n,1);var o,a;e.title=i.title,e.init=function(){if(void 0!==i.event){var t=sf.Window.source(e.$el,i.event);if(null===t)return;a=$(t)}else a=e.$el;e.visible=!0;var n=sf.Window.source(e.$el,i.event).querySelector("ul");$.afterRepaint().then(function(){let t=0,i=0,o=e._parent,a=void 0!==o?o.width:0;for(;void 0!==o;)t+=o.x,i+=o.y,o=o._parent;e.width=n.offsetWidth,e.height=n.offsetHeight,t+e.x+e.width>sf.Window.focus.innerWidth&&(e.x-=e.width+a),i+e.y+e.height>sf.Window.focus.innerHeight&&(e.y-=e.height),e.hidden=""});for(var l=e.options,s=0;s<l.length;s++){let c=l[s];const d=$(l.getElements(s));if(void 0!==c.deep){function r(t){void 0!==o&&e.deepRemove(),void 0!==c.hover&&c.hover.apply(c.context,c.args);var i=c.deep;if(i.event=t,i._parent=e,void 0!==i.el)return o=i.el,i.el.model.y=i.yi-(i.ul?.scrollTop||0),void a.append(i.el);i.ul=e.$el.children("ul")[0],i.x=n.offsetWidth,i.yi=t.target.offsetTop-7,i.y=i.yi-(i.ul?.scrollTop||0),i.el=o=new $DropDown(i,e.$space),o.sf$noGC=!0,a.append(o)}d.on("mouseover",function(t){e.root.pendingDeepOpen=t.target,clearTimeout(e.root.pendingDeepOpen_),e.root.pendingDeepOpen_=setTimeout(()=>{e.root.pendingDeepOpen===t.target&&r(t)},200)}),d.on("click",r);continue}d.on("mouseover",function(t){e.root.pendingDeepOpen=t.target,clearTimeout(e.root.pendingDeepOpen_),e.root.pendingDeepOpen_=setTimeout(()=>{void 0!==o&&(e.deepRemove(),o=void 0),c.hover&&c.hover.apply(c.context,c.args)},200)}),c.callback&&d.on("click",function(t){void 0!==c.unhover&&c.unhover.apply(c.context,c.args),DropDown.lastClickEvent=t,c.callback.apply(c.context,c.args),e.root.hide()}),c.unhover&&d.on("mouseout",function(e){c.unhover.apply(c.context,c.args)})}},e.deepRemove=function(){void 0!==o&&(o.remove(),o.model.deepRemove())}}),__tmplt["BPEditor/component/editor-display-port-value.sf"]="<editor-display-port-value style=\"display: {{visible ? '' : 'none'}}\">{{_value}}</editor-display-port-value>",Blackprint.space.component("editor-display-port-value",{template:"BPEditor/component/editor-display-port-value.sf"},(e,t,i)=>{e._value="",e.visible=!0,e.setValue=function(t){if(null==t)return e._value="";t instanceof Function?e.visible=!1:e._value=JSON.stringify(t)},null!=i&&e.setValue(i.value)}),__tmplt["BPEditor/component/project-navigation-bar.sf"]='<project-navigation-bar><div class="container" @pointerleave="unhoverNav"><span @click="clickNav" @pointerover="hoverNav">{{instanceName}}</span> <span @click="clickNav" @pointerover="hoverNav" sf-each="x in groupNames"><i class="fas fa-angle-double-right"></i> {{x}}</span> <span @click="clickNav" @pointerover="hoverNav" class="function-name {{!functionName && \'hide\'}}"><i class="fas fa-angle-double-right"></i> {{functionName}}</span></div></project-navigation-bar>',sf.component("project-navigation-bar",e=>{e.instanceName="",e.functionName="",e.groupNames=[],e.mainInstance=null,e.init=function(){$.afterRepaint().then(()=>{let t=$('sf-space[blackprint] > sf-m[name="container"]',e.$el[0].closest("sketch-page"))[0].model.$space.sketch,i=e.mainInstance=t.rootInstance??t;null==i.tabInfo?i.once("editor.tabInfo",t=>{e.instanceName=t.title}):e.instanceName=i.tabInfo.title;let n=t.parentInterface;null!=n&&(e.functionName=n.title.split("/").join(" / ")),""===e.functionName&&e.$el(".function-name").remove()})},e.hoverNav=function(e){let t=e.target;null==t.nextElementSibling?ToolTip.set("You currently on this page"):null==t.previousElementSibling?ToolTip.set("Navigate to root page"):ToolTip.set("Navigate to this page")},e.clickNav=function(t){let i=t.target;if(null!=i.nextElementSibling){if(null==i.previousElementSibling){let t=e.mainInstance.page.space.closest("vw-page > sf-page-view").routePath;return views.goto(t),void(e.mainInstance.tabInfo.currentRoute=t)}SmallNotif.add("Failed to navigating to this page","red")}},e.unhoverNav=function(){ToolTip.set()}}),__tmplt["BPEditor/component/sketch-panel-bottom.sf"]='<sketch-panel-bottom class="panel {{opened ? \'opened\' : \'\'}}" @contextmenu="SmallNotif.add(\'Some panels still WIP\')"><div class="opener" @click="opened ? closePanel(event) : openPanel()"><i class="fas fa-chevron-{{opened ? \'down\' : \'up\'}}"></i></div><div class="content"><div class="buttons"><div @click="executionPauseSwitch" class="button {{ execOrder.pause && execOrder.length === 0 && !execOrder._hasStepPending ? \'inactive\' : \'\' }}"><i class="fa fa-{{r_execOrder.pause ? \'play\' : \'pause\'}}"></i> {{ r_execOrder.pause ? \'Next\' : \'Pause\' }}</div><div class="button {{r_execOrder.stepMode ? \'active\' : \'\'}}" @click="executionStepMode"><i class="fa fa-shoe-prints"></i> Step Mode</div><div class="button" @click="sketchRefresh"><i class="fa fa-sitemap"></i> Refresh</div><div class="button debug-desc">{{noteTitle}} <span>{{note}}</span></div></div><div class="description">This editor still in development (≧▽≦)／<br>I want to make it better and easier to use.<br></div></div></sketch-panel-bottom>',sf.component("sketch-panel-bottom",{template:"BPEditor/component/sketch-panel-bottom.sf"},function(e){function t(){e.$el.css("backdrop-filter","none"),setTimeout(()=>e.$el.css("backdrop-filter",""),300)}e.opened=!1,e.sketchPage=null,e.instance=null,e.execOrder=null,e.r_execOrder={pause:!1,stepMode:!1},e.noteTitle="",e.note="",e.stepModeIsRequesting="",e.beforeInit=async function(){function t(){e.hasRemote=!0;let t=e.instance._remote,i=e.instance.ifaceList;function n(e){if(null==e)return null;let t=i[e.out.i].output[e.out.name].cables,n=null;for(let i=0;i<t.length;i++){let o=t[i];if(o.output.iface.i===e.out.i&&o.input?.iface.i===e.in?.i){n=o;break}}return n}t.on("stepmode.enabled",t=>{e.r_execOrder.stepMode=t.flag,t.flag&&(e.opened=!0)}),t.on("stepmode.paused",t=>{e.r_execOrder.pause=t.pause,t.pause?e.opened=!0:e.instance._emit("execution.paused",{afterNode:null,beforeNode:null,cable:null,cables:null,triggerSource:0})}),t.on("stepmode.status",t=>{e.r_execOrder.pause=!0,e.instance._emit("execution.paused",{afterNode:null!=t.afterNode?i[t.afterNode].node:null,beforeNode:null!=t.beforeNode?i[t.beforeNode].node:null,cable:n(t.cable),cables:t.cables?.map(n),triggerSource:t.triggerSource})})}await new Promise(e=>{$(()=>setTimeout(e,500))}),e.sketchPage=$("vw-page > .page-current > sketch-page")[0].model,e.sketchPage.panels.bottom=e,e.instance=e.sketchPage.sketch,e.execOrder=e.instance.executionOrder,sf.watch(e.execOrder,"pause",(t,i)=>{e.instance._remote||(e.r_execOrder.pause=i)}),sf.watch(e.execOrder,"stepMode",(t,i)=>{e.instance._remote||(e.r_execOrder.stepMode=i)}),sf.watch(e.instance,"_remote",t),e.instance._remote&&t()},e.executionPauseSwitch=function(){let t=e.instance.executionOrder;e.sketchPage.$el(".debug-after-node, .debug-next, .debug-cable").removeClass("debug-after-node").removeClass("debug-cable").removeClass("debug-next"),e.stepModeIsRequesting||e.sketchPage.$el("editor-display-port-value").remove(),e.hasRemote?e.r_execOrder.pause?e.instance._remote.pauseExecution(!1):e.instance._remote.pauseExecution(!0):t.pause?(e.noteTitle=e.note="",t.pause=!1,t.next(!0)):t.pause=!0},e.executionStepMode=function(){let t=e.instance.executionOrder;t.stepMode=!t.stepMode,e.hasRemote?e.r_execOrder.stepMode?e.instance._remote.enableStepMode(!1):e.instance._remote.enableStepMode(!0):t.stepMode&&(t.pause=!0)},e.sketchRefresh=function(){CurrentSketch.recalculatePosition()},e.openPanel=function(){t(),e.opened=!0},e.closePanel=function(i){t(),i.stopPropagation(),e.opened=!1}}),__tmplt["BPEditor/component/sketch-panel-left.sf"]='<sketch-panel-left class="panel {{opened ? \'opened\' : \'\'}}" @contextmenu="event.preventDefault()"><div class="content"><div class="preview" style="height: {{scaledPreviewHeight}}px"><div class="zoom" style="transform: scale({{previewScale}})"><sf-slot for="preview"></sf-slot></div></div><div class="variable-list"><div class="title" @click="collapseSubPanel(this, true)"><i class="fa fa-chevron-down collapse-btn"></i> Variables</div><div class="tree-view-scroll"><div class="tree-view tree-fullview tree-item has-child collapsed"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> Environment ({{_envVar.length}})</div><div class="button" @click="Modal.goto(\'/environment-variables\')"><i class="fa fa-plus-square" title="Create new environment variable"></i></div><div class="tree-view tree-group" tree-section="environmentVar" @pointerdown="checkDragNode"><div class="tree-item" sf-each="val in _envVar" tree-item-key="{{val.key}}"><div class="title"><i class="fa tree-icon"></i> {{val.key}}</div></div></div></div><div class="tree-view tree-fullview tree-item has-child collapsed"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> Public ({{variableCount}})</div><div class="button" @click="createVariable(event, Blackprint.VarScope.Public)"><i class="fa fa-plus-square" title="Create new public/global variable"></i></div>\x3c!-- /src/component/tree-list.sf --\x3e<div class="tree-view tree-group" tree-section="variables" @pointerdown="checkDragNode"><div class="tree-item collapsed" tree-item-key="{{key}}" sf-each="key, val in variables" style="display: {{val.hidden ? \'none\' : \'\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList({ parentKey: \'\', key, val, onToggle(){ recalculateMenu() } }); }}</div></div></div><div class="tree-view tree-fullview tree-item has-child" style="display: {{isFunctionSketch ? \'\' : \'none\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> Function</div><div class="tree-view tree-group"><div class="tree-view tree-item has-child collapsed"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> Input ({{funcInput.length}})</div><div class="tree-view tree-group" tree-section="functionInputs" @pointerdown="checkDragNode"><div class="tree-item collapsed" tree-item-key="{{val.name}}" sf-each="val in funcInput"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{val.name}}</div></div></div></div><div class="tree-view tree-item has-child collapsed"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> Output ({{funcOutput.length}})</div><div class="tree-view tree-group" tree-section="functionOutputs" @pointerdown="checkDragNode"><div class="tree-item collapsed" tree-item-key="{{val.name}}" sf-each="val in funcOutput"><div class="title"><i class="fa tree-icon"></i> {{val.name}}</div></div></div></div><div class="tree-view tree-item has-child collapsed"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> Shared ({{functionSharedVariableLength}})</div><div class="button" @click="createVariable(event, Blackprint.VarScope.Shared)" title="Create new shared function variable"><i class="fa fa-plus-square"></i></div><div class="tree-view tree-group" tree-section="sharedVariables" @pointerdown="checkDragNode"><div class="tree-item collapsed" tree-item-key="{{key}}" sf-each="key, val in funcSharedVariable" style="display: {{val.hidden ? \'none\' : \'\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList({ parentKey: \'\', key, val, onToggle(){ recalculateMenu() } }); }}</div></div></div><div class="tree-view tree-item has-child collapsed"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> Private ({{functionVariableLength}})</div><div class="button" @click="createVariable(event, Blackprint.VarScope.Private)" title="Create new private function variable"><i class="fa fa-plus-square"></i></div><div class="tree-view tree-group" tree-section="privateVars" @pointerdown="checkDragNode"><div class="tree-item collapsed" tree-item-key="{{key}}" sf-each="key, val in funcVariable" style="display: {{val.hidden ? \'none\' : \'\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList({ parentKey: \'\', key, val, onToggle(){ recalculateMenu() } }); }}</div></div></div></div></div></div></div><div class="function-list collapsed"><div class="title" @click="collapseSubPanel(this, true)"><i class="fa fa-chevron-right collapse-btn"></i> Functions ({{functionCount}})</div><div class="button" @click="createFunction" title="Create new empty function node"><i class="fa fa-plus-square"></i></div>\x3c!-- /src/component/tree-list.sf --\x3e<div class="tree-view tree-view-scroll" tree-section="functions" @pointerdown="checkDragNode"><div class="tree-item collapsed" tree-item-key="{{key}}" sf-each="key, val in functions" style="display: {{val.hidden ? \'none\' : \'\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList({ parentKey: \'\', key, val, onToggle(){ recalculateMenu() } }); }}</div></div></div><div class="event-list collapsed"><div class="title" @click="collapseSubPanel(this, true)"><i class="fa fa-chevron-right collapse-btn"></i> Events ({{events.totalEvent}})</div><div class="button" @click="createEvent" title="Create new empty event node"><i class="fa fa-plus-square"></i></div>\x3c!-- /src/component/tree-list.sf --\x3e<div class="tree-view tree-view-scroll" tree-section="events" @pointerdown="checkDragNode"><div class="tree-item collapsed" tree-item-key="{{key}}" sf-each="key, val in events.treeList" style="display: {{val.hidden ? \'none\' : \'\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList({ parentKey: \'\', key, val, onToggle(){ recalculateMenu() } }); }}</div></div></div><div class="group-list"><div class="title" @click="collapseSubPanel(this, true)"><i class="fa fa-chevron-down collapse-btn"></i> Groups ({{groupList.length}})</div>\x3c!-- This list doesn\'t have namespace, so we don\'t use TreeList component here --\x3e<div class="tree-view tree-view-scroll" tree-section="groups" @pointerleave="groupListLeave()" @pointerdown="checkDragNode"><div class="tree-item" sf-each="val in groupList"><div class="title {{val.active && \'active\'}}" @click="groupListSelect(val)" @pointerover="groupListHover(val)"><i class="fa tree-icon"></i> {{val.title}}</div></div></div></div><div class="node-list"><div class="title" @click="collapseSubPanel(this, true)"><i class="fa fa-chevron-down collapse-btn"></i> Nodes ({{nodeCount}})</div><div class="button" @click="createCustomNode" title="Create new node by using code editor "><i class="fa fa-plus-square"></i></div>\x3c!-- /src/component/tree-list.sf --\x3e<div class="tree-view tree-view-scroll" tree-section="nodes" @pointerdown="checkDragNode" @pointerover="nodeListHover" @pointerleave="nodeListLeave"><div class="tree-item collapsed" sf-each="key, val in nodes" style="display: {{val.hidden ? \'none\' : \'\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList({ parentKey: \'\', key, val, onToggle(){ recalculateMenu() } }); }}</div></div></div></div><div class="opener" @click="opened ? closePanel(event) : openPanel()"><i class="fas fa-chevron-{{opened ? \'left\' : \'right\'}}"></i></div></sketch-panel-left>',sf.component("sketch-panel-left",{template:"BPEditor/component/sketch-panel-left.sf"},function(e){let t=e.sketch=window.CurrentSketch;e.opened=!0,e.preview=null,e.previewWidth=200,e.previewScale=1,e.scaledPreviewHeight=1;let i,n,o,a,l,s=t.parentInterface?.node.bpFunction;function r(e,t){let i=0;if(e.hidden)return i;for(let n in e){let o=e[n];null!=o&&(t?o instanceof Function?i++:i+=r(o,t):o.constructor!==Object?i++:i+=r(o,t))}return c(e),i}function c(e){e._list&&e._list.sort(Intl.Collator().compare),e.refresh?.()}function d(){clearTimeout(i),clearTimeout(n),i=setTimeout(()=>{let t=Intl.Collator().compare;e.groupList.sort((e,i)=>t(e.title,i.title)),e.groupList.refresh()},1e3),n=setTimeout(()=>{e.recalculateMenu()},50)}function p(){e.$el.css("backdrop-filter","none"),setTimeout(()=>e.$el.css("backdrop-filter",""),300)}e.variables=null!=s?s.rootInstance.variables:t.variables,e.functions=t.functions,e.events=t.events||{totalEvent:0,treeList:{}},e.nodes=Blackprint.nodes,e.isFunctionSketch=null!=t.parentInterface,e.funcInput=t.parentInterface?.input._portList??[],e.funcOutput=t.parentInterface?.output._portList??[],e.funcSharedVariable=s?.variables??{},e.funcVariable=t.variables??{},e._envVar=Blackprint.Environment._list,e.functionSharedVariableLength=0,e.functionVariableLength=0,e.variableCount=0,e.functionCount=0,e.eventCount=0,e.nodeCount=0,e.groupList=[],e.refreshNodesCounter=()=>{clearTimeout(o),o=setTimeout(async()=>{await e.recalculateMenu(),e.nodeCount=r(Blackprint.availableNode,!0)},250)},e.refreshVarsCounter=()=>{clearTimeout(a),a=setTimeout(()=>{e.variableCount=r(e.variables),e.functionCount=r(e.functions),e.eventCount=r(e.events),e.isFunctionSketch&&(e.functionSharedVariableLength=r(e.funcSharedVariable),e.functionVariableLength=r(e.funcVariable))},250)},e.groupListElObserver??=new IntersectionObserver((t,i)=>{t.forEach(t=>{let i=t.target.model,n=e.groupList;for(let e=0;e<n.length;e++){let o=n[e];if(o.iface===i){o.active=0!==t.intersectionRatio;break}}})},{root:null,rootMargin:"0px",threshold:[0,.05,1]}),e._onNodeCreated=({iface:i})=>{if(i.node.instance===t&&"Decoration/Group/Default"===i.namespace&&-1===e.groupList.findIndex(e=>e.iface===i)){let t={iface:i,title:i.data?.title,active:!1};e.groupList.push(t),sf.watch(i.data,"title",()=>{t.title=i.data.title,d()}),d(),$.afterRepaint().then(()=>{setTimeout(()=>{null!=i.$el&&e.groupListElObserver.observe(i.$el.eq(0).children(".node")[0])},100)})}},e._onNodeDeleted=({iface:t})=>{let i=e.groupList.findIndex(e=>e.iface===t);-1!==i&&e.groupList.splice(i,1)},e.init=function(){e.$el.parent("sketch-page")[0].model.panels.left=e,e.recalculateMenu(),e.refreshNodesCounter();let i=()=>ToolTip.set();e.$el(".variable-list > .title").on("pointerleave",i).on("pointerover",()=>{ToolTip.set("Can be used for storing output port's value or\naccess stored data into an input port")}),e.$el(".function-list > .title").on("pointerleave",i).on("pointerover",()=>{ToolTip.set("Can be used for creating custom function node or\ngrouping many nodes as a single node")}),e.$el(".event-list > .title").on("pointerleave",i).on("pointerover",()=>{ToolTip.set("Can be used as event emitter that can be accessed\ninside any function or root instance")}),e.$el(".group-list > .title").on("pointerleave",i).on("pointerover",()=>{ToolTip.set("Region markers that can be used to grouping nodes in this page\nIt's recommended to use numbered title\n\nYou can create a region marker by hold\nleft click + move + right click")}),e.$el(".node-list > .title").on("pointerleave",i).on("pointerover",()=>{ToolTip.set("Nodes that registered to Blackprint\nYou can create your own node or import it from external sources")}),t.on("node.created",t=>e._onNodeCreated(t)),t.on("node.deleted",t=>e._onNodeDeleted(t)),e.isFunctionSketch&&s.rootInstance.on("variable.new variable.deleted",t=>e.refreshVarsCounter(t)),Blackprint.on("module.added",t=>e.refreshNodesCounter(t)),Blackprint.on("module.delete",t=>e.refreshNodesCounter(t)),Blackprint.on("module.update",t=>e.refreshNodesCounter(t)),Blackprint.on("bp_editorNodeAvailability",t=>e.refreshNodesCounter(t)),$(e.refreshNodesCounter),$(e.refreshVarsCounter),t.on("json.imported",t=>e.refreshVarsCounter(t)),t.on("variable.new variable.deleted function.new function.deleted",t=>e.refreshVarsCounter(t));let n=t.ifaceList;for(let t=0;t<n.length;t++){let i=n[t];"Decoration/Group/Default"===i.namespace&&e._onNodeCreated({iface:i})}},e.setPreview=function(t){if(null!=t&&e.preview===t||(l?.disconnect(),l=null),e.preview=t,e.previewScale=1,e.scaledPreviewHeight=1,null!=l||null==t)return;let i=0,n=async function(){await $.afterRepaint();let n=t.clientWidth,o=t.clientHeight,a=e.previewWidth/n;i=Math.round(Date.now()/100),e.previewScale=a,e.scaledPreviewHeight=o*a};l=new ResizeObserver(function(e){i!==Math.round(Date.now()/100)&&setTimeout(n,200)}),l.observe(t),setTimeout(n,100)},e.openPanel=function(){p(),e.$el.parent("sketch-page").removeClass("left-menu-hide"),e.opened=!0,t.recalculatePosition()},e.closePanel=function(i){p(),i.stopPropagation(),e.$el.parent("sketch-page").addClass("left-menu-hide"),e.opened=!1,t.recalculatePosition()},e.collapseTree=function(t){if(null==(t=t.nextElementSibling))return;let i,n=$(t.parentNode);i=n.hasClass("tree-view")||n.hasClass("tree-no-model")?!n.hasClass("collapsed"):t.model.hidden=!t.model.hidden,i?n.addClass("collapsed"):(null!=t.model&&c(t.parentNode.model),n.removeClass("collapsed")),e.recalculateMenu()},e.collapseSubPanel=(t,i)=>{let n=$(t),o=n.parent();if(o.toggleClass("collapsed"),!i)return;e.recalculateMenu();let a=n.find(".collapse-btn").removeClass("fa-chevron-down").removeClass("fa-chevron-right");o.hasClass("collapsed")?a.addClass("fa-chevron-right"):a.addClass("fa-chevron-down")},e.recalculateMenu=async function(){let t=e.$el(".variable-list"),i=e.$el(".function-list"),n=e.$el(".event-list"),o=e.$el(".group-list"),a=e.$el(".node-list");if(null==t[0])return;let l=[t,i,n,o,a],s=l.length,r=t.parent()[0].offsetHeight,c=Math.round(r/s),d=l.map(e=>e.find(".tree-view-scroll")[0].scrollTop);l.forEach(e=>e.css("max-height","").css("flex","unset").css("min-height","unset")),await $.afterRepaint(),l.forEach(e=>{let t=e[0].offsetHeight;t<2*c&&e.css("max-height",`${t}px`),e.css("min-height","").css("flex","")}),l.forEach((e,t)=>e.find(".tree-view-scroll")[0].scrollTop=d[t])},e.nodeListLeave=e=>{0===e.pressure&&ToolTip.set()},e.nodeListHover=e=>{if(0!==e.pressure)return;if(!e.target.classList.contains("title"))return ToolTip.set(!1);let t=$(e.target.parentNode);if(t.hasClass("has-child"))return ToolTip.set(!1);let i=t.attr("tree-item-key"),n=t[0].parentNode.model.parentKey.split("/");n.push(i);let o=Blackprint._utils.getDeepProperty(Blackprint._docs,n);if(null==o)return ToolTip.set(!1);ToolTip.set(o.description,e,"basic")},e.checkDragNode=e=>{let i=e.target;if(null!=i.nextElementSibling)return;i=$(i);let n=i.parent(".tree-view").attr("tree-section"),o=i[0].parentNode,a=o.getAttribute("tree-item-key");if(null==a&&"groups"!==n)return;let l=i.parent(".tree-item.has-child > tree-list, .tree-view > .tree-item")[0];if(null==l)return;if(2===e.button)return void $(window).once("contextmenu",i=>{if(e.target!==i.target)return;i.preventDefault();let a=o.model;if("nodes"===n)return;if(null==a)return;let l=[{title:"Rename",async callback(){async function e(e,t,i){return(await Swal.fire({title:e,inputPlaceholder:t,inputValue:i,input:"text"})).value}if("environmentVar"===n){let t=await e("Rename Environment Variable:","MyApp_Custom_Variable",a.key);if(!t)return;let i=sf.model("environment-variables");i.renameEnv(a,{value:t}),i.saveToLocalStorage()}else if("variables"===n){let i=await e("Rename Variable Namespace:","MyApp/Custom/Variable",a.id);if(!i)return;t.renameVariable(a.id,i,Blackprint.VarScope.Public)}else if("sharedVariables"===n){let t=await e("Rename Shared Variable Name:","MyApp_Custom_Variable",a.id);if(!t)return;s.renameVariable(a.id,t,Blackprint.VarScope.Shared)}else if("privateVars"===n){let t=await e("Rename Private Variable Name:","MyApp_Custom_Variable",a.id);if(!t)return;s.renameVariable(a.id,t,Blackprint.VarScope.Private)}else if("functions"===n){let i=await e("Rename Function Namespace:","MyApp/Custom/Function",a.id);if(!i)return;t.renameFunction(a.id,i)}else if("functionInputs"===n){let i=await e("Rename Input Port Name:","MyInputPortName",a.name);if(!i)return;t.parentInterface.renamePort("input",a.name,i)}else if("functionOutputs"===n){let i=await e("Rename Output Port Name:","MyOutputPortName",a.name);if(!i)return;t.parentInterface.renamePort("output",a.name,i)}else if("events"===n){let i=await e("Rename Event Name:","MyApp/Event/Name",a.namespace);if(!i)return;t.events.renameEvent(a.namespace,i)}else if("groups"===n){let t=await e("Rename Group Name:","No title",a.iface.data.title);if(!t)return;a.iface.data.title=t}}},{title:"Delete",description:"Hold shift for instant delete",async callback(){if(!DropDown.lastClickEvent.shiftKey){if(!(await Swal.fire({title:"Are you sure want to delete this?",showCancelButton:!0,confirmButtonText:"Yes"})).isConfirmed)return}"environmentVar"===n?Blackprint.Environment.delete(a.key):"variables"===n?t.deleteVariable(a.id,Blackprint.VarScope.Public):"sharedVariables"===n?s.deleteVariable(a.id,Blackprint.VarScope.Shared):"privateVars"===n?s.deleteVariable(a.id,Blackprint.VarScope.Private):"functions"===n?t.deleteFunction(a.id):"functionInputs"===n?s.deletePort("input",a.name):"functionOutputs"===n?s.deletePort("output",a.name):"events"===n?t.events.deleteEvent(a.namespace):"groups"===n&&t.deleteNode(a.iface)}}];DropDown.show(l,e)});if("groups"===n)return;let r="pointerup";"touch"===e.pointerType&&(r="touchend"),ToolTip.set("Create node"),$(sf.Window).once(r,e=>{ToolTip.set();let i=e.target;if("touchend"===r){let{clientX:t,clientY:n}=e.changedTouches[0];e.clientX=t,e.clientY=n,i=document.elementFromPoint(t,n)}if(null!=i.closest("sketch-page")&&null!=i.closest("sf-m.cables")){let s=l.model.parentKey,r=s?s+"/"+a:a;$.afterRepaint().then(function(){let l=i.getBoundingClientRect(),s=t.scope("container"),c={x:(e.clientX-l.x)/s.scale,y:(e.clientY-l.y)/s.scale};if("nodes"===n)t.createNode(r,c);else if("functions"===n)o.model.createNode(t,c);else if("variables"===n||"sharedVariables"===n||"privateVars"===n){let i;"variables"===n?i=0:"sharedVariables"===n?i=2:"privateVars"===n&&(i=1),c.data={name:r,scope:i},DropDown.show([{title:"Get "+r,callback(){t.createNode("BP/Var/Get",c)}},{title:"Set "+r,callback(){t.createNode("BP/Var/Set",c)}}],{x:e.clientX,y:e.clientY,event:e})}else"environmentVar"===n?(c.data={name:a},DropDown.show([{title:"Get "+a,callback(){t.createNode("BP/Env/Get",c)}},{title:"Set "+a,callback(){t.createNode("BP/Env/Set",c)}}],{x:e.clientX,y:e.clientY,event:e})):"functionInputs"===n?(c.data={name:a},t.createNode("BP/FnVar/Input",c)):"functionOutputs"===n?(c.data={},t.createNode("BP/Fn/Output",c)):"events"===n?(c.data={namespace:r},DropDown.show([{title:"Listen "+a,callback(){t.createNode("BP/Event/Listen",c)}},{title:"Emit "+a,callback(){t.createNode("BP/Event/Emit",c)}}],{x:e.clientX,y:e.clientY,event:e})):console.error("Unhandled side panel section:",n)})}})},e.createVariable=async(e,i)=>{let n=await Swal.fire({title:"Variable Name:",inputPlaceholder:i===Blackprint.VarScope.Public?"MyApp/Custom/Variable":"MyApp_Custom_Variable",input:"text"});if(n=n.value,!n)return;let o=t.parentInterface?.node.bpFunction,a=o?.rootInstance??t;if(i===Blackprint.VarScope.Public)return a.createVariable(n);if(i===Blackprint.VarScope.Shared||i===Blackprint.VarScope.Private)return o.createVariable(n,{scope:i});throw new Error("Unhandled scope: "+i)},e.createFunction=async i=>{let n=await Swal.fire({title:"Function Name:",inputPlaceholder:"MyApp/Custom/Function",input:"text"});n=n.value,n&&((t.parentInterface?.node.bpFunction.rootInstance??t).createFunction(n,{description:"No description"}),e.recalculateMenu())},e.createEvent=async i=>{let n=await Swal.fire({title:"Event Namespace:",inputPlaceholder:"MyApp/Custom/Event",input:"text"});n=n.value,n&&((t.parentInterface?.node.bpFunction.rootInstance??t).events.createEvent(n),e.recalculateMenu())},e.createCustomNode=e=>{Modal.goto("/custom-node-editor")},e.groupListLeave=()=>{ToolTip.set(),e.groupList.forEach(e=>e.iface.$el.children(".node").removeClass("highlighted"))},e.groupListHover=({iface:t})=>{e.groupListLeave(),ToolTip.set({title:t.data.title,desc:t.data.textContent,comment:t.comment},null,"general"),t.$el.children(".node").addClass("highlighted")},e.groupListSelect=e=>{let i=t.scope("container"),{x:n,y:o}=e.iface;n-=40,o-=40,n<0&&(n=0),o<0&&(o=0),n=i.scale*n,o=i.scale*o,i.moveContainer({x:-n,y:-o}),e.iface.swapZIndex()}}),__tmplt["BPEditor/component/sketch-panel-right.sf"]='<sketch-panel-right class="panel {{opened ? \'opened\' : \'\'}} {{ifaceSelected == null ? \'hide\' : \'\'}}"><div class="content"><div class="panel-title">Properties</div><div class="bpsprf-default"><div class="field"><span class="name">Title:</span> <span>{{data.title}}</span></div><div class="field"><span class="name" title="Registered node path">Namespace:</span> <span style="font-size:12px">{{data.namespace}}</span></div><div class="field"><span class="name" title="Add an ID so you can easily reference to this node from scripts">Node ID:</span> <input sf-bind="data.id" placeholder="..."></div><div class="field"><span class="name">Comment:</span> <textarea sf-bind="data.comment" placeholder="Add node comment here..."></textarea></div></div><div class="bpsprf-iface"><sf-slot for="ifaceField"></sf-slot></div></div><div class="opener" @click="opened ? closePanel(event) : openPanel()"><i class="fas fa-chevron-{{opened ? \'right\' : \'left\'}}"></i></div></sketch-panel-right>',sf.component("sketch-panel-right",{template:"BPEditor/component/sketch-panel-right.sf"},function(e){function t(){e.$el.css("backdrop-filter","none"),setTimeout(()=>e.$el.css("backdrop-filter",""),300)}e.opened=!0,e.ifaceSelected=null,e.ifaceField=null,e.data={title:"",namespace:"",id:"",v2m$id(t){e.ifaceSelected.node.instance.changeNodeId(e.ifaceSelected,t)},comment:"",v2m$comment(t){e.ifaceSelected.comment=t,e.ifaceSelected.node.instance.emit("_editor.node.comment",{iface:e.ifaceSelected})}},e.init=function(){e.$el.parent("sketch-page")[0].model.panels.right=e},e.hide=function(){e.ifaceSelected=null};e.selectNode=function(t){if(e.ifaceSelected=t,e.data.title=t.title,e.data.namespace=t.namespace,e.data.id=t.id||"",e.data.comment=t.comment||"",null==t._bpeditorpanel){let e="bppc-"+t.namespace.toLowerCase().split("/").join("-"),i=Blackprint.space.component(e);if(null!=i.new){let e=i.new.stem(t);t._bpeditorpanel=e}}e.ifaceField=t._bpeditorpanel||null},e.openPanel=function(){e.opened||t(),e.opened=!0},e.closePanel=function(i){t(),i.stopPropagation(),e.opened=!1}}),__tmplt["BPEditor/component/tree-list.sf"]='<tree-list class="tree-list-menu {{hidden ? \'hidden\' : \'\'}}"><div class="tree-item" sf-each="key, val in deep" tree-item-key="{{key}}"><div class="title" @click="collapse(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if hasChild(val): return new $TreeList({ parentKey: parentKey, key, val, hasChild: hasChild, onToggle: onToggle }); }}</div></tree-list>',sf.component("tree-list",{template:"BPEditor/component/tree-list.sf"},function(e,t,i={}){e.parentKey=i.parentKey??"",e.parentKey+=i.key&&""!==e.parentKey?`/${i.key}`:i.key??"",e.deep=i.val??{},e.hidden=!0,e.hasChild=i.hasChild??(e=>e.constructor===Object),e.onToggle=i.onToggle??function(){},e.init=function(){e.$el.parent().addClass("has-child").addClass("collapsed")},e.collapse=function(t){if(null==(t=t.nextElementSibling))return;let i=t.model.hidden=!t.model.hidden;i?$(t.parentNode).addClass("collapsed"):$(t.parentNode).removeClass("collapsed"),e.onToggle(i)}}),__tmplt["BPEditor/component/tree-list2.sf"]='<tree-list2 class="tree-list-menu {{hidden ? \'hidden\' : \'\'}}"><div class="tree-item" sf-each="key, val in deep" tree-item-key="{{key.replace(/\\W/g, \'_\')}}"><div class="title" @click="collapse(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.branch != null: return new $TreeList2({parentKey: parentKey, key, val: val.branch, onToggle: onToggle}); }}</div></tree-list2>',sf.component("tree-list2",{template:"BPEditor/component/tree-list2.sf"},function(e,t,i={}){e.parentKey=i.parentKey??"",e.parentKey+=i.key&&""!==e.parentKey?`/${i.key}`:i.key??"",e.deep=i.val??{},e.hidden=!1,e.onToggle=i.onToggle??function(){},e.init=function(){e.$el.parent().addClass("has-child").addClass("collapsed")},e.collapse=function(e){}}),_sf_internal.append("BPEditor/model/Loading.sf",'\x3c!-- /src/model/loading.sf --\x3e<sf-m name="loading" class="{{showed && \'show\'}}"><span class="icon"><i class="fa fa-fan fa-spin"></i></span> <span class="desc">{{desc}}</span></sf-m>');var Loading=sf.model("loading",function(e){e.showed=!1,e.desc="",e.set=function(t){e.showed=!!t,e.desc=t}});__tmplt["BPEditor/model/header.sf"]='<sf-m name="header" class="header {{showOptions ? \'sketch-mode\' : \'\'}}"><div class="header-left" @click="mainMenu"><img src="/assets/img/icon/blackprint.png"><div>Blackprint</div><i class="fa fa-caret-down menu-button-hint"></i></div><div class="header-center {{showTabs ? \'hide\':\'\'}}"><div>A node to node general purpose visual programming</div></div><div class="header-project-tabs {{!showTabs ? \'hide\':\'\'}}"><sf-template path="BPEditor/model/project-list.sf"></sf-template></div><div class="header-menu"><div class="item-list"><div class="item" @click="openDocumentation" title="Guide or Documentation"><i class="fa fa-journal-whills"></i></div><div class="item" @click="Modal.goto(\'/module-example-list\')" title="Module examples"><i class="fa fa-map-signs"></i><div class="module-counter">{{_moduleExampleList.length}}</div></div><div class="item" @click="Modal.goto(\'/module-url\')" title="Loaded module"><i class="fa fa-boxes"></i><div class="module-counter">{{_loadedModuleURL.length}}</div></div><div class="item" @click="cloneContainer" title="Open in new window"><i class="fa fa-window-restore"></i></div><div class="item {{disableVFXActive ? \'active\' : \'\'}}" @click="disableVFX" title="Improve performance by disable VFX"><i class="fas fa-rocket"></i></div><div class="item {{visualizeActive ? \'active\' : \'\'}}" @click="visualizeFlow" title="Visualize data flow"><i class="fas fa-bezier-curve"></i></div></div><div class="header-zoom"><div style="display: {{info.scale === 100 ? \'none\' : \'block\'}}"><i class="fas fa-search"></i> {{info.scale | 0}}%</div></div></div></sf-m>';var EditorHeader=sf.model("header",function(e,t){e.message="Hello",e.showOptions=!1,e.showTabs=!1,e.info={scale:100},e._loadedModuleURL=Blackprint._modulesURL,e._moduleExampleList=window._moduleExampleList??=[],e.init=function(){sf.URI.parse()},e.mainMenu=function(i){if(!1===e.showOptions)return;let n=CurrentSketch.rootInstance||CurrentSketch,o=sf.model("modal-remote-sketch-connect").socket,a=sf.model("modal-remote-engine-connect").socket;t("dropdown").show([{title:"Sketch",icon:"fa fa-pencil-ruler",deep:[{title:"Open",icon:"fa fa-folder-open",deep:[{title:"From Clipboard",async callback(){let e=await Swal.fire({title:"Paste the JSON here",input:"text"});e=e.value,e&&SketchImporter.loadJSON(e,n)}},{title:"From File",callback(){var e=document.createElement("input");e.setAttribute("type","file"),e.onchange=async function(){if(0===this.files.length)return;if(1!==this.files.length)return console.log(this.files),console.log("Currently only support 1 file"),void SmallNotif.add("Currently only support 1 file","error");let e=JSON.parse(await this.files[0].text());e&&(e=e.trim(),"{"!==e.slice(0,1)&&SmallNotif.add("Data in the file is not a JSON","error")),SketchImporter.loadJSON(e,n)},e.click()}}]},{title:"Export",icon:"fa fa-save",deep:[{title:"To Clipboard",async callback(){let e=await Swal.fire({title:"Choose one of the export mode",cancelButtonText:"Minified JSON",confirmButtonText:"Prettified JS",denyButtonText:"Minimal JSON",denyButtonColor:"gray",showCancelButton:!0,showDenyButton:!0,showCloseButton:!0});if(e.isDismissed&&"backdrop"===e.dismiss)return;let t={};e.isConfirmed?(t.toJS=!0,t.space="\t"):e.isDenied&&(t.position=!1,t.comment=!1),t.environment=!1;var i=n.exportJSON(t);navigator.clipboard.writeText(i),Swal.fire({title:"Copied to clipboard!",text:i})}},{title:"To File",callback(){var e=document.createElement("a"),t=new Blob([n.exportJSON({environment:!1})],{type:"application/json"});e.href=URL.createObjectURL(t),e.download="blackprint.json",e.click(),setTimeout(function(){URL.revokeObjectURL(e.href)},12e4)}},{title:"To URL",callback(){var e=pako.deflateRaw(n.exportJSON({environment:!1}),{level:9}),t=Base64.fromUint8Array(e,!0);sf.URI.data.importSketch=[t],sf.URI.replace();let i=location.href;navigator.clipboard.writeText(i),Swal.fire({title:"Copied to clipboard!",text:i})}}]},{title:"Code Generation",icon:"fa fa-save",callback(){Modal.goto("/code-generator")}},{title:"Examples",icon:"fa fa-layer-group",callback(){Modal.goto("/example-list")}},{title:"Reload",icon:"fa fa-sync",async callback(){if((await Swal.fire({title:"This action will export and reimport current sketch",showCancelButton:!0,showCloseButton:!0})).isDismissed)return;let e=SketchList[0],t=e.exportJSON({environment:!1});e.clearNodes(),await e.importJSON(t)}}]},{title:"Modules",icon:"fa fa-layer-group",deep:[{title:"Create Custom",icon:"fa fa-plus",hide:void 0===sf.hotReload,callback(){Modal.goto("/custom-node-editor")}},{title:"Loaded module",icon:"fa fa-boxes",callback(){Modal.goto("/module-url")}}]},{title:"Remote",icon:"fa fa-plug",hide:void 0===sf.hotReload,deep:[{title:"Sketch"+(o?.connected?" ✔️":""),icon:"fa fa-plug",deep:o?.connected?[{title:"Control Panel",icon:"fa fa-grip-horizontal",callback(){Modal.goto("/remote-sync")}},{title:"Disconnect",icon:"fa fa-power-off",callback(){o.disconnect()}}]:void 0,callback:!o?.connected&&(()=>{Modal.goto("/remote-sketch-connect")})},{title:"Engine"+(a?.connected?" ✔️":""),icon:"fa fa-plug",deep:a?.connected?[{title:"Control Panel",icon:"fa fa-grip-horizontal",callback(){Modal.goto("/remote-sync")}},{title:"Disconnect",icon:"fa fa-power-off",callback(){a.disconnect()}}]:void 0,callback:!a?.connected&&(()=>{Modal.goto("/remote-engine-connect")})},{title:function(){if(void 0===window.___browserSync___)return"Module server";let e=___browserSync___.socket,t=e.connected,i=0===e.io.uri.indexOf(location.origin);return"Module server "+(!t||i?"":"✔️")}(),icon:"fa fa-plug",callback(){if(window.___browserSync___){let e=___browserSync___.socket,t=e.connected,i=0===e.io.uri.indexOf(location.origin);t&&!i&&e.disconnect()}Modal.goto("/dev-mode")}}]},{title:"Development Mode",icon:"fa fa-tools",hide:void 0!==sf.hotReload,async callback(){(await Swal.fire({title:"Warning",text:"Development mode editor is intended for developers only, because it has feature that can evaluating code you will need to be more aware with code that you will run or execute. Are you sure to continue?",showCancelButton:!0,showCloseButton:!0})).isDismissed||(location.pathname="/dev.html")}},{title:"Environment",icon:"fa fa-key",callback(){Modal.goto("/environment-variables")}},{title:"Settings",icon:"fa fa-tools",callback(){Modal.goto("/sketch-settings")}},{title:"Home",icon:"fa fa-home",callback(){views.goto("/")}}],{element:e.$el(".header-left")[0],className:"header-left-menu"})},e.openDocumentation=function(){Modal.goto("/documentation")},e.cloneContainer=function(){window.CurrentSketch.page.cloneContainer()},e.disableVFXActive=!1,e.disableVFX=function(){e.disableVFXActive=!e.disableVFXActive,e.disableVFXActive?$("body").addClass("blackprint-no-vfx"):$("body").removeClass("blackprint-no-vfx"),localStorage.disableVFXActive=e.disableVFXActive?"1":"0"},"1"===localStorage.disableVFXActive&&!1===e.disableVFXActive&&e.disableVFX(),e.visualizeActive=!0,e.visualizeFlow=function(){e.visualizeActive=!e.visualizeActive,Blackprint.settings("visualizeFlow",e.visualizeActive)}});_sf_internal.append("BPEditor/model/modal.sf",'\x3c!-- /src/model/modal.sf --\x3e<sf-m name="modal" class="modal {{showed && \'show\'}}"><div class="modal-dialog"><vw-modal></vw-modal></div></sf-m>');var Modal=sf.model("modal",function(e){e.showed=!1,e.init=function(){e.hotReloaded(),$(window).on("keyup",function(t){"Escape"===t.key&&e.showed&&e.hide()})},e.hotReloaded=function(){e.views=sf.Views.listSelector["vw-modal"]};let t={};e.onHide=function(e,i){(t[e]??=[]).push(i)},e._triggerHide=function(){let i=t[e.views.currentPath];i?.forEach(e=>e())},e.hide=function(){e.showed=!1,e.$el(".modal-dialog").off("pointerdown",e.hide,{outside:!0}),e._triggerHide()},e.goto=function(t){e._triggerHide(),e.views.goto(t),e.showed=!0,setTimeout(()=>{e.$el(".modal-dialog").on("pointerdown",e.hide,{outside:!0})},400)}});__tmplt["BPEditor/model/project-list.sf"]='<sf-m name="project-list"><div class="list" title="Use Alt + 1/2/3 to switch between tab, Alt + W to close"><div class="item {{x.active && \'active\'}}" sf-each="x in list" @contextmenu.prevent="openMenu(event, x)"><i class="fa fa-sticky-note"></i> <span @click="switchTab(x)" title="{{x.tooltip || \'\'}}">{{x.title}}</span> <i class="fa fa-{{x.isUnsaved ? \'circle\' : \'times close\'}}" @click="closeTab(x)"></i></div></div><div class="create-tab" @click="createTab" title="Create new instance, public variable/event/function will not be shared on the new instance"><i class="fa fa-plus"></i></div></sf-m>',sf.model("project-list",e=>{e.list=[{active:!0,title:"Untitled-1",id:"1",isUnsaved:!1,currentRoute:"/sketch/1"}],e.uniqId=2,e.init=function(){window.addEventListener("beforeunload",t=>{let i=e.list,n=!1;for(let e=0;e<i.length;e++)if(i[e].isUnsaved){n=!0;break}if(n)return t.preventDefault(),t.returnValue="You have unsaved changes, are you sure to close this tab?"},{capture:!0})},e.storeCurrentSketchToTab=function(e,t){setTimeout(()=>{let i=CurrentSketch.page.$el.parent()[0].routerData.page;if(t!==i)throw new Error("Failed to save sketch page's reference");e.sketch!==CurrentSketch&&(e.sketch=CurrentSketch,CurrentSketch.tabInfo=e,CurrentSketch.emit("editor.tabInfo",e),CurrentSketch.on("cable.connect cable.disconnect node.created node.delete node.move node.id.changed port.default.changed _port.split _port.unsplit _port.resync.allow _port.resync.disallow variable.renamed",e._needSave=function(){e.isUnsaved=!0}))},50)},e.getActiveTab=function(){let t=e.list;for(let e=0;e<t.length;e++)if(t[e].active)return t[e]},e.createTab=function(){let t=""+e.uniqId++,i={active:!1,title:"Untitled-"+t,id:t,isUnsaved:!1,currentRoute:"/sketch/"+t};return e.list.push(i),e.switchTab(i),e.storeCurrentSketchToTab(i,t),i},e.switchTab=function(t){let i=e.list;for(let e=0;e<i.length;e++)i[e].active=!1;t.active=!0,views.goto(t.currentRoute)},e.saveTab=async function(t){if(null==t)return;if(!0===t){let i=e.list;for(let e=0;e<i.length;e++)if(i[e].active){t=i[e];break}}t.title.includes(".bpi")||(t.title+=".bpi");let i=sf.model("project-panel-workspace"),n=await i.resolvePath(EditorWorkingDir.name+"/instances/"+t.title);null==n&&(n=await EditorWorkingDir.createFile("instances/"+t.title),await i.rescanFiles());t.sketch.rootInstance||t.sketch;await n.writeData(t.sketch.exportJSON({environment:!1})),t.isUnsaved=!1;let o=e.list,a=[];for(let e=0;e<o.length;e++)o[e].title.endsWith(".bpi")&&a.push(o[e].title);SmallNotif.add("Instance file saved to workspace","green"),0!==a.length&&i.setSetting("opened_instances",a)},e.openMenu=function(t,i){DropDown.show([{title:"Rename",async callback(){let e=i.title,t=e.lastIndexOf(".bpi");-1===t&&(t=e.length);let n=await Swal.fire({title:"Rename to:",text:e.slice(0,t),input:"text"});if(n=n.value,!n)return;if(n+=".bpi"!=n.slice(-4)?".bpi":"",i.title=n,null==EditorWorkingDir)return;let o=sf.model("project-panel-workspace"),a=EditorWorkingDir.name+"/instances/"+e;null==await o.resolvePath(a)?(await EditorWorkingDir.createFile("instances/"+n),await o.rescanFiles()):o.fileRename(a,n)}},{title:"Save",callback(){e.saveTab(i)}}],{x:t.clientX,y:t.clientY,event:t})},e.closeTab=function(t,i=!1){let n=e.list,o=n.indexOf(t);if(-1===o)return;let a,l,s=[...$("vw-page",views.rootDOM)[0].children];for(let e=0;e<s.length;e++)if(l=s[e],l.routerData.page===t.id){a=$("sketch-page",l)[0].model.sketch;break}if(null!=a){if(t.isUnsaved&&!confirm("Are you sure to close this unsaved instance?"))return;a.destroy(),l.remove()}n.splice(o,1),i||(0===n.length?e.createTab():e.switchTab(n[0]))}}),__tmplt["BPEditor/model/project-panel-left.sf"]='<sf-m name="project-panel-left"><div class="menus"><div class="button {{x.active ? \'active\' : \'\'}}" @pointerover="hover(x)" @pointerout="unhover(x)" sf-each="x in buttons" @click="change(x)"><div class="highlight"></div><i class="{{x.icon}}"></i><div class="bubble {{x.bubble ? \'\':\'hide\'}}">{{x.bubble}}</div></div></div><div class="panels"><div class="workspace {{activeId === \'workspace\' ? \'\':\'hide\'}}"><sf-template path="BPEditor/model/project-panel-left/workspace.sf"></sf-template></div></div></sf-m>',sf.model("project-panel-left",e=>{e.activeId="sketch",e.buttons=[{active:!0,id:"sketch",bubble:"",tooltip:"Sketch",icon:"fa fa-pencil-ruler"},{active:!1,id:"workspace",bubble:"",tooltip:"Workspace",icon:"fa fa-folder"},{active:!1,id:"remote",bubble:"",tooltip:"Remote Instance / Collaboration",icon:"fa fa-wifi"}],e.init=function(){},e.change=function(t){if(t.active)return;if("remote"===t.id)return SmallNotif.add("Feature not ready");let i=e.buttons;for(let e=0;e<i.length;e++){let t=i[e];if(t.active){t.active=!1;break}}t.active=!0,e.activeId=t.id},e.hover=function(e){ToolTip.set(e.tooltip)},e.unhover=function(e){ToolTip.set()}}),_sf_internal.append("BPEditor/model/tooltip.sf",'\x3c!-- /src/model/tooltip.sf --\x3e<sf-m name="tooltip" class="{{showed && \'show\'}}" style="transform: translate({{x}}px, {{y}}px);"><div class="{{type === \'basic\' ? \'\' : \'hide-this\'}} basic desc">{{desc}}</div><div class="{{type === \'port\' ? \'\' : \'hide-this\'}} port"><div class="type">Type: <span style="color: {{port.color}}">{{port.type}}</span></div><div class="feature" style="display: {{port.feature ? \'\' : \'none\'}}">Feature: <span>{{port.feature}}</span></div><div class="desc">{{port.desc}}</div></div><div class="{{type === \'node\' ? \'\' : \'hide-this\'}} node"><div class="path">Path: <span>{{node.path}}</span></div><div class="id" style="display: {{node.id ? \'\' : \'none\'}}">ID: <span>{{node.id}}</span></div><div class="desc">{{node.desc}}</div><div class="preview"><video :src="{{node.hasVideo}}" style="display: {{node.hasVideo ? \'\' : \'none\'}}"></video><img :src="{{node.hasPicture}}" style="display: {{node.hasPicture ? \'\' : \'none\'}}"></div></div><div class="{{type === \'general\' ? \'\' : \'hide-this\'}} general"><div class="title">{{general.title}}</div><div class="desc" style="display: {{general.desc ? \'\' : \'none\'}}">{{general.desc}}</div><div class="comment" style="display: {{general.comment ? \'\' : \'none\'}}">{{general.comment}}</div></div></sf-m>');var ToolTip=sf.model("tooltip",function(e){e.showed=!1,e.x=0,e.y=0,e.type="basic",e.desc="",e.port={type:"",desc:"",color:""},e.node={path:"",desc:"",hasVideo:"",hasPicture:""},e.general={title:"",desc:"",comment:""},e.nodeVideoEl=null,e.nodePictureEl=null,e.init=function(){e.nodeVideoEl=e.$el(".node .preview video"),e.nodePictureEl=e.$el(".node .preview img")},e._listener=function(t){e.x=t.clientX,e.y=t.clientY},e.set=function(t,i,n="basic"){null!=i&&(e.x=i.x,e.y=i.y),t&&!1===e.showed?(e.showed=!0,$(window).on("pointermove",e._listener)):t||(e.showed=!1,$(window).off("pointermove",e._listener)),e.type=n;let o=e.nodeVideoEl[0];if(o.loop=!1,o.pause(),e.node.hasVideo="",e.node.hasPicture="",t)if("basic"===n)e.desc=t;else if("node"===n){if(e.node.path=t.namespace,e.node.desc=t.docs?.description||"",e.node.id=t.id,e.node.hasVideo=t.docs?.tags?.video_url||"",e.node.hasPicture=t.docs?.tags?.picture_url||"",e.node.hasVideo){let t=e.nodeVideoEl[0];t.loop=!0,t.play()}}else if("general"===n)e.general.title=t.title,e.general.desc=t.desc||"",e.general.comment=t.comment||"";else if("port"===n){let i=t.type.name||"",n="";if(i.includes("BP-Union"))i=i.replace(/BP\-.*? /g,""),i=`<${i.split(" ").join(" | ")}>`,n="Union";else if(t.classAdd.includes("BP-StructOf"))i=`${i}{...}`,n="Structure";else if(t.classAdd.includes("BP-StructSplit"))i=i.replace(/BP\-(Open|Last) /g,""),n="StructureAccess";else if(i.startsWith("BP-")){let e=/(BP\-.*?) ?(.*)?/g.exec(i);null==e?i=n=i.replace("BP-",""):(i=e[2],n=e[1].replace("BP-",""))}else n=t.classAdd;if(null!=t.virtualType){let e=t.virtualType?.map(e=>e.name).join(" | ");i+=e?` as Virtual<${e}>`:""}e.port.type=i,e.port.feature=n;let o=t.docs?.description||"";e.port.desc=o.replace(/@menu\b.*?$/s,"").trim();let a=t.iface[t.source]._portList.getElement(t).querySelector(".port"),l=window.getComputedStyle(a).getPropertyValue("background-color");"rgba(0, 0, 0, 0)"===l&&(l="white"),e.port.color=l}}});_sf_internal.append("BPEditor/model/tutorial.sf",'<sf-m name="tutorial" style="display: {{active ? \'block\' : \'none\'}}"><div class="highlighter"><div class="dark-ground"></div><div><div class="light" sf-each="val in light" style="transform: translate({{val.position.x}}px, {{val.position.y}}px);"></div></div></div><div class="hinter"><div class="hints" sf-each="val in light" style="transform: translate({{val.position.x}}px, {{val.position.y}}px);"><div class="light"></div><div class="message" style="transform: translate({{-val.overflow.x}}px, {{-val.overflow.y}}px);">{{val.message}}</div></div></div></sf-m>'),window.Tutorial=sf.model("tutorial",e=>{e.light=[],e.pending=[],e.active=!1,e.loadTutorial=function(t){if(!(t instanceof Array))throw new Error("Tutorial must be an array");$(document.body).append(e.$el[0]),e.pending=t.slice(0)},e.show=function(t){e.pending=[t],e.next()},e.addTutorial=function(...t){e.pending.push(...t)},e.next=async function(){let n=e.light[0];if(null!=n&&(n.onLeave?.(),i(n)),0===e.pending.length)return e.light.splice(0),void(e.active=!1);let o=e.pending.shift();if(null!=o.delayShow&&(e.active=!1,await new Promise(e=>setTimeout(e,o.delayShow))),null!=o.element){let i=$(o.element);if(null==i[0])return void SmallNotif.add('Failed to find element "'+o.element+'" for the tutorial',"red");let n=i[0].getBoundingClientRect(),s=o.origin||"center";var a=0,l=0;"top-left"===s||("top-right"===s?a+=n.width:"bottom-left"===s?l+=n.height:"bottom-right"===s?(a+=n.width,l+=n.height):"center"===s?(a+=n.width/2,l+=n.height/2):"center-top"===s?a+=n.width/2:"center-left"===s?l+=n.height/2:"center-right"===s?(a+=n.width,l+=n.height/2):"center-bottom"===s&&(a+=n.width/2,l+=n.height));let r=o.position={x:n.x+a,y:n.y+l},c=o.overflow={x:0,y:0};setTimeout(()=>{let t=e.$el(".hinter .hints .message")[0].getBoundingClientRect(),i=r.x+t.width+50-window.innerWidth,n=r.y+t.height-window.innerHeight;n>0&&(c.y=n),i>0&&(c.x=i,c.y=(n>0?n:0)-20)},300),function(i){null!=i.element&&$(i.element).addClass("bp-editor-tutorial-active-element");for(let n in i){if(!t.test(n))continue;if("onShow"===n||"onLeave"===n)continue;let o=i[n];"next"===o&&(o=e.next),$(i.element).on(n.slice(2).toLowerCase(),o)}}(o)}e.light=null!=o.splice?o:[o],e.active=!0,o.onShow?.()},e.clearTutorial=function(){let t=e.light[0];null!=t&&(t.onLeave?.(),i(t)),e.active=!1,e.light=[],e.pending=[],e._domObserver?.disconnect()},e.hotReloaded=function(){};let t=/^on[A-Z]/m;function i(i){null!=i.element&&$(i.element).removeClass("bp-editor-tutorial-active-element");for(let n in i){if(!t.test(n))continue;if("onShow"===n||"onLeave"===n)continue;let o=i[n];"next"===o&&(o=e.next),$(i.element).off(n.slice(2).toLowerCase(),o)}}e._domChanged=function(t,i){e._domObserver?.disconnect(),e._domObserver=new MutationObserver(function(){i(),e._domObserver.disconnect(),e._domObserver=null}),e._domObserver.observe(t,{childList:!0,subtree:!0})}}),_sf_internal.append("BPEditor/routes/body.sf",'<div class="background"><div class="img" style="background-image: url(\'/assets/img/background/black3.jpg\')"></div><div class="tile"></div></div>\x3c!-- Model on ./model/header.sf --\x3e<sf-template path="BPEditor/model/header.sf"></sf-template>\x3c!-- Ground viewport --\x3e\x3c!-- ./src/vw-ground/router.js --\x3e<vw-ground style="display: none"></vw-ground><input type="text" id="hidden_text" style="position: fixed; top: 100vh;">\x3c!-- /src/component/dropdown.sf --\x3e<sf-m name="dropdown" class="{{className}} {{hasSearch ? \'has-search\':\'\'}} {{searchActive ? \'search-active\':\'\'}}"><drop-down sf-each="val in menus"></drop-down></sf-m>'),__tmplt["BPEditor/component/documentation/docs-md-tabs.sf"]="<docs-md-tabs>...</docs-md-tabs>",sf.component("docs-md-tabs",e=>{let t=sf.component("docs-md-tabs");e.tabs=[],e.active="",e.init=function(){let i=new Set;t.forEach(e=>i.add(e.active));let n=!0;e.$el("[tab]").each(function(){let t=$(this).attr("tab");e.tabs.push(t),n?(n=!1,e.changeTab(t,!1)):i.has(t)&&e.changeTab(t,!1)}),e.$el(".tabs").on("click",function(t){let i=t.target;null==i.firstElementChild&&e.changeTab($(i).text(),!0)})},e.changeTab=function(t,i){e.$el(".active-tab").removeClass("active-tab"),e.$el(`[tab="${t}"]`).addClass("active-tab"),$(e.tabs.getElement(e.tabs.indexOf(t))).addClass("active-tab"),e.active=t,i&&sf.component("docs-md-tabs").forEach(i=>{i!==e&&i.tabs.includes(t)&&i.changeTab(t)})}}),sf.component("docs-security-test-vuln",e=>{e.contentFromUser='<script>alert("hello")<\/script>',e.user={loggedIn:!0,name:'Alex <script>alert("hello")<\/script>'}}),__tmplt["BPEditor/model/project-panel-left/workspace.sf"]='<sf-m name="project-panel-workspace"><div class="files-list"><div class="title" @click="collapseSubPanel(this, true)"><i class="fa fa-chevron-down collapse-btn"></i> Explorer</div><div class="button" @click="rescanFiles"><i class="fa fa-sync-alt" title="Rescan files"></i></div>\x3c!-- /src/component/tree-list.sf --\x3e<div class="tree-view" tree-section="files" @dblclick="openFile" @pointerdown="checkDragNode" @pointerover="fileListHover" @pointerleave="fileListLeave" @contextmenu="event.preventDefault()"><div class="tree-item collapsed" sf-each="key, val in files" style="display: {{val.hidden ? \'none\' : \'\'}}"><div class="title" @click="collapseTree(this)"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList({ parentKey: \'\', key, val }); }}</div></div></div><div class="bottom-info info-browser-flag {{needBrowserFlag ? \'\' : \'hide\'}}">Please enable <b>"File System Access API"</b> flags for your browser chrome://flags</div><div class="bottom-info">Drag and drop a folder to here to use it for your workspace</div></sf-m>',sf.model("project-panel-workspace",My=>{function compareDir(e,t,i=""){for(let i in e)null==t[i]&&sf.Obj.delete(e,i);for(let n in t)null==e[n]?(sf.Obj.set(e,n,t[n]),reSort(e)):e[n].constructor===Object&&t[n].constructor===Object&&compareDir(e[n],t[n],`${i}/${n}`)}function reSort(e){e._list&&e._list.sort(Intl.Collator().compare);let t=e._list,i=[];for(let n=t.length-1;n>=0;n--){let o=t[n];e[o].constructor!==Object&&(i.unshift(o),t.splice(n,1))}t.push(...i),e.refresh?.()}async function hashString(e){let t="",i=new Uint8Array(await crypto.subtle.digest("SHA-1",(new TextEncoder).encode(e)));for(let e=0;e<i.length;e++)t+=i.toString(36);return t}My._settings={},My.files={},My._utils={},My.needBrowserFlag=null==DataTransferItem.prototype.getAsFileSystemHandle,Object.setPrototypeOf(My._utils,Blackprint.Engine.CustomEvent.prototype),My.init=function(){Events.on("EditorWorkingDirChange",async()=>{await My.rescanFiles(),await My.initAsWorkspace()}),My.$el.on("dragover",e=>e.preventDefault()).on("drop",async function(e){e.preventDefault();let t=e.dataTransfer.items[0];if(null==t.getAsFileSystemHandle)return SmallNotif.add("This browser is not supported","red");let i=await t.getAsFileSystemHandle();null!=i&&("directory"!==i.kind?alert("Working directory must be a directory"):(null!=window.EditorWorkingDir&&SmallNotif.add("Workspace directory was changed"),window.EditorWorkingDir=new _CustomDirectory(i),await EditorDB.setSettings("EditorWorkingDir",window.EditorWorkingDir),Events.EditorWorkingDirReady=!0,Events.EditorWorkingDirChange()))})},My.cleanWorkspace=async function(){let e=sf.model("project-list"),t=e.list;for(let e=0;e<t.length;e++)if(t[e].isUnsaved)return"You must save/close opened tab before changing the workspace";for(let i=t.length-1;i>=0;i--)e.closeTab(t[i],!0);await e.createTab()},My.initAsWorkspace=async function(){let e;try{e=await EditorWorkingDir.resolveCustomHandle("bp-workspace.json")}catch(e){}if(e){let t=await Swal.fire({title:"Do you want to load and execute this workspace?",text:"Make sure you have trusted the author of this workspace because this editor will load and run the opened instance for this workspace",showCancelButton:!0,showCloseButton:!0}),i=sf.model("project-list");if(!t.isDismissed){await My.cleanWorkspace(),await My.refreshLocalNodes(),My._settings=JSON.parse(await e.readText());let t=i.list[0],n=My.getSetting(["opened_instances"])??[];for(let e=0;e<n.length;e++){let t=await My.resolvePath(EditorWorkingDir.name+`/instances/${n[e]}`);if(!t)continue;let o=i.createTab();o.title=n[e],await new Promise(e=>setTimeout(async()=>{await o.sketch.importJSON(await t.readText()),o.isUnsaved=!1,e()},200))}0!==n.length&&i.closeTab(t)}return}(await Swal.fire({title:"Do you want to initialize this folder as your workspace?",showCancelButton:!0,showCloseButton:!0})).isDismissed||(await EditorWorkingDir.getDirectory("/instances",!0),await EditorWorkingDir.getDirectory("/assets",!0),await EditorWorkingDir.getDirectory("/local_nodes",!0),await My.saveWorkspaceData(),await My.rescanFiles())},My.saveWorkspaceData=async function(){let e;try{e=await EditorWorkingDir.resolveCustomHandle("bp-workspace.json")}catch(t){e=await EditorWorkingDir.createFile("bp-workspace.json")}await e.writeData(JSON.stringify(My._settings))},My.getSetting=function(e){return e.constructor===String&&(e=[e]),Blackprint._utils.getDeepProperty(My._settings,e)},My.setSetting=function(e,t){e.constructor===String&&(e=[e]),Blackprint._utils.setDeepProperty(My._settings,e,t),My.saveWorkspaceData()},My.rescanFiles=async function(){My.directories??=new WeakMap;let e=await EditorWorkingDir.recursiveGetFileHandles(".",{},My.directories),t={[EditorWorkingDir.name]:e};compareDir(My.files,t,EditorWorkingDir.name),My._utils.emit("file.change"),setTimeout(()=>{let e=My.$el('[tree-section="files"] > .collapsed > .title');e[0]&&My.collapseTree(e[0],!0)},10)},My.resolvePath=My._utils.resolvePath=function(e){let t=Blackprint._utils.getDeepProperty(My.files,e.split("/"));return null==t?null:t.constructor===Object?My.directories.get(t):t},My.getElementInfo=function(e){let t=$(e),i=t.parent(".tree-view > .tree-item > tree-list > [tree-item-key]").attr("tree-item-key"),n=$(e.closest("[tree-item-key]")??[]),o=n.attr("tree-item-key"),a=t.parent(".tree-item.has-child > tree-list, .tree-view > .tree-item")[0],l=a.model.parentKey,s=l?l+"/"+o:o;return{parent:a,section:i,itemEl:n,key:o,model:n[0]?.model,path:s,parentKey:l}},My.checkDragNode=e=>{let t=e.target,i=!0;null!=t.nextElementSibling&&(i=!1);let{parent:n,section:o,itemEl:a,key:l,path:s}=My.getElementInfo(t);if(t=$(t),2===e.button)return void My.fileMenu(e,t[0],o);if("assets"!==o)return;if(null==l)return;if(null==n)return;let r="touch"===e.pointerType?"touchend":"pointerup";ToolTip.set("Create node"),$(sf.Window).once(r,async e=>{ToolTip.set();let t=e.target;if("touchend"===r){let{clientX:i,clientY:n}=e.changedTouches[0];e.clientX=i,e.clientY=n,t=document.elementFromPoint(i,n)}if(null!=t.closest("sketch-page")&&null!=t.closest("sf-m.cables")){await $.afterRepaint();let n=t.getBoundingClientRect(),a=CurrentSketch.scope("container"),l={x:(e.clientX-n.x)/a.scale,y:(e.clientY-n.y)/a.scale},r=[];if("assets"!==o)return;l.data={path:s},r=[{title:"Get Handle",callback(){CurrentSketch.createNode(i?"BP_Editor/Workspace/Assets/File":"BP_Editor/Workspace/Assets/Directory",l)}}],DropDown.show(r,{x:e.clientX,y:e.clientY,event:e})}})},My.collapseSubPanel=(e,t)=>{let i=$(e),n=i.parent();if(n.toggleClass("collapsed"),!t)return;let o=i.find(".collapse-btn").removeClass("fa-chevron-down").removeClass("fa-chevron-right");n.hasClass("collapsed")?o.addClass("fa-chevron-right"):o.addClass("fa-chevron-down")},My.collapseTree=function(e){if(null==(e=e.nextElementSibling))return;let t,i=$(e.parentNode);t=i.hasClass("tree-view")||i.hasClass("tree-no-model")?!i.hasClass("collapsed"):e.model.hidden=!e.model.hidden,t?i.addClass("collapsed"):(null!=e.model&&reSort(e.parentNode.model),i.removeClass("collapsed"))},My.fileMenu=function(e,t,i){let n=$(t).parents("[tree-item-key]"),o="";for(let e=n.length-1;e>=0;e--)""!==o&&(o+="/"),o+=$(n[e]).attr("tree-item-key");let a=t.closest("[tree-item-key]");if(null==a)return void DropDown.show([{title:"Close this workspace",async callback(){sf.Obj.delete(My.files,window.EditorWorkingDir.name),My.files.refresh(),window.EditorWorkingDir=null,await EditorDB.setSettings("EditorWorkingDir",null)}}],{x:e.clientX,y:e.clientY,event:e});let l=$(a).attr("tree-item-key"),s=a.model,r=[{title:"Rename",async callback(){let e=l;if("instances"===i){let e=l.lastIndexOf(".bpi");-1===e&&(e=l.length),l=l.slice(0,e)}let t=await Swal.fire({title:"Rename to:",text:l,input:"text"});if(t=t.value,t){if("instances"===i){t+=".bpi"!=t.slice(-4)?".bpi":"";let i=sf.model("project-list").list;for(let n=0;n<i.length;n++)if(i[n].title===e){i[n].title=t;break}}My.fileRename(o,t)}}},{title:"Delete",async callback(){(await Swal.fire({title:`Are you sure to delete "${l}"?`,showCancelButton:!0,showCloseButton:!0})).isDismissed||(s.constructor===Object?(await EditorWorkingDir.getDirectory(o))?.delete():(await EditorWorkingDir.getFile(o))?.delete(),await My.rescanFiles())}}];""===l&&(r=[]),s.constructor===Object&&r.push({title:"New file",async callback(){let e=await Swal.fire({title:"Create file in:",text:o,input:"text"});e=e.value,e&&(await EditorWorkingDir.createFile(o+"/"+e),await My.rescanFiles())}},{title:"New folder",async callback(){let e=await Swal.fire({title:"Create folder in:",text:o,input:"text"});e=e.value,e&&(await EditorWorkingDir.getDirectory(o+"/"+e,!0),await My.rescanFiles())}}),"local_nodes"===i&&r.unshift({title:"Rescan and reload",callback(){My.refreshLocalNodes()}},{title:"New interface template.sf",description:"For browser user interface",callback(){My.refreshLocalNodes()}},{title:"New node template.js",description:"For Node.js/Deno engine",callback(){My.refreshLocalNodes()}}),DropDown.show(r,{x:e.clientX,y:e.clientY,event:e})},My.fileListLeave=e=>{0===e.pressure&&ToolTip.set()},My.fileListHover=e=>{if(0!==e.pressure)return;if(!e.target.classList.contains("title"))return ToolTip.set(!1);let{parentKey:t,itemEl:i}=My.getElementInfo(e.target);if(null==t)return ToolTip.set("Current working directory for this workspace");if(t+="/"+i.attr("tree-item-key"),t=t.split("/").slice(1).join("/"),i.hasClass("has-child")){if("assets"===t)return ToolTip.set("You can store project resource here and reference it to current Blackprint instance\nAny drag and dropped file will be placed here");if("instances"===t)return ToolTip.set("Blackprint instances will be saved in this folder");if("local_nodes"===t)return ToolTip.set("You can create custom node for Blackprint here,\nand this editor will load it for you on workspace init and rescan (by right click this folder)")}else if("bp-workspace.json"===t)return ToolTip.set("Blackprint workspace's settings");ToolTip.set(!1)},My.openFile=function(e){let{path:t,model:i,section:n,key:o}=My.getElementInfo(e.target);if(null!=i&&i.constructor!==Object&&"instances"===n){let e=sf.model("project-list"),i=e.list;for(let t=0;t<i.length;t++)if(i[t].title===o)return void e.switchTab(i[t]);let n=e.createTab();n.title=o,setTimeout(async()=>{let e=await My.resolvePath(t);await n.sketch.importJSON(await e.readText()),n.isUnsaved=!1},200)}},My.fileRename=async function(e,t){e.startsWith(EditorWorkingDir.name+"/")&&(e=e.replace(EditorWorkingDir.name+"/",""));let i=e.split("/");i.pop(),i.push(t),t=i.join("/");let n=await EditorWorkingDir.resolveCustomHandle(e);await n.move(t),await My.rescanFiles()},My.refreshLocalNodes=async function(){if(null==sf.hotReload||"/dev.html"!==location.pathname)return SmallNotif.add("Refresh local nodes feature only available on development mode editor");let localNodes=My.files[EditorWorkingDir.name].local_nodes;if(null==localNodes)return;let notif=SmallNotif.add("Rescanning local nodes...","yellow",!1),cwd=await EditorWorkingDir.recursiveGetFileHandles("local_nodes",{},My.directories);compareDir(localNodes,cwd,EditorWorkingDir.name+"/local_nodes");let count=0;async function isScriptChanged(dir,path){let loadList=[],prioritizeList=[];for(let e in dir){let t=dir[e];t.constructor!==Object?(t.name.endsWith(".js")||t.name.endsWith(".sf"))&&(t.name.startsWith("_")?prioritizeList.push(e):loadList.push(e)):await isScriptChanged(t,path+"/"+e)}loadList.unshift(...prioritizeList);for(let i=0;i<loadList.length;i++){let target=dir[loadList[i]],content=await target.readText(),hash=await hashString(content);if(target._hash!==hash){if(target._hash=hash,target.name.endsWith(".sf")){let e=sf.parser.parseTemplate(content);sf.parser.load(path+"/"+target.name,e);continue}try{eval(content),count++}catch(e){throw notif.change("Failed to load node from local_nodes","red"),e}}}}await isScriptChanged(localNodes,EditorWorkingDir.name),notif.change(count+" file was reloaded","green"),await new Promise(e=>setTimeout(e,200))}}),sf.model("welcome-text",function(e){e.toWorkspace=function(){0===SketchList.length&&(SketchList[0]=new Blackprint.Sketch),views.goto("/sketch/1")},e.openExamples=function(){Modal.goto("/example-list")}}),sf.model("sketch-pages",function(e){function t(e,t){let i=e.target.tagName;if("INPUT"===i||"TEXTAREA"===i)return;let n=window.CurrentSketch;if(null==n)return;let o=n.scope("container");return t||0!==o.nodeScope.selected.length||0!==o.cableScope.selected.length?{sketch:n,container:o}:void 0}function i(e){let t=JSON.parse(e.exportJSON({selectedOnly:!0,environment:!1,exportFunctions:!1,exportVariables:!1})),i=t.instance,n=1/0,o=1/0;for(let e in i){let t=i[e];for(let e=0;e<t.length;e++){let i=t[e];i.x<n&&(n=i.x),i.y<o&&(o=i.y)}}n===1/0&&(n=0),o===1/0&&(o=0);for(let e in i){let t=i[e];for(let e=0;e<t.length;e++){let i=t[e];i.x-=n,i.y-=o}}return t}let n,o;e._onMenuCreateNode=function({menu:t,position:n,options:o,event:a,preventDefault:l}){if(e.skipMenuHandler)return;l(),n.event=a;let s=CurrentSketch.scope("container");if(s.select.w>30||s.select.h>30){let{x:d,y:p,w:u,h:f,ix:m,iy:h}=s.select;return m&&(d-=u),h&&(p-=f),n.title="Region Select",void DropDown.show([{title:"Create a group region",description:"A region marker where you can move all nodes as a group",callback(){let e=CurrentSketch.createNode("Decoration/Group/Default",{x:d,y:p-21,data:{width:u,height:f+21,title:"No title"}});e.refreshContent(),e.swapZIndex()}},{title:"Create a function node",description:"Move the selected region content as a function node",async callback(){if(0===s.nodeScope.selected.length)return SmallNotif.add("Nodes need to be selected before using this feature","red");let e=await Swal.fire({title:"Function Name:",inputPlaceholder:"MyApp/Custom/Function",input:"text"});if(e=e.value,!e)return;let t=CurrentSketch.scope("nodes").selected;t=t.sort((e,t)=>e.y-t.y||e.x-t.x);let n=1/0,o=1/0,a=0,l=0,r={};for(let e=0;e<t.length;e++){let i=t[e],{input:s,output:c}=i;n>i.x&&(n=i.x),o>i.y&&(o=i.y),a<i.x&&(a=i.x),l<i.y&&(l=i.y);for(let i in s){let n=s[i].cables;for(let o=0;o<n.length;o++){let a=n[o],l=a.output.iface;t.includes(l)||(r[e]??=[],r[e].push({type:"input",name:i,i:e,targetIndex:l.i,connectedPort:a.output}))}}for(let i in c){let n=c[i].cables;for(let o=0;o<n.length;o++){let a=n[o],l=a.input.iface;t.includes(l)||(r[e]??=[],r[e].push({type:"output",name:i,i:e,targetIndex:l.i,connectedPort:a.input}))}}}let c={},d=c["BP/Fn/Input"]=[{i:0,x:100,y:100,z:0,output:{}}],p=c["BP/Fn/Output"]=[{i:1,x:700,y:100,z:1}];d=d[0],p=p[0];let u={},f={};function m(e,t){let i;if("input"===e.type)i=u[e.name]??=[];else{if("output"!==e.type)throw new Error("Port source is not recognized");i=f[e.name]??=[]}let n=i.indexOf(t);return-1===n?(i.push(t),i.length-1):n}let h=i(CurrentSketch.rootInstance||CurrentSketch),v=h.instance;for(let e in v){let t=v[e];for(let e=0;e<t.length;e++){let i=t[e];i.x+=300,i.y+=100,i.i+=2,i.z+=2;let n=r[e];if(null!=n)for(let t=0;t<n.length;t++){let o=n[t];if("input"===o.type){let e=m(o,i.i),t=d.output,n=o.name+(0!==e?e:"");(t[n]??=[]).push({i:i.i,name:o.name}),o.newName=n}if("output"===o.type){let t=m(o,e),n=i.output??={},a=n[o.name]??=[],l=o.name+(0!==t?t:"");0===a.length&&a.push({i:p.i,name:l}),o.newName=l}}}c[e]=t}v=h.instance=c,CurrentSketch.createFunction(e,{structure:h,description:"No description"});let g=CurrentSketch.createNode("BPI/F/"+e,{x:n+(a-n)/3,y:o+(l-o)/3});g.once("ready",()=>{for(let e=0;e<t.length;e++)CurrentSketch.deleteNode(t[e]);g.x-=g.w/2,g.y-=g.h;for(let e in r){let t=r[e];for(let e=0;e<t.length;e++){let i=t[e];if("input"===i.type)i.connectedPort.connectPort(g.input[i.newName]);else{if("output"!==i.type)throw new Error("Unrecognized port source");i.connectedPort.connectPort(g.output[i.newName])}}}})}}],n)}if(n.hasSearch=!0,n.searchObject=Blackprint._docs,n.title="Create Node",function e(t){t.sort((e,t)=>e.title.localeCompare(t.title));for(let i=0;i<t.length;i++)null!=t.deep&&e(t.deep)}(t),null!=e._cableDropMenu){let v=e._cableDropMenu;n.title="Suggested Node",function(e,t=[]){let i=[],n={};for(let i=e.length-1;i>=0;i--){let o=e[i];t.includes(o.title)&&(n[o.title]=o,e.splice(i,1))}for(let e=0;e<t.length;e++){let o=n[t[e]];null!=o&&(i.push(o),delete n[t[e]])}e.unshift(...i)}(t,[v.owner.iface.namespace.split("/").slice(0,2)[0],"Data","Input"]);let g=CurrentSketch;function r(e,t){let i=a.target.getBoundingClientRect(),n=g.createNode(e,{x:a.clientX-i.x,y:a.clientY-i.y,data:t});o.onCreated?.(n)}let k=[];if("output"===v.source){async function c(t){let i=await e.panels.left.createVariable(null,t),n=a.target.getBoundingClientRect(),o=g.createNode("BP/Var/Set",{x:a.clientX-n.x,y:a.clientY-n.y,data:{name:i.id,scope:t}});o.useType(v.owner),o.input.Val.connectCable(v)}k.push({title:"New Public",icon:"fa fa-plus-square",callback(){c(Blackprint.VarScope.Public)}}),g.parentInterface&&k.push({title:"New Private",icon:"fa fa-plus-square",callback(){c(Blackprint.VarScope.Private)}},{title:"New Shared",icon:"fa fa-plus-square",callback(){c(Blackprint.VarScope.Shared)}}),(v.owner.type===String||v.owner.type.any)&&0!==Blackprint.Environment._list.length&&k.unshift({title:"Environment",deep:Blackprint.Environment._list.map(e=>({title:e.key,callback(){r("BP/Env/Set",{name:e.key})}}))})}else"input"===v.source&&(v.owner.type===String||v.owner.type.any)&&0!==Blackprint.Environment._list.length&&k.unshift({title:"Environment",deep:Blackprint.Environment._list.map(e=>({title:e.key,callback(){r("BP/Env/Get",{name:e.key})}}))});let y=v.owner,b=Blackprint.Sketch.suggestNode("input"===y.source?"output":"input",y.type,g.functions);b=Object.keys(b).map(e=>({title:e,callback(){r(`BPI/F/${e}`)}})),0!==k.length&&t.push({title:"Variables",deep:k}),0!==b.length&&t.push({title:"Functions",deep:b})}DropDown.show(t,n)},e._onWindow_keydown=async e=>{let i=t(e);if(!i)return;let{sketch:n,container:o}=i;if((0!==o.nodeScope.selected.length||0!==o.cableScope.selected.length)&&"Delete"===e.key){let e=o.nodeScope.selected;for(let t=0;t<e.length;t++)n.deleteNode(e[t]);e.splice(0),e=o.cableScope.selected;for(let t=0;t<e.length;t++)e[t].disconnect();e.splice(0)}},e._onWindow_pointermove=function(e){n=e.clientX,o=e.clientY},e._onWindow_copy=function(e){let n=t(e);if(!n)return;let{sketch:o,container:a}=n;0!==a.nodeScope.selected.length&&(e.clipboardData.setData("text/plain",JSON.stringify(i(CurrentSketch))),e.preventDefault())},e._onWindow_paste=async function(e){let i=t(e,!0);if(!i)return;let{sketch:a,container:l}=i,s=e.clipboardData.getData("text/plain").trim();try{s=JSON.parse(s)}catch(e){return}if(null==s.instance)return;let{x:r,y:c}=l.pos,{x:d,y:p}=l.offset,u=l.scale,f=s.instance;for(let e in f){let t=f[e];for(let e=0;e<t.length;e++){let i=t[e];i.x+=(-r-d+n)/u,i.y+=(-c-p+o)/u}}let m=l.nodeScope.list.length;await a.importJSON(s,{appendMode:!0});let{cableScope:h,nodeScope:v}=l;h.selected.forEach(e=>e.selected=!1),h.selected.splice(0),v.selected.forEach(e=>e._nodeSelected=!1),v.selected.splice(0),v.selected.push(...v.list.slice(m)),v.selected.forEach(e=>e._nodeSelected=!0)},null==e._eventOnce&&(e._eventOnce=!0,e._cableDropMenu=null,e.skipMenuHandler=!1,Blackprint.on("menu.create.node",t=>e._onMenuCreateNode(t)),$(window).on("keydown",t=>e._onWindow_keydown(t)).on("pointermove",t=>e._onWindow_pointermove(t)).on("copy",t=>e._onWindow_copy(t)).on("paste",t=>e._onWindow_paste(t)))}),sf.model("code-generator",function(e){e.list=Blackprint.Code.handlers,e.target=localStorage.codeGeneratorLanguage||"js",e.error=[],e.code="",e.init=function(){let t=e.$el(`.list option[value="${e.target}"]`);if(t.attr("selected",""),null==t[0]){let t;for(let i in e.list){t=e.list[i];break}e.target=localStorage.codeGeneratorLanguage=t.languageId}},e.refresh=async function(){e.code="",e.error.splice(0),localStorage.codeGeneratorLanguage=e.target;try{e.code=await Blackprint.Code.generateFrom(CurrentSketch,e.target,"MyApp"),e.refreshCodeResult()}catch(t){e.error.push({type:"error",message:t.message}),console.error(t)}},e.refreshCodeResult=function(){let t=hljs.highlight(e.code,{language:e.target}).value,i=$("<pre><code></code></pre>");i.find("code").append(t),$(".code-result").text("").append(i)},e.copyToClipboard=function(){navigator.clipboard.writeText(e.code),SmallNotif.add("Copied to clipboard!","green")},e.minifyCode=async function(){window.Terser||(sf.loader.js(["https://cdn.jsdelivr.net/npm/terser@5.17.3/dist/bundle.min.min.js"]),await sf.loader.task);let t=e.code,i=t.slice(0,t.indexOf("*/")+2),n=t.slice(t.indexOf("*/")+2);e.code=i+"\n\n"+(await Terser.minify(n,{mangle:!0})).code,e.refreshCodeResult()}}),sf.model("custom-node-editor",function(My){My.githubURL="",My.content='// After execute this, you can test it by connecting\n// Input -> Slider and Logger to this node\n\nlet EventSlot = {slot: \'my-unique\'}; // To avoid duplicate listener\n\nBlackprint.registerNode(\'Test/Hello\',\nclass extends Blackprint.Node {\n\tstatic input = { // Port\n\t\tGiveInput: Number\n\t}\n\t\n\tstatic output = { // Port\n\t\tOut: Number\n\t}\n\n\tconstructor(instance){\n\t\tsuper(instance);\n\n\t\t// You can remove this if you want to use default node interface/HTML\n\t\tlet iface = this.setInterface(\'BPIC/Test/Hello\');\n\n\t\tiface.title = \'Add +5\';\n\t\tiface.description = \'Add 5 to any number\';\n\t}\n});\n\n// You can remove this if you\'re using default node interface/HTML\nBlackprint.Sketch.registerInterface(\'BPIC/Test/Hello\', {\n\thtml: `\n<div class="node {{ type || \'general\' }}" style="transform: translate({{ x }}px, {{ y }}px)">\n  <sf-template path="Blackprint/nodes/template/header.sf"></sf-template>\n\n  <div class="content">\n\t<div class="left-port">\n\t  <sf-template path="Blackprint/nodes/template/input-port.sf"></sf-template>\n\t</div>\n\t\n\t<div style="display: inline-block; color: yellow">\n\t\t{{ log }}\n\t</div>\n    \n\t<div class="right-port">\n\t  <sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template>\n\t</div>\n  </div>\n</div>`\n}, class extends Blackprint.Interface {\n\tconstructor(node){\n\t\tsuper(node);\n\n\t\tthis.log = 0;\n\t}\n\n\t// HTML/Interface Init\n\tinit(el){\n\t\tlet iface = this;\n\t\t\n\t\tconst {\n\t\t\tIInput, IOutput, // Port interface (event, utils, etc)\n\t\t\tInput, Output, // Node Port (get/set value)\n\t\t} = iface.ref;\n\n\t\tIInput.GiveInput.on(\'value\', EventSlot, function({ cable }){\n\t\t\tlet val = cable.value;\n\n\t\t\tiface.log = val + 5; // GiveInput -> {{ log }}\n\t\t\tOutput.Out = val + 5; // GiveInput -> Out\n\t\t});\n\t}\n\n\t// Run init again to hot reload this node\n\thotReloaded(){\n\t\tthis.init();\n\t}\n\n\t// When this node UI was cloned somewhere\n\t// You can reinit some HTML element if needed\n\tinitClone(el){}\n});',My.init=async function(){void 0===window.monaco&&(sf.loader.js(["https://cdn.jsdelivr.net/npm/@monaco-editor/loader@1.2.0/lib/umd/monaco-loader.min.js"]),await sf.loader.task,await monaco_loader.init()),My.container=My.$el(".editor"),My.recreate()},My.recreate=function(){void 0!==window.monaco&&(My.editor||(My.editor&&My.editor.dispose(),refreshTypes(),setTimeout(()=>{let e=My.container.find(".bp-loading-status");My.editor=monaco.editor.create(My.container[0],{value:My.content,language:"javascript",theme:"vs-dark",minimap:{enabled:!1}}),e.css("display","none")},1e3)))};let typeRefreshed=!1;async function refreshTypes(){if(typeRefreshed)return;typeRefreshed=!0;let e=[];e.push(["declare module 'scarletsframe' { "+await $.get("https://cdn.jsdelivr.net/gh/ScarletsFiction/ScarletsFrame@b3c4a8cf3a8036558a7bc96eeaede2f4f84feb49/src/index.d.ts")+" }","file:///node_modules/scarletsframe/index.d.ts"]),e.push(["declare module '@blackprint/engine' { "+await $.get("https://cdn.jsdelivr.net/gh/Blackprint/engine-js@7a4d820a58019a4c256276d4841723cd35a3660c/src/index.d.ts")+" }","file:///node_modules/@blackprint/engine/index.d.ts"]),e.push(["declare module '@blackprint/engine/skeleton' { "+await $.get("https://cdn.jsdelivr.net/gh/Blackprint/engine-js@7a4d820a58019a4c256276d4841723cd35a3660c/src/skeleton/index.d.ts")+" }","file:///node_modules/@blackprint/engine/skeleton/index.d.ts"]),e.push(["declare module '@blackprint/sketch' { "+await $.get("https://cdn.jsdelivr.net/gh/Blackprint/Blackprint@db21218ba05533ff1d5e2f2d6ea8075fd31c1f8a/src/index.d.ts")+" }","file:///node_modules/@blackprint/sketch/index.d.ts"]),e.push(['\n\t\t\timport * as BP from "@blackprint/sketch";\n\t\t\timport * as SF from "scarletsframe";\n\t\t\tdeclare global {\n\t\t\t\tconst Blackprint = BP;\n\t\t\t\tconst sf = SF;\n\n\t\t\t\t/** This can be obtained with Blackprint.getContext("YourModuleContext") */\n\t\t\t\tconst Context = {};\n\t\t\t}\n\t\t',"global.d.ts"]);for(let t=0;t<e.length;t++){let i=e[t];monaco.languages.typescript.javascriptDefaults.addExtraLib(i[0],i[1])}}My.run=function(){if(null==sf.hotReload||"/dev.html"!==location.pathname)return SmallNotif.add("This feature only available on development mode editor");let code=My.editor.getValue(),contextName=code.match(/\bregisterNode\(['"](\w+)\//)?.[1],begin=`var Context = Blackprint.getContext._context['${contextName}']`,ends="";eval(`${begin}\n${code}\n${ends}`),Blackprint.emit("bp_editorNodeAvailability")},My.setValue=function(e){null!=My.editor&&My.editor.setValue(e),My.content=e},My.openGitHub=function(){window.open(My.githubURL,"_blank")},My.close=function(){Modal.hide()}}),sf.model("modal-dev-mode",function(e){e.url=localStorage.BPModuleServer??="",e.placeholder=location.origin,e.connectDefault=function(){localStorage.BPModuleServer=e.url="",e.changeServer()},e.changeServer=async function(t){let i=e.url;i||(i=e.placeholder),"/"===i.slice(-1)&&(i=i.slice(0,-1));let n=i;if(i+="/browser-sync",void 0===window.___browserSync___)try{sf.loader.js([i+"/browser-sync-client.js?v=2"]),await sf.loader.task}catch(e){return void SmallNotif.add("Failed to load client","red")}___browserSync___.socketUrl=i;let o=___browserSync___.socket;function a(){console.log("Connected to Blackprint module server:",i),SmallNotif.add("Connected to Blackprint module server","green"),localStorage.BPModuleServer=e.url}o.disconnect(),setTimeout(()=>{o.connected||(console.log("Failed to connect to Blackprint module server:",i),SmallNotif.add("Failed to connect to Blackprint module server","red"),o.disconnect(),o.off("connect",a),t&&(localStorage.BPModuleServer=""))},8e3),o.once("connect",a),o.nsp="/browser-sync",o.io.uri=i,o.connect(),o.on("bp-docs-append",function(e){Blackprint.Sketch.registerDocs(e)});let l=!1;try{let e=Object.values(await $.getJSON(n+"/api/module-list"));for(var s=0;s<e.length;s++)e[s]=n+e[s];0!==e.length&&(SmallNotif.add(`Loading ${e.length} new modules`,"yellow"),await Blackprint.loadModuleFromURL(e,{loadBrowserInterface:!0}),SmallNotif.add("New modules have been loaded","green")),l=!0}catch(e){throw SmallNotif.add("Failed to load new modules","red"),e}setTimeout(()=>{l||(SmallNotif.add("Loading modules was taking longer than 10s","red"),0!==sf.loader.pendingResources.size&&console.log("Pending resources:",sf.loader.pendingResources))},1e4),Modal.showed&&"/dev-mode"===Modal.views.currentPath&&Modal.hide()},""!==e.url&&void 0!==sf.hotReload&&$(()=>setTimeout(()=>e.changeServer(!0),200))}),sf.model("documentation",function(My){let currentContent;function changeContent(obj){if(currentContent===obj)return;currentContent=obj,My.$el(".content")[0].scrollTop=0;let cache=My.cache.get(obj);if(null==cache){if($.escapeText.constructor!==Function||$.fn.addClass.constructor!==Function)throw new Error("Unexpected '$' function");let content=$(`<div>${marked.parse(obj.content)}</div>`);content.find("script").each(function(){eval(this.textContent)});let section="<div>";content.find("h1, h2, h3, h4, h5, h6").each(function(){if(this.closest("docs-md-tabs"))return;let e=this.textContent.toLowerCase().replace(/\W/g,"-");section+=`<div class="sc-${this.tagName}" section-id="${e}">${this.textContent}</div>`}),My.cache.set(obj,cache={content:content,section:$(section+"</div>")})}My.content=cache.content[0],My.section=cache.section[0],refreshURL()}function refreshURL(){if(sf.URI.data.bpdocs=`${My.treePath}${My.sectionPath?"+"+My.sectionPath:""}`,sf.URI.replace(),My.$el(".active").removeClass("active"),""!==My.sectionPath&&(My.$el(`[section-id="${My.sectionPath}"]`).addClass("active"),My.$el(`.container > .content #${My.sectionPath}`).addClass("active")),""!==My.treePath){let e=`[tree-item-key="${My.treePath.split("/").join('"] [tree-item-key="')}"]`;My.$el(e).addClass("active")}}function deepDive(e,t){let i=t.shift();for(let n in e)if(n.replace(/\W/g,"_")===i)return 0===t.length?e[n]:deepDive(e[n].branch,t)}My.docs=window.bpEditorDocs,My.cache=new WeakMap,My.content=null,My.section=null,My.treePath="",My.sectionPath="",My.init=async function(){window.___browserSync___?.socket.on("bp-editor-docs",function(e){if(Object.assign(My.docs,e.contents),My.treePath){let e=deepDive(window.bpEditorDocs,My.treePath.split("/"));if(null==e)return SmallNotif.add("Document for the specified path was not found","red");changeContent(e),setTimeout(function(){My.sectionPath&&My.changeHeaderFocusById(My.sectionPath)},1e3)}}),changeContent(My.docs.Home),Modal.onHide("/documentation",function(){delete sf.URI.data.bpdocs,sf.URI.replace()}),My.reorderListLv1()},My.reorderListLv1=function(){let e=["Home","Getting Started","Editor","Engine","Sketch","Custom Nodes"],t=My.docs._list;for(let i=0;i<e.length;i++){let n=t.indexOf(e[i]);-1!==n&&t.splice(n,1)}t.unshift(...e),My.docs.refresh()},My.checkClick=function(e){let t=e.target;t.classList.contains("title")&&(My.treePath="",My.sectionPath="",$(event.target).parents(".tree-item").each(function(){let e=My.treePath;My.treePath=this.getAttribute("tree-item-key"),e&&(My.treePath+="/"+e)}),changeContent(t.parentNode.model))},My.changeHeaderFocus=function(e){let t=e.target,i=t.parentNode.parentNode.classList;if(!i.contains("right-panel")&&!i.contains("content"))return;if("DIV"!==t.tagName&&!t.tagName.startsWith("H"))return;let n=t.textContent;n&&My.changeHeaderFocusById(n)},My.changeHeaderFocusById=function(e){e=e.toLowerCase().replace(/\W/g,"-"),My.sectionPath=e;let t=My.content.querySelector(`#${e}`);null!=t&&(My.$el(".content")[0].scrollTop=t.offsetTop-40,refreshURL())},My.editDocs=function(){let e=`https://github.com/Blackprint/blackprint.github.io/tree/master/docs/${(My.treePath||"Home").split("_").join(" ")}.md`;window.open(e,"_blank")},$(function(){marked.setOptions({highlight:(e,t)=>hljs.highlight(e,{language:t}).value});let e=sf.URI.data.bpdocs?.[0];if(null==e||My.initialized)return;My.initialized=!0;let[t,i]=e.split("+"),n=deepDive(window.bpEditorDocs,t.split("/"));if(null==n)return SmallNotif.add("Document for the specified path was not found","red");Modal.goto("/documentation"),changeContent(n),My.treePath=t,My.sectionPath=i,refreshURL(),setTimeout(function(){i&&My.changeHeaderFocusById(i)},1e3)}),$(async function(){if("1"!==localStorage.firstTimeEditorVisit){let e=!0;for(let t in sf.URI.data){e=!1;break}if(e){localStorage.firstTimeEditorVisit="1",(await Swal.fire({title:"Welcome!",html:"<br>It's seems you're new here 🎉<br>Do you want to see small tutorial to use this editor?",showCancelButton:!0})).isConfirmed&&(Modal.goto("/documentation"),setTimeout(function(){changeContent(My.docs.Editor.branch.Tutorial)},700))}}})}),sf.model("environment-variables",function(e){e.list=Blackprint.Environment._list,e.newValue="",e.newKey="",e.showValue=!1,e.v2m$newKey=function(t){return 0!==(t=e.validateKey(t)).length&&(Blackprint.Environment.set(t,e.newValue),e.newKey=e.newValue="",i()),""};let t=localStorage.bpEnvData;function i(){$("input",e.list.getElements(e.list.length-1))[0]?.focus()}t&&(t=JSON.parse(t),Blackprint.Environment.import(t)),Modal.onHide("/environment-variables",function(){e.showValue=!1,o()}),e.itemChanged=function(t,n){if(n.target.classList.contains("bpe-value")&&o(),0===t.key.length&&(Number.isNaN(t.value)||!t.value))return e.list.splice(e.list.indexOf(t),1),void i()};let n=0;function o(){clearTimeout(n),n=setTimeout(function(){let{map:t,_list:i}=Blackprint.Environment,n=new Set;for(var o=0;o<i.length;o++){let e=i[o];n.add(e.key);let a=i.$el(".bpe-value",o)[0].value;t[e.key]!==a&&Blackprint.Environment.set(e.key,a)}for(let e in t)n.has(e)||Blackprint.Environment.delete(e);e.saveToLocalStorage()},1e3)}e.saveToLocalStorage=function(){localStorage.bpEnvData=JSON.stringify(Blackprint.Environment.map),SmallNotif.add("Environment data was saved","green")},e.validateKey=function(e){return e.replace(/[ \-]+/gm,"_").replace(/\W+/gm,"").replace(/^[0-9]+/gm,"").toUpperCase()};let a=0;e.renameEnv=function(t,i){clearTimeout(a),a=setTimeout(function(){let n=e.validateKey(i.value);""!=n||""!==t.value?Blackprint.Environment._rename(t.key,n):Blackprint.Environment.delete(t.key)},1e3)},e.close=function(){Modal.hide(),modal.goto("/")}}),sf.model("example-list",function(e){e.list=[],e.open=function(e){let t=sampleList[e];for(var i=0;i<SketchList.length;i++)null!=SketchList[i]&&SketchList[i].clearNodes();Modal.hide(),(SketchList[0]??=new Blackprint.Sketch).__importing=!0,SketchImporter.pendingLoad=t,SketchImporter.importNow()}}),sf.model("module-example-list-deep",function(e){function t(e){let t=e.files,i=[];for(var n=0;n<t.length;n++){let e=t[n];if("example"===e.name){let t=e.files;for(var o=0;o<t.length;o++){let e=t[o];"file"===e.type&&i.push({url:`/example/${e.name}`})}break}}return i}e.packageName="",e.packageURL="",e.githubURL="",e.packageVersion="0.?",e.pkg=null,e.npmBaseUrl="",e.ghBaseUrl="",e.ghCommitHash="main",e.currentSource="npm",e.cacheDate="?",e.list=[],e.openModal=function(t){e.pkg=t,e.packageName=t.packageName??"","/"===t.packageURL.slice(-1)&&(t.packageURL=t.packageURL.slice(0,-1)),"/"===t.githubURL?.slice(-1)&&(t.githubURL=t.githubURL.slice(0,-1)),e.packageURL=t.packageURL??"",e.githubURL=t.githubURL??"",e.cacheDate=t.cacheDate??!1,e.packageVersion=t.packageURL.match(/(?<=\w@)[\w.\-_]+/)?.[0]??"";let i=t.npmExamples;null==i&&null!=t.examples&&(i=t.npmExamples=t.examples,delete t.examples);for(var n=0;n<i.length;n++){let e=i[n];e.name||(e.name=e.url.replace("example/","").replace(/^\//,"").replace(".json","").replace(/\-/g," "))}if(e.list=i.slice(0),e.npmBaseUrl=t.packageURL,e.ghBaseUrl=t.ghPackageURL,e.ghBaseUrl){let t=e.ghBaseUrl.match(/@[a-z0-9]+(\/|$)/m)?.[0];e.ghCommitHash=t.slice(1,7)}if(e.ghBaseUrl&&e.selectSource("gh"),e.githubURL&&!e.ghBaseUrl){let t=e.githubURL.match(/(?<=github\.com\/).*?\/.*?($|\?|\/)/m)[0];e.ghBaseUrl=`https://cdn.jsdelivr.net/gh/${t}@main`}},e.openExample=async function(t){SmallNotif.add("Loading information..");let i,n=t.url;if("/"!==n.slice(0,1)&&(n=`/${n}`),"npm"===e.currentSource)i=e.npmBaseUrl;else{if("gh"!==e.currentSource)throw new Error("Unknown source");i=e.ghBaseUrl}let o=await $.getJSON(i+n);SketchImporter.loadJSON(o)},e.selectSource=function(t){e.currentSource=t,e.list="npm"===t?e.pkg.npmExamples:e.pkg.ghExamples??[];let i=e.list;for(var n=0;n<i.length;n++){let e=i[n];e.name||(e.name=e.url.replace("example/","").replace(/^\//,"").replace(".json","").replace(/\-/g," "))}},e.back=function(){Modal.goto("/module-example-list")},e.refreshCache=async function(i){if(null==i){let t=e.packageURL;if(t.includes("@latest")||(t=t.match(/.*?(?=@[0-9])/)?.[0],null!=t&&(t+="@latest")),!t)throw new Error("Saved package URL was not found");SmallNotif.add("Obtaining package.json"),i=await $.getJSON(`${t}/package.json`),e.packageVersion=i.version}let n=i.name,o=(i.repository?.url??"").replace(/\.git$/m,"").replace(/^.*?github.com\//m,"");SmallNotif.add("Obtaining NPM file list");try{var a=await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${n}@${i.version}`)}catch(e){SmallNotif.add("Failed to obtain example from NPM","red"),console.error(e)}let l,s=a?t(a):[],r=[];if(o){SmallNotif.add("Obtaining repository's file list");try{var c=await $.getJSON(`https://api.github.com/repos/${o}/commits?per_page=1`),d=await $.getJSON(`https://data.jsdelivr.com/v1/package/gh/${o}@${c[0].sha}`);l=`${o}@${c[0].sha}`}catch(e){SmallNotif.add("Failed to obtain example from GitHub","red"),console.error(e)}r=d?t(d):[]}if(0===s.length&&0===r.length)throw new Error("Examples was not found");let p=ModuleExampleList.replacePackageExample(i,s,r,l);e.npmBaseUrl=p.packageURL,e.ghBaseUrl=p.ghPackageURL,e.cacheDate=p.cacheDate,null!=e.pkg&&e.packageName===n&&(e.pkg.npmExamples=s,e.pkg.ghExamples=r,e.selectSource(e.currentSource))}});var ModuleExampleList=sf.model("module-example-list",function(e){function t(t){let i=e.list;for(let e=0;e<i.length;e++){let n=i[e];if(n.packageName===t)return sf.model("module-example-list-deep").openModal(n),Modal.goto("/module-example-list-deep"),!0}return!1}e.list=window._moduleExampleList??=[],e.urlInput="",e.urlValidity="valid",e.on$urlInput=function(t){!t||/(?<=github\.com\/).*?\/./.test(t)||/npmjs\.com\/package\//.test(t)?e.urlValidity="valid":e.urlValidity="invalid"},function(){let t=localStorage.bpModuleExampleList;if(!t)return;e.list.push(...JSON.parse(t))}(),e.open=function(e){sf.model("module-example-list-deep").openModal(e),Modal.goto("/module-example-list-deep")},e.add=function(t,i,n){let o=e.list;for(var a=0;a<o.length&&o[a].packageName!==t;a++);if(a===o.length){o.push({packageName:t,packageURL:n,npmExamples:i,ghExamples:[]}),e.list=o=o.sort((e,t)=>e.packageName.localeCompare(t.packageName));try{o.refresh()}catch(e){}SmallNotif.add(`"${t}" example has been added`,"green")}else o[a].npmExamples=i;localStorage.bpModuleExampleList=JSON.stringify(e.list)},e.replacePackageExample=function(t,i,n,o){let a=t.name,l=`https://cdn.jsdelivr.net/npm/${a}@${t.version}`,s=(t.repository?.url??"").replace(/\.git$/m,""),r=`https://cdn.jsdelivr.net/gh/${o}`,c=e.list;for(var d=0;d<c.length;d++){let e=c[d];if(e.packageName===a){e.npmExamples=i,e.ghExamples=n,e.packageURL=l,e.githubURL=s,e.ghPackageURL=r,e.cacheDate=Date.now();break}}return c.length===d&&c.push({packageName:a,packageURL:l,githubURL:s,ghPackageURL:r,cacheDate:Date.now(),npmExamples:i,ghExamples:n}),localStorage.bpModuleExampleList=JSON.stringify(e.list),SmallNotif.add("Example data updated","green"),c[d]},e.addExampleFromURL=async function(i){if(i||(i=e.urlInput),!i)throw new Error("URL mustn't be empty");let n;if(/github\.com\//.test(i)){let e=i.match(/(?<=github\.com\/).*?\/.*?(?=$|.git|\/|\?)/m)[0];n=await $.getJSON(`https://cdn.jsdelivr.net/gh/${e}@main/package.json`)}else{if(!/npmjs\.com\/package\//.test(i))throw SmallNotif.add("URL is not recognized as GitHub repository or NPM registry"),new Error("URL is not recognized as GitHub repository or NPM registry");{let e=i.match(/(?<=npmjs\.com\/package\/).*?(?=$|\?)/m)[0];n=await $.getJSON(`https://cdn.jsdelivr.net/npm/${e}@latest/package.json`)}}if(!t(n.name)){if(null==n.dependencies?.["@blackprint/engine"]&&null==n.devDependencies?.["@blackprint/engine"])throw SmallNotif.add("Package is not recognized as Blackprint module, as @blackprint/engine was not exist in dependencies or devDependencies"),new Error("Package is not recognized as Blackprint module, as @blackprint/engine was not exist in dependencies or devDependencies");await sf.model("module-example-list-deep").refreshCache(n),e.urlInput="",t(n.name)}}});let _editorModuleURL=sf.model("module-url",function(e){e.list=Blackprint._modulesURL,e.firstInit=!1,e.newURL="";let t=localStorage.bpModuleURLList;async function i(t,i){let n=e.newURL;e.newURL="";let o=SmallNotif.add("Loading","yellow",!1);try{await Blackprint.loadModuleFromURL(t,i),await sf.loader.task,SmallNotif.add("Module sucessfully loaded","green")}catch(t){SmallNotif.add("Failed to load module","red"),console.error(t),e.newURL=n}let a=SmallNotif.list;a.splice(a.indexOf(o),1),e.sortURL()}e.init=async function(){},e.sortURL=function(){e.list.sort((e,t)=>e._url.localeCompare(t._url)),e.list.refresh(),0!==e.list.length&&(localStorage.bpModuleURLList=JSON.stringify(e.list.map(e=>e._url)))},e.shortenLink=function(e,t){if(e=new URL(e),"search"===t)return e.search;if("host"===t)return e.host||location.host;let i=e.pathname;return i.includes("@dist")?i.replace(/(cjs|mjs)\/|\.(min|mjs|js)/g,"").split("/").slice(-2).join("/"):i.replace(/(cjs|mjs|dist)\/|\.(min|mjs|js)/g,"").split("/").slice(-2).join("/")},e.addURL=function(){let t=e.list;for(var n=0;n<t.length;n++){let o=t[n];if(e.newURL===o._url)return;if(e.newURL.replace(/\?.*?$/m,"")===o._url.replace(/\?.*?$/m,""))return o._url=e.newURL.replace(/\?.*?$/m,""),void i(o._url,{loadBrowserInterface:!0})}i(e.newURL.replace(/\?.*?$/m,"")+"?"+(Date.now()/1e3|0),{loadBrowserInterface:!0})},e.reloadURL=function(e){/\?[0-9]/.test(e._url)?e._url=e._url.replace(/\?([0-9]+)/,(e,t)=>"?"+(1+Number(t))):e._url.includes("?")?e._url=e._url.replace(/\?.*?$/m,"")+"?1":e._url+="?1";for(var t=0;t<SketchList.length;t++)null!=SketchList[t]&&SketchList[t]._remote?.syncModuleList();Blackprint.loadModuleFromURL(e._url)};let{diveModuleURL:n}=Blackprint.utils;e.hideFromURL=function(e){let t=e._url.replace(/\?.*?$/m,""),i=e._hidden=!e._hidden;n(Blackprint.modulesURL[t],function(e,t,n,o){e[t].hidden=i;for(var a=o.length-1;a>=0;a--){let e=o[a];if(!(--e.val._visibleNode<=0))break;if(0===a){Blackprint.nodes[n[0]].hidden=i;break}o[a-1].val[e.key].hidden=i}}),Blackprint.emit("bp_editorNodeAvailability")},e.deleteFromURL=function(t){if(-1===e.list.indexOf(t))return;let i=t._url.replace(/[?#].*?$/m,"");Blackprint.deleteModuleFromURL(i)},Blackprint.on("module.delete",{slot:"bp-editor"},function({url:t}){let i=document.styleSheets,n=t.replace(/[?#].*?$/m,"").replace(/\.(sf|js|css|min|mjs)\b/g,"");for(var o=0;o<i.length;o++){let e=i[o];if(null!=e.href&&e.href.replace(/[?#].*?$/m,"").replace(/\.(sf|js|css|min|mjs)\b/g,"")===n){e.ownerNode.remove();break}}let a=e.list;for(o=0;o<a.length;o++)if(a[o]._url.includes(n)){a.splice(o,1);break}}),e.npmList=function(){modal.goto("/npm-packages")},e.loadCachedList=function(){let n=t;n&&(n=JSON.parse(n),0!==n.length&&(e.firstInit=!1,i(n,{loadBrowserInterface:!0})))},e.close=function(){Modal.hide(),modal.goto("/")}});sf.model("npm-package-info",function(e){e.list=[],e.title="",e.description="",e.version="",e.author="",e.date="",e.repository="",e.packageURL="",e.package=0,e.open=function(t,i,n){e.list=i,e.exampleList=n,e.package=t,e.title=t.name,e.description=t.description||"",e.version=t.version,e.date=t.date.split("T")[0],e.author=t.publisher.username||"",e.repository=t.links.repository||"",e.packageURL=`https://cdn.jsdelivr.net/npm/${t.name}@${t.version}`;let o=Blackprint.modulesURL,a=e.list;for(var l=a.length-1;l>=0;l--)a[l].url.endsWith(".json")&&a.splice(l,1);for(let e in o)for(l=a.length-1;l>=0;l--){let t=a[l];e.includes(t.url)&&(t.active="active")}Modal.goto("/npm-package-info")},e.load=async function(t){t.active="loading";try{await Blackprint.loadModuleFromURL([e.packageURL+t.url],{loadBrowserInterface:!0})}finally{}0!==e.exampleList.length&&ModuleExampleList.add(e.title,e.exampleList,e.packageURL),t.active="active",e.package._active=!0},e.back=function(){Modal.goto("/npm-packages")}}),sf.model("npm-packages",function(e){e.list=[],e.search="",e.loading=!1;let t=["blackprint","@blackprint/engine","@blackprint/sketch","@blackprint/code-generation","@blackprint/remote-control","@blackprint/cli-tools"];e.init=function(){e.refreshList()},e.refreshList=async function(){let i="https://registry.npmjs.org/-/v1/search?text=blackprint%20nodes";""!==e.search&&(i+="%20"+e.search),e.loading=!0;let n=(await $.getJSON(i)).objects;e.loading=!1;for(let e=n.length-1;e>=0;e--){let i=n[e].package;t.includes(i.name)?n.splice(e,1):/blackprint/.test(i.name)||i.description&&/blackprint/.test(i.description)||i.keywords?.includes("blackprint")||n.splice(e,1)}let o=Blackprint.modulesURL;for(let e in o)for(var a=0;a<n.length;a++){let t=n[a].package;t.description=t.description?.replace(/&#39;/g,"'"),e.includes(t.name)&&(t._active=!0,t._update=Blackprint.utils.packageIsNewer(e,t.name+"@"+t.version))}e.list=n},e.open=async function(t){e.loading=!0;let i=await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${t.name}@${t.version}`);i=i.files;let n=[],o=[];for(var a=0;a<i.length;a++){let e=i[a];if("directory"===e.type)if("dist"===e.name){let t=e.files;for(var l=0;l<t.length;l++){let e=t[l];if("file"!==e.type)continue;let i=e.name;/\.(map|sf\.mjs|sf\.js|css)$/.test(i)||n.push({url:`/dist/${i}`})}}else if("example"===e.name){let t=e.files;for(l=0;l<t.length;l++){let e=t[l];"file"===e.type&&o.push({url:`/example/${e.name}`})}}}e.loading=!1,sf.model("npm-package-info").open(t,n,o)},e.reportClick=function(){window.open("https://github.com/Blackprint/blackprint.github.io/issues/new","_blank")}}),sf.model("modal-remote-engine-connect",function(e){e.which="engine",e.url=localStorage.BPRemoteEngine??="",e.placeholder="http://localhost:2345",e.allowModuleSync=!0,e.allowRemoteImport=!0,e.allowDataOutSync=!0,e.client=null,e.socket=null,e.connectDefault=function(){localStorage.BPRemoteEngine=e.url="",e.changeServer()};e.changeServer=async function(t,i){let n=e.url;n||(n=e.placeholder),null==window.io&&(sf.loader.js(["https://cdn.socket.io/4.6.1/socket.io.min.js"]),await sf.loader.task);let o=window.SketchList[0],a=e.client??=new Blackprint.RemoteControl(o);e.client.enable?.(),e.socket?.destroy();let l=new URL(n),s=e.socket=io(l.origin,{transports:["websocket"],path:"/"===l.pathname?"/socket.io":l.pathname,parser:window._SocketIOParser});SmallNotif.add("Connecting to remote engine"),s.on("startup-time",e=>{Date.now()-e<1e4?a.sendSketchToRemote():(a.requestRemoteJSON(),a.once("empty.json.import",function(){a.sendSketchToRemote()}))}),a.on("disabled",()=>SmallNotif.add("Remote sync was disabled","red")),a.on("remote-save.begin",function(){SmallNotif.add("Sketch saved on remote")}),o.disablePorts=!0,a.onImport=t=>e.allowRemoteImport,a.onModule=t=>e.allowModuleSync,s.on("relay",e=>a.onSyncIn(e)),a.onSyncOut=e=>s.emit("relay",e),Modal.showed&&"/remote-engine-connect"===Modal.views.currentPath&&Modal.hide(),setTimeout(()=>{s.connected||(console.log("Failed to connect to remote engine:",n),SmallNotif.add("Failed to connect to remote engine","red"),s.destroy(),t&&(localStorage.BPRemoteEngine=""))},8e3),s.on("disconnect",()=>SmallNotif.add("Disconnected from remote engine")),s.on("connect",function(){console.log("Connected to remote engine:",n),SmallNotif.add("Connected to remote engine","green"),localStorage.BPRemoteEngine=n,!0===i&&(i=!1,Modal.goto("/remote-sync"))})},""!==e.url&&null!=Blackprint.RemoteControl&&$(()=>setTimeout(()=>e.changeServer(!0,!0),200))}),sf.model("modal-remote-sketch-connect",function(e){e.which="sketch",e.url=localStorage.BPSketchRelayServer??="",e.placeholder="http://localhost:2345",e.allowModuleSync=!0,e.allowRemoteImport=!0,e.allowDataOutSync=!0,e.client=null,e.socket=null,e.event=new Blackprint.Engine.CustomEvent,e.connectDefault=function(){localStorage.BPSketchRelayServer=e.url="",e.changeServer()},e.changeServer=async function(t,i){let n=e.url;null==window.io&&(sf.loader.js(["https://cdn.socket.io/4.6.1/socket.io.min.js"]),await sf.loader.task);let o=window.SketchList[0],a=e.client??=new Blackprint.RemoteSketch(o);e.client.enable?.(),a.onImport=t=>e.allowRemoteImport,a.onModule=t=>e.allowModuleSync,a.on("disabled",()=>SmallNotif.add("Remote sync was disabled","red")),e.socket?.destroy();let l=new URL(n),s=e.socket=io(l.origin,{transports:["websocket"],path:"/"===l.pathname?"/socket.io":l.pathname,parser:window._SocketIOParser});SmallNotif.add("Connecting to remote sketch"),s.on("relay",e=>a.onSyncIn(e)),a.onSyncOut=e=>s.emit("relay",e),e.event.emit("init"),setTimeout(()=>{let i=e.socket;i.connected||(console.log("Failed to connect to sketch's relay server:",n),SmallNotif.add("Failed to connect to sketch's relay server","red"),i.destroy(),e.event.emit("disconnected"),t&&(localStorage.BPSketchRelayServer=""))},8e3),s.on("disconnect",()=>SmallNotif.add("Disconnected from relay server")),s.on("connect",function(){console.log("Connected to sketch's relay server:",n),SmallNotif.add("Connected to sketch's relay server","green"),localStorage.BPSketchRelayServer=n,e.event.emit("connected"),!0===i&&(i=!1,Modal.goto("/remote-sync"))}),Modal.showed&&"/remote-sketch-connect"===Modal.views.currentPath&&Modal.hide()},""!==e.url&&null!=Blackprint.RemoteSketch&&$(()=>setTimeout(()=>e.changeServer(!0,!0),200))}),sf.model("remote-sync",function(e){function t(){let e=sf.model("modal-remote-sketch-connect").socket;return e?sf.model("modal-remote-sketch-connect"):(e=sf.model("modal-remote-engine-connect").socket,e?sf.model("modal-remote-engine-connect"):void 0)}e.puppetNodeList=function(){let e=t().socket;e.emit("puppetnode.ask"),e.once("puppetnode.answer",async e=>{let t=sf.model("project-list").getActiveTab(),i=t.sketch.rootInstance||t.sketch,n=i.exportJSON({environment:!1});i.clearNodes(),await i.importJSON(n)})},e.sendModuleList=function(){t().client.syncModuleList()},e.receiveInstance=async function(){let e=await t().client.requestRemoteJSON(),i=sf.model("project-list").getActiveTab(),n=i.sketch.rootInstance||i.sketch;n.clearNodes(),await n.importJSON(e)},e.sendInstance=function(){t().client.sendSketchToRemote(),t().client.saveSketchToRemote(!0)},e.disconnect=function(){let e=t();e.socket.disconnect(),"sketch"===e.which&&Modal.goto("/remote-sketch-connect"),"engine"===e.which&&Modal.goto("/remote-engine-connect")}});var SketchImporter=sf.model("sketch-importer",function(e){e.modules=[],e.nodes=[],e.pendingLoad=void 0,e.savedKeys={localStorage:[],sessionStorage:[],environmentVariables:[],sketchPages:[]};let t=!1;e.loadJSON=async function(t){Modal.goto("/sketch-importer"),t.constructor===String&&(t=JSON.parse(t)),e.pendingLoad=t,e.modules=t.moduleJS||[],e.nodes=[];let i=t.instance;for(let t in i)e.nodes.push({name:t,count:i[t].length});e.checkSavedData()},e.removeModuleList=function(){e.modules=[],e.pendingLoad.moduleJS=[]},e.importNow=function(){if(void 0===e.pendingLoad){let e="Please call 'SketchImport.loadJSON' first";return console.error(e),SmallNotif.add(e,"yellow"),!1}Modal.hide();let i=SketchList[0]??=new Blackprint.Sketch;async function n(){try{let t=CurrentSketch.scope("container");t.scale=1,t.size.w=t.origSize.w,t.size.h=t.origSize.h,await i.importJSON(e.pendingLoad)}catch(i){SmallNotif.add("Failed to import instance from JSON, please do a clean import again","red"),window.editor_lastFailedImport=e.pendingLoad,console.log("%cIf you want to debug/modify your last failed import please copy value from 'window.editor_lastFailedImport' and modify it from your text editor, then reimport it to Blackprint Editor","color: yellow");let n=SmallNotif.list;throw n.splice(n.indexOf(t),1),i}finally{delete i.__importing,e.pendingLoad=void 0}let n=SmallNotif.list;n.splice(n.indexOf(t),1),$(".page-current > sketch-page")[0].model.fitToView()}if(i.__importing=!0,"/sketch/1"===views.currentPath)return t=SmallNotif.add("Loading","yellow",!1),setTimeout(n,400);views.goto("/sketch/1"),t=SmallNotif.add("Loading","yellow",!1),setTimeout(n,1e3)},e.checkSavedData=function(){e.savedKeys.localStorage=Object.keys(localStorage),e.savedKeys.sessionStorage=Object.keys(sessionStorage),e.savedKeys.environmentVariables=Object.keys(Blackprint.Environment.map),e.savedKeys.sketchPages=SketchList},e.clear={localStorage(){let t=Object.keys(localStorage);for(let e=0;e<t.length;e++)delete localStorage[t[e]];e.savedKeys.localStorage=Object.keys(localStorage)},sessionStorage(){let t=Object.keys(sessionStorage);for(let e=0;e<t.length;e++)delete sessionStorage[t[e]];e.savedKeys.sessionStorage=Object.keys(sessionStorage)},environmentVariables(){let t=Blackprint.Environment,i=Object.keys(t.map);for(let e=0;e<i.length;e++)t.delete(i[e]);e.savedKeys.environmentVariables=Object.keys(Blackprint.Environment.map)},sketchPages(){for(var e=0;e<SketchList.length;e++)null!=SketchList[e]&&SketchList[e].destroy();SketchList.splice(1),views.goto("/sketch/1")}}}),SketchSettings=sf.model("sketch-settings",function(e){let t;e.theme="default",e.isDevMode=void 0!==sf.hotReload,e.on$theme=function(t){$("body").removeClass("node-ui-"+e.theme).addClass("node-ui-"+t)},e.background=localStorage.bpBackgroundURL||"",e.on$background=function(e){$("body > .background > .img").css("background-image","url('"+(e||"/assets/img/background/black3.jpg")+"')").css("background-size","cover"),localStorage.bpBackgroundURL=e},e.background&&e.on$background(e.background),e.hideUnusedPort="true"==localStorage.bpHideUnusedPort||!1,e.on$hideUnusedPort=function(e){for(var t=0;t<SketchList.length;t++){if(null==SketchList[t])continue;let n=SketchList[t].scope("container");n.hideUnusedPort=e;let o=n.nodeScope.list;for(var i=0;i<o.length;i++)o[i].hideUnusedPort=e}localStorage.bpHideUnusedPort=e},e.showSketchMinimap="true"==localStorage.bpShowSketchMinimap||!1,e.on$showSketchMinimap=function(e){for(var t=0;t<SketchList.length;t++){if(null==SketchList[t])continue;let o=SketchList[t],a=o.page.miniViewer;if(!0===e&&null==a.topRight){a.topRight=o.cloneContainer(!0),$('sf-m[name="dropdown"]',a.topRight).remove();var i=o.scope("container");function n(){setTimeout(function(){i.pos.x=-.1,setTimeout(function(){i.pos.x=0},500)},1e3)}i.pos.x=0,i.pos.y=0,i.scale=1,n()}a.topRightHidden=!e}localStorage.bpShowSketchMinimap=e},e.customScript=localStorage.bpCustomScript||"",e.on$customScript=function(e,i){if(sf.hotReload){if(!/^http.*?js$/m.test(e))return localStorage.bpCustomScript="",void SmallNotif.add("Invalid custom script URL");clearTimeout(t),t=setTimeout(async()=>{sf.loader.js([e]),await sf.loader.task,i||SmallNotif.add("Custom script URL was saved"),localStorage.bpCustomScript=e},1e3)}},e.customScript&&e.on$customScript(e.customScript,!0),Blackprint.settings("singleNodeExecutionLoopLimit",+(localStorage.singleNodeExecutionLoopLimit??=1e4)),e.singleNodeExecutionLoopLimit=Blackprint.settings.singleNodeExecutionLoopLimit,e.on$singleNodeExecutionLoopLimit=function(e){Blackprint.settings.singleNodeExecutionLoopLimit=+e,localStorage.singleNodeExecutionLoopLimit=+e}});sf.model("terms-and-privacy",function(e){e.open=function(e){}});var SketchList=[];sf.component("sketch-page",function(e){e.miniViewer={topRight:null,topRightHidden:!0,on$topRight(t){if(null===t)return e.miniViewer.topRightHidden=!0;e.miniViewer.topRightHidden=!1}};let t,i={slot:"bp-editor"};if(null==views.data.bpInstance){if(views.data.page.startsWith("node-"))return setTimeout(()=>{e.$el.parent("sf-page-view").remove(),views.lastSibling=null},500),this.CurrentSketch={_abandon:!0,variables:{},functions:{},on(){}},e.panels={},console.log("Returning to other page because bpInstance was not found");t=e.sketch=SketchList[views.data.page-1]??=new Blackprint.Sketch}else t=e.sketch=views.data.bpInstance,setTimeout(()=>e.fitToView(),200);function n(e,t=0){let i=0,o=null;for(let t in e)i++;for(var a in e)if(o=e[a],o.constructor===Object){let{len:l,key:s,list:r,val:c}=n(o,t+1);0!==t&&1===i&&1===l&&(delete e[a],e[a=a+"/"+s]=c,o=c)}return 0===t?e:{len:i,key:a,list:e,val:o}}function o(e){let{input:t,output:i}=e.iface;for(let e in t){let i=t[e],n=i._cache??i._oldCache??i.value??i.default;null!=i.feature||null!=n&&i.type!==String&&i.type!==Boolean&&i.type!==Number||i.insertComponent(null,"editor-display-port-value",{value:n})}for(let e in i){let t=i[e],n=t.value??t.default;null!=t.feature||t.type===Function||null!=n&&t.type!==String&&t.type!==Boolean&&t.type!==Number||t.insertComponent(".name","editor-display-port-value",{value:n})}}t.on("destroy",i,function(){let e=$(t.scope.domList[0].closest("sketch-page").parentNode);e.hasClass("page-current")?setTimeout(()=>e.remove(),700):e.remove()}),window.CurrentSketch=t,t.page=e,e.panels={left:null,bottom:null,right:null},t._event.$_fallback=BlackprintEventFallback,t.on("port.cable.test",i,SuggestNodeTypeCaster),t.on("port.hover node.hover",i,e=>{e.instance=t,null!=e.port&&PortHoverInfo(e,!0),null!=e.iface&&NodeHoverInfo(e,!0)}),t.on("port.unhover node.unhover",i,e=>{e.instance=t,null!=e.port&&PortHoverInfo(e,!1),null!=e.iface&&NodeHoverInfo(e,!1)}),t.on("port.menu",i,e=>{let t=e.port.iface,i={cancel:!0};async function n(e,t){let n=await Swal.fire({title:e,text:t,input:"text"});return!1===n.isConfirmed?i:n.value}if("BPIC/BP/Fn/Main"===t.interface)e.menu.push({title:"Rename Port",async callback(){let o=await n("Rename port","Current name: "+e.port.name);o!==i&&o&&(null==t[e.port.source][o]?t.renamePort(e.port.source,e.port.name,o):SmallNotif.add("Conflicting port name","red"))}});else if("BPIC/BP/Event/Emit"===t.interface||"BPIC/BP/Event/Listen"===t.interface){let o="BPIC/BP/Event/Emit"===t.interface?"input":"output";e.menu.push({title:"Add Field",async callback(){let e=await n("Add event data's field");e!==i&&e&&(null==t[o][e]?t.createField(e):SmallNotif.add("Conflicting event field name","red"))}}),e.port.type===Function||"input"===e.port.source&&"Limit"===e.port.name||(e.menu.push({title:"Rename Field",async callback(){let a=await n("Add event data's field","Current name: "+e.port.name);a!==i&&a&&(null==t[o][a]?t.renameField(e.port.name,a):SmallNotif.add("Conflicting event field name","red"))}}),e.menu.push({title:"Delete Field",async callback(){t.deleteField(e.port.name)}}))}}),t.on("cable.created cable.drag",i,({event:e,cable:i})=>{if(null==e)return;t.once("cable.dropped cable.connect cable.deleted",function e(){t.off("cable.dropped cable.connect cable.deleted",e),CurrentSketch.scope("nodes").$el(".bp-suggest-light").removeClass("bp-suggest-light")});let n=i.owner,o=n.virtualType||n.type,a="input"===n.source?"output":"input",l=t.ifaceList;for(let e=0;e<l.length;e++){let t=l[e][a];if(null!=t)for(let e in t){let i=t[e];o===(i.virtualType||i.type)&&i.iface.$el.addClass("bp-suggest-light")}}}),t.on("cable.dropped",i,e=>{let i=e.event;if(i.ctrlKey||!e.afterCreated||e.cable.isRoute)return;if("touch"===i.pointerType){if(null==document.elementFromPoint(i.clientX,i.clientY).closest('sf-m[name="cables"]'))return}else if(i.target.parentNode.model!==t.scope("cables"))return;let o=t.ifaceList;o[o.length-1];a._cableDropMenu=e.cable,setTimeout(()=>a._cableDropMenu=null,300);let s=n(Blackprint.Sketch.suggestNodeForPort(e.port)),r=e.port.type;if(r instanceof Object&&r!==Blackprint.Types.Route&&r!==Blackprint.Types.Trigger){let e=s,t=Blackprint.nodes;e.Data??={},e.Data.Object??={},e.Data.Object.Get=t.Data.Object.Get,e.Data.Object.Deconstructor=t.Data.Object.Deconstructor}l.nodeScope.menu(i,s,{onCreated(t){let i=e.cable.owner,n=i.source,o=t["input"===n?"output":"input"],a=[];if(null!=o){for(let e in o){let t=o[e];isConnectablePort(i.type,t.type)&&a.push(t)}if(1===a.length)a[0].connectCable(e.cable);else{let t="input"===n?20:-20;e.cable.head2[0]+=t}}},suggest:!0})}),t.on("editor.properties.open",()=>{e.panels.right.openPanel()}),t.on("node.function.open",i,async e=>{let i=e.iface.namespace.split("/").join("-");i+="-"+e.iface.uniqId;let n=t.tabInfo??t.rootInstance.tabInfo,o=n.id,a=$("vw-page > sf-page-view",views.rootDOM),l=`/sketch/${o}-node-`+i;for(let t=0;t<a.length;t++){let i=a[t];i.routePath===l&&i.querySelector("sketch-page").model.sketch!==e.iface.bpInstance&&i.remove()}await views.goto(l,{bpInstance:e.iface.bpInstance}),n.currentRoute=l,e.iface.bpInstance.recalculatePosition()}),t.on("node.click",i,t=>{e.panels.right.selectNode(t.iface),NodeHoverInfo(t,!1)}),t.on("execution.paused",i,({cable:i,cables:n,afterNode:a,beforeNode:l,triggerSource:s})=>{let r=e.panels.bottom,c=e.$el("editor-display-port-value");if(r.stepModeIsRequesting=!1,e.$el(".debug-after-node, .debug-next, .debug-cable").removeClass("debug-after-node").removeClass("debug-cable").removeClass("debug-next"),null!=i){let e=t.scope("cables").list.getElement(i);$("path",e).addClass("debug-cable"),l?.iface.$el.addClass("debug-next"),a?.iface.$el.addClass("debug-after-node");let{input:n,output:o}=i;1===s?(r.noteTitle="Routing: ",r.note=`${o.iface.title} -> ${n?.iface.title||"Stop"}`):2===s?(r.noteTitle="Calling Trigger: ",r.note=`${o.iface.title} -> ${n.iface.title}`):3===s&&(r.noteTitle="Request Value: ",r.note=`${n.iface.title} -> ${o.iface.title}`,r.stepModeIsRequesting=!0)}else if(null!=l){if(null!=n){let e=t.scope("cables").list;for(let t=0;t<n.length;t++){let i=e.getElement(n[t]);$("path",i).addClass("debug-cable")}}l.iface.$el.addClass("debug-next"),r.noteTitle="Updating: ",r.note=`${l.iface.title}`}if(r.stepModeIsRequesting)for(let e=0;e<c.length;e++){let t=c[e],i=t.parentNode.model;t.model.setValue(i._cache??i.value??i.default)}else e.$el("editor-display-port-value").remove();if(null!=l&&o(l),null!=a&&0!==s)o(a);else if(null!=n)for(let e=0;e<n.length;e++)o(n[e].output.iface.node);null==i&&null==n&&(r.noteTitle="Running...",r.note="",r.stepModeIsRequesting=!1)}),t.on("execution.terminated",i,({reason:t,iface:i})=>{SmallNotif.add(t,"red");let n=e.panels.bottom;n.opened=!0,n.noteTitle="Execution stopped"}),Blackprint.settings("visualizeFlow",!0),e.space??=t.cloneContainer();let a=sf.model("sketch-pages"),l=t.scope("container"),s=sf.model("header");l.hideUnusedPort=sf.model("sketch-settings").hideUnusedPort,l.onScale=function(e){s.info.scale=Math.round(100*e)},e.init=async function(){let i=$(e.space.firstElementChild);if(null==t.tabInfo){let e=sf.model("project-list"),t=e.list;setTimeout(()=>{for(let i=0;i<t.length;i++){let n=t[i],o="/sketch/"+views.data.page;if(n.currentRoute===o){e.storeCurrentSketchToTab(n,views.data.page);break}}},1)}{let e=$('script[src*="@blackprint/sketch"]').attr("src").match("(?<=@)([0-9.]+)")?.[0],t=$('script[src*="@blackprint/engine"]').attr("src").match("(?<=@)([0-9.]+)")?.[0],n=$('script[src*="@blackprint/remote-control"]').attr("src").match("(?<=@)([0-9.]+)")?.[0],o=$('script[src*="@blackprint/code-generation"]').attr("src").match("(?<=@)([0-9.]+)")?.[0];location.pathname.startsWith("/dev.html")&&(n??=0),e="Sketch: v"+$.escapeText(e||"-unknown"),t="\nEngine: v"+$.escapeText(t||"-unknown"),n=null!=n?"\nRemote: v"+$.escapeText(n||"-unknown"):"",o="\nCodeGen: v"+$.escapeText(o||"-unknown"),i.prepend(`<div class="top-left-info">${e}${t}${n}${o}</div>`)}i.eq(0).hasClass("bg-tile")||i.prepend('<div class="bg-tile"></div>'),e.registerListener()},e.registerListener=function(){function t(e){"path"===e.tagName&&e.parentElement.model.disconnect()}function i(e){if(!e.altKey)return o.off("pointermove",i);t(e.target)}function n(e){if(!e.altKey)return o.off("touchmove",n);let i=e.touches[0];t(document.elementFromPoint(i.clientX,i.clientY))}let o=e.$el('sf-m[name="cables"]'),a=!1;o.on("pointerdown",function(e){e.altKey&&!a&&(a=!0,"touch"===e.pointerType?o.on("touchmove",n):o.on("pointermove",i))}).on("pointerup",function(e){a&&(a=!1,"touch"===e.pointerType?o.off("touchmove",n):o.off("pointermove",i))}),e.$el('sf-m[name="nodes"]').on("click",function(e){let t=e.target;if("TEXTAREA"!==t.tagName)return;let i=t.closest(".ports");if(null==i)return;let n=i.model.docs?.description;if(null==n)return;if(!/@menu\b/.test(n))return;let o=[];n.replace(/-\s+\[(.*?)\]:\((.*?)\)\s+=\s+(.*?)$/gm,function(e,i,n,a){o.push({title:n,description:a,callback(){$(t).val(i),$(t).trigger("input")}})}),DropDown.show(o,{element:t})})},e.fitToView=async function(){await $.afterRepaint,await t.recalculatePosition(),await $.afterRepaint;let e=t.scope("container"),{offsetHeight:i,offsetWidth:n}=e.$el[0].parentElement,o=e.nodeScope.list,a=0,l=0,s=0,r=0;for(var c=0;c<o.length;c++){let e=o[c];a<e.x&&(a=e.x,s=e.w||0),l<e.y&&(l=e.y,r=e.h||0)}a+=s+50,l+=r+50,a<=e.origSize.w-100&&l<=e.origSize.h-100?(a=e.origSize.w,l=e.origSize.h):(a+=200,l+=200);let d=n/a,p=i/l,u=d<p?d:p;u*=100,u-=u%5,u/=100,0===u&&(console.log("Unexpected: scaling the container to zero"),u=1),e.scale=u>1?1:u,e.size.w=n/u,e.size.h=i/u,sf.model("header").info.scale=100*u},e.importJSON=e=>t.importJSON(e),e.clearNodes=()=>t.clearNodes(),e.cloneContainer=function(){let e=null!=t.parentInterface?`"${t.parentInterface.title}" Function`:"Main";new sf.Window({title:`Sketch: ${e}`,templateHTML:t.cloneContainer()})},t.on("node.menu",function({iface:e,menu:t}){e.namespace.startsWith("BPI/F/")||e.namespace.startsWith("BP/")||t.unshift({title:"View source code",async callback(){let{code:t,githubURL:i,scopeURL:n}=await utils.openNodeSource(e);if(!t)return;let o=sf.model("custom-node-editor");o.setValue(t);let a=i?.match(/\/\/cdn.jsdelivr.net\/gh\/(.*?)@/)?.[1];o.githubURL=a?`https://github.com/${a}/blob/-/src/${e.namespace}.js`:"",Modal.goto("/custom-node-editor")}}),t.unshift({title:e.id?"Modify ID":"Add ID",async callback(){let t=await Swal.fire({title:"Write the new ID here",text:e.id?"Current ID: "+e.id:void 0,input:"text"});if(!1===t.isConfirmed)return;let i=e.node.instance,n=t.value;if(""!==n){if(void 0!==i.iface[n])throw new Error("ID already exist");e.node.instance.changeNodeId(e,n)}else e.node.instance.changeNodeId(e,n)}})})}),sf.Views._$edit("vw-ground",[{path:"/",html:'\x3c!-- Filling the default page if haven\'t being routed --\x3e<sf-m name="welcome-text" class="welcome-text"><h1>Welcome to Blackprint Editor!</h1><div class="description">This editor haven\'t been designed for mobile screen.</div><div class="content"><div class="item" @click="toWorkspace"><i class="fas fa-torii-gate"></i> Go to sketch page</div><div class="item" @click="openExamples"><i class="fa fa-map-signs"></i> <span>Open examples</span></div><div class="item" onclick="Modal.goto(\'/documentation\')"><i class="fa fa-book-open"></i> <span>Documentation</span></div></div><div class="vscode-preview" style="margin-top: 20px;"><a href="https://marketplace.visualstudio.com/items?itemName=Blackprint.blackprint-vscode-extension" class="description" style="color: #a3e372;">You can also grab the VSCode extension here to use Blackprint on your editor</a></div><div class="available-engine"><div class="title">Blackprint Engine also available for:</div><div class="list">\x3c!-- python, csharp, java/kotlin, cplusplus, go, rust, docker --\x3e\x3c!-- css3, html5 --\x3e <a class="item" href="https://github.com/Blackprint/engine-js" target="_blank"><img src="/assets/img/icon/denojs.svg"><div class="name">Deno</div></a><a class="item" href="https://github.com/Blackprint/engine-js" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/nodejs/nodejs-plain.svg"><div class="name">Node.js</div></a><a class="item" href="https://github.com/Blackprint/engine-php" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/php/php-plain.svg"><div class="name">PHP</div></a><a class="item" href="https://github.com/Blackprint/engine-go" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/go/go-original-wordmark.svg"><div class="name">Golang</div></a><a class="item" href="https://github.com/Blackprint/engine-python" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/python/python-plain.svg" style="max-width: 45px;margin-bottom: 2px;"><div class="name">Python</div></a><a class="item" href="https://github.com/Blackprint/engine-lua" target="_blank"><img src="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/lua/lua-plain.svg"><div class="name">Luau</div></a>\x3c!--a class="item" href="https://github.com/Blackprint/engine-csharp" target="_blank">\n\t\t\t\t<img src="https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/csharp/csharp-plain.svg">\n\t\t\t\t<div class="name">C#</div>\n\t\t\t</a--\x3e</div></div></sf-m><div class="welcome-left">\x3c!--a target="_blank" href="https://ko-fi.com/stefansarya">\n\t\t<i class="fas fa-mug-hot"></i> Ko-fi\n\t</a--\x3e <a target="_blank" href="https://github.com/Blackprint/Blackprint"><i class="fab fa-github"></i> GitHub </a>\x3c!--a target="_blank" href="https://stefansarya.gitbook.io/blackprint">\n\t<a style="cursor: pointer" onclick="Modal.goto(\'/documentation\')">\n\t\t<i class="fa fa-book-open"></i> Documentation\n\t</a--\x3e <a target="_blank" href="https://github.com/Blackprint/Blackprint/discussions"><i class="fa fa-comments"></i> Discussions</a></div><div class="welcome-right"><a target="_blank" style="cursor: pointer;" onclick="Modal.goto(\'/terms-and-privacy\')">Terms and Privacy <i class="fas fa-file-alt"></i> </a><a target="_blank" style="cursor: pointer;" onclick="Modal.goto(\'/npm-packages\')">Package List <i class="fas fa-boxes"></i> </a><a target="_blank" href="https://www.npmjs.com/search?q=keywords:blackprint">npm.js <i class="fas fa-box"></i></a></div>'},{path:"/sketch",html:'<sf-m name="sketch-pages"><sf-template path="BPEditor/model/project-panel-left.sf"></sf-template>\x3c!-- /src/routes/+vw-ground/sketch.sf --\x3e<vw-page></vw-page></sf-m>',on:{showed(){sf.model("header").showOptions=!0},hidden(){sf.model("header").showOptions=!1}}},{path:"/sketch",html:'<sf-m name="sketch-pages"><sf-template path="BPEditor/model/project-panel-left.sf"></sf-template>\x3c!-- /src/routes/+vw-ground/sketch.sf --\x3e<vw-page></vw-page></sf-m>',on:{showed(){sf.model("header").showOptions=!0},hidden(){sf.model("header").showOptions=!1}},"vw-page":[{path:"/:page",html:'<sketch-page>\x3c!-- This element will be replaced with \'My.space\' --\x3e<sf-slot for="space"></sf-slot>\x3c!-- Panels --\x3e<div class="panels {{!miniViewer.topRightHidden && \'has-minimap\'}}">\x3c!-- /src/component/sketch-panel-left.sf --\x3e<sketch-panel-left></sketch-panel-left>\x3c!-- /src/component/sketch-panel-bottom.sf --\x3e<sketch-panel-bottom></sketch-panel-bottom>\x3c!-- /src/component/sketch-panel-right.sf --\x3e<sketch-panel-right></sketch-panel-right></div><sf-template path="BPEditor/component/project-navigation-bar.sf"></sf-template><div class="mini-blackprint disable-effect {{miniViewer.topRightHidden && \'hidden\'}}">\x3c!-- Will be replaced with element returned by Blackprint.cloneContainer(true) --\x3e<sf-slot for="miniViewer.topRight"></sf-slot></div></sketch-page>',on:{async coming(e){let t=e.bpInstance??SketchList[e.page-1];if(null!=t&&!t._abandon){if(window.CurrentSketch=t,setTimeout(()=>EditorHeader.showTabs=!0,100),$("body > .background .tile").css("display","none"),SketchSettings.showSketchMinimap){let e=t.page.miniViewer;null==e.topRight&&(e.topRight=t.cloneContainer(!0),$('sf-m[name="dropdown"]',e.topRight).remove()),e.topRightHidden=!1}sf.model("header").info.scale=100*t.scope("container").scale,null!=Blackprint.nodes.Data||this._dataNodeChecked||(await sf.loader.task,this._dataNodeChecked=!0,null==CurrentSketch?._remote&&(SmallNotif.add("Loading required nodes","yellow",500),"true"!==localStorage["no-autoload-standard-nodes"]&&Blackprint.loadModuleFromURL(["https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-console.mjs?1","https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-data.mjs?1","https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-decoration.mjs?1","https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-flowcontrol.mjs?1","https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-input.mjs?1"],{loadBrowserInterface:!0})))}},leaving(e){null!=e&&(/^\/sketch\//m.test(e)||($("body > .background .tile").css("display",""),window.CurrentSketch=null,setTimeout(()=>EditorHeader.showTabs=!1,1)))}}}]}]),sf.Views._$edit("vw-modal",[{path:"/",html:"'index.sf' was not found"},{path:"/code-generator",html:'<sf-m name="code-generator"><div class="title">Code Generator<div title="This feature may have many changes in the future">(<i class="fa fa-flask"></i> Experimental)</div></div><div class="section">Target language: <i class="fa fa-question-circle" title="Nodes need to register their code generation for using this feature, and some nodes may not support the target languages."></i></div><select class="list" sf-bind="target"><option class="item" :value="{{x.languageId}}" sf-each="x in list">{{x.languageName}}</option></select><div class="button" @click="refresh()">Generate</div><div class="section {{!error.length && \'hide\'}}">Error:</div><div class="error-list {{!error.length && \'hide\'}}"><div class="item {{x.type}}" sf-each="x in error" title="{{x.help || \'\'}}">{{x.message}}</div></div><div class="section">Code Result:</div><div style="display: {{target !== \'js\' ? \'none\' : \'\'}}" class="code-result-minify" title="Minify code" @click="minifyCode()"><i class="fa fa-compress-arrows-alt"></i></div><div class="code-result-copy" title="Copy to clipboard" @click="copyToClipboard()"><i class="fa fa-copy"></i></div><div class="code-result"><pre><code>...</code></pre></div></sf-m>'},{path:"/custom-node-editor",html:'<sf-m name="custom-node-editor"><div class="editor" @keydown.ctrl.enter.prevent="run"><div class="bp-loading-status" style="color: white; padding: 20px">Loading Monaco Editor...</div></div><div class="menu"><div class="item" @click="run" title="Execute (Ctrl + Enter)"><i class="fa fa-play"></i></div>\x3c!-- <div class="item" @click="Modal.hide()" title="Minimize"><i class="fa fa-window-minimize"></i></div> --\x3e<div class="item" @click="close" title="Close"><i class="fa fa-times"></i></div><div class="item" style="display: {{githubURL ? \'block\' : \'none\'}}" @click="openGitHub" title="Open file on GitHub"><i class="fab fa-github"></i></div></div></sf-m>',on:{showed(){sf.model("custom-node-editor").recreate()}}},{path:"/dev-mode",html:'<sf-m name="modal-dev-mode"><div class="description">Please set the Blackprint module server URL</div><div class="note" style="display: {{url === \'\' || url === placeholder ? \'none\':\'\'}}" @click="connectDefault">(Click here to connect to default server)</div><div class="text-input"><input placeholder="{{placeholder}}" type="text" sf-bind="url" @keyup.enter="changeServer"></div><div class="button-import" @click="changeServer">Connect</div></sf-m>',on:{coming(){setTimeout(()=>{sf.model("modal-dev-mode").$el("input").focus()},500)},showed(){setTimeout(()=>{sf.model("modal-dev-mode").$el("input").focus()},100)}}},{path:"/documentation",html:'<sf-m name="documentation"><div class="title">Documentation</div><div class="close" @click="Modal.hide()">x</div><div class="container"><div class="left-panel">\x3c!-- /src/component/tree-list2.sf --\x3e<div class="tree-view" @pointerdown="checkClick"><div class="tree-item collapsed" sf-each="key, val in docs" tree-item-key="{{key.replace(/\\W/g, \'_\')}}"><div class="title"><i class="fa tree-icon"></i> {{key}}</div>{{@if val.constructor === Object: return new $TreeList2({parentKey: \'\', key, val: val.branch}); }}</div></div></div><div class="content" @click="changeHeaderFocus"><sf-slot for="content"></sf-slot><div class="edit-button" title="Edit this documentation on GitHub" @click="editDocs"><i class="fa fa-pen"></i></div></div><div class="right-panel" @click="changeHeaderFocus"><sf-slot for="section"></sf-slot></div></div></sf-m>'},{path:"/environment-variables",html:'<sf-m name="environment-variables"><div class="title" title="Environment variables will be stored on your browser\'s localStorage">Environment Variables</div><div class="head"><div class="row">Key</div><div class="row">Value</div></div><div class="content"><div><div class="row" sf-each="x in list" @keyup="itemChanged(x, event)"><input class="column key" type="text" @input="renameEnv(x, this)" value="{{x.key}}" placeholder="..."> <input class="column bpe-value" type="{{showValue ? \'text\' : \'password\'}}" value="{{x.value}}" placeholder="..."></div></div><div class="row"><input class="column key" type="text" @input="this.value = newKey = validateKey(this.value)" sf-bind="newKey" placeholder="Add new key..."> <input class="column" type="text" sf-bind="newValue" placeholder="..."></div></div><div class="menu"><div class="item {{showValue && \'hide\'}}" @click="showValue = true" title="Show value"><i class="fa fa-eye-slash"></i></div><div class="item {{!showValue && \'hide\'}}" @click="showValue = false" title="Hide value"><i class="fa fa-eye"></i></div><div class="item" @click="close" title="Close"><i class="fa fa-times"></i></div></div></sf-m>'},{path:"/example-list",html:'<sf-m name="example-list"><div class="description">Please select one of these example (<a href="https://github.com/Blackprint/blackprint.github.io/blob/develop/src/global/sampleList.js">source</a>)</div><div class="list"><div class="item" sf-each="x in list" @click="open(x)">{{x}}</div></div></sf-m>',on:{coming(){sf.model("example-list").list=Object.keys(sampleList)}}},{path:"/module-example-list-deep",html:'<div style="height: 70vh;"><sf-m name="module-example-list-deep"><div class="description">Examples for: <b>{{packageName}}</b></div><div class="refresh-button" @click="refreshCache()">Click here to refresh cache ({{cacheDate ? (new Date(cacheDate)).toLocaleString() : \'?\'}})</div><div class="source-menu"><div class="item {{currentSource === \'gh\' ? \'selected\' : \'\'}}" @click="selectSource(\'gh\')" title="Example from repository\'s main branch"><i class="fab fa-github"></i> GitHub ({{ghCommitHash}})</div><div class="item {{currentSource === \'npm\' ? \'selected\' : \'\'}}" @click="selectSource(\'npm\')"><i class="fab fa-npm"></i> NPM (v{{packageVersion}})</div></div><div class="list"><div class="item" sf-each="x in list" @click="openExample(x)">{{x.name}}</div></div><div class="menu"><div class="item" @click="back" title="Back"><i class="fa fa-reply"></i></div></div></sf-m></div>'},{path:"/module-example-list",html:'<div style="height: 70vh;"><sf-m name="module-example-list"><div class="description">Please select one of the module to load the example list</div><div class="url-input"><input class="column {{urlValidity}}" type="text" @keyup.enter="addExampleFromURL()" sf-bind="urlInput" placeholder="Paste URL of GitHub repository or NPM registry here and press enter"></div><div class="list"><div class="item" sf-each="x in list" @click="open(x)">{{x.packageName}}</div></div></sf-m></div>',on:{coming(){}}},{path:"/module-url",html:'<div style="height:70vh"><sf-m name="module-url"><div class="head"><div class="row url">Shortened Module URL</div><div class="row nodes">Nodes</div><div class="row actions">Actions</div></div><div class="content"><div><div class="row" sf-each="x in list"><div class="column url"><div><b>{{shortenLink(x._url, \'host\')}}</b> {{shortenLink(x._url, \'path\')}} <b>{{shortenLink(x._url, \'search\')}}</b> <a title="Right click to copy link address, click to open on new tab" target="_blank" href="{{x._url}}"><i class="fa fa-link"></i></a></div></div><div class="column nodes">{{x._nodeLength}}</div><div class="column actions"><button title="Show this module on dropdown/module list" @click="hideFromURL(x)"><i class="fa fa-list"></i> <i class="fa fa-slash" style="position: absolute;\n\t\t\t\t\t\t\t    margin-left: -15px;\n\t\t\t\t\t\t\t    display: {{x._hidden ? \'inline-block\' : \'none\'}}"></i></button> <button title="Reload this module again from URL" @click="reloadURL(x)"><i class="fa fa-sync"></i></button> <button title="Remove any related nodes and also remove this module" @click="deleteFromURL(x)"><i class="fa fa-trash"></i></button></div></div></div><div class="row"><input class="column url-input" type="text" @keyup.enter="addURL()" sf-bind="newURL" placeholder="Add module from URL here... (Then press enter)"></div></div><div class="menu"><div class="item" @click="close" title="Close"><i class="fa fa-times"></i></div><div class="item" @click="npmList" title="Search from NPM"><i class="fa fa-book-open"></i></div><div class="item" @click="loadCachedList" style="{{firstInit ? \'\' : \'display: none\'}}" title="Load cached list"><i class="fa fa-boxes"></i></div></div></sf-m></div>',on:{coming(){_editorModuleURL.sortURL()}}},{path:"/npm-package-info",html:'<sf-m name="npm-package-info"><div class="title">{{title}} (v{{version}})</div><div class="info"><span>{{author}}</span> <a style="display: {{repository ? \'\' : \'none\'}}" href="{{repository}}" target="_blank">(Repository)</a></div><div class="description">{{description}}</div><div class="list-info">Please select module to import:</div><div class="list"><div class="item {{x.active || \'\'}}" sf-each="x in list" @click="load(x)">{{x.url}} <i class="{{x.active === \'loading\' ? \'fa fa-spinner fa-spin\' : \'\'}}"></i></div></div><div class="menu"><div class="item" @click="back" title="Back"><i class="fa fa-reply"></i></div></div></sf-m>'},{path:"/npm-packages",html:'<sf-m name="npm-packages"><div class="description">Search package on NPM registry <i class="{{loading ? \'fa fa-spinner fa-spin\' : \'\'}}"></i></div><div class="mini-description" title="Please verify the author trustworthiness before using their module. If you\'re not a developer, always becareful if someone ask you to do something with Blackprint, like inputting password or private key.">These modules is contributed by the community <a @click="reportClick">(click here to report)</a></div><div class="search"><input type="text" sf-bind="search" @keyup.enter="refreshList" placeholder="Search..."></div><div class="list"><div class="item {{x.package._active ? \'active\' : \'\'}} {{x.package._update ? \'update\' : \'\'}}" sf-each="x in list" @click="open(x.package)"><div><div class="title">{{x.package.name}} <span>(v{{x.package.version}})</span></div><div class="author">{{x.package.publisher.username}}</div></div><div><div class="description">{{x.package.description}}</div><div class="date">{{x.package.date.split(\'T\')[0]}}</div></div></div></div></sf-m>'},{path:"/remote-engine-connect",html:'<sf-m name="modal-remote-engine-connect"><div class="description">Please set the remote engine URL</div><div class="note" style="display: {{url === \'\' || url === placeholder ? \'none\':\'\'}}" @click="connectDefault">(Click here to connect to default localhost server)</div><div class="text-input"><input placeholder="{{placeholder}}" type="text" sf-bind="url" @keyup.enter="changeServer(false, true)"></div><div class="button-import" @click="changeServer(false, true)">Connect</div></sf-m>',on:{coming(){setTimeout(()=>{sf.model("modal-remote-engine-connect").$el("input").focus()},500)},showed(){setTimeout(()=>{sf.model("modal-remote-engine-connect").$el("input").focus()},100)}}},{path:"/remote-sketch-connect",html:'<sf-m name="modal-remote-sketch-connect"><div class="description">Please set the remote sketch\'s relay URL</div><div class="note" style="display: {{url === \'\' || url === placeholder ? \'none\':\'\'}}" @click="connectDefault">(Click here to connect to default localhost server)</div><div class="text-input"><input placeholder="{{placeholder}}" type="text" sf-bind="url" @keyup.enter="changeServer(false, true)"></div><div class="button-import" @click="changeServer(false, true)">Connect</div></sf-m>',on:{coming(){setTimeout(()=>{sf.model("modal-remote-sketch-connect").$el("input").focus()},500)},showed(){setTimeout(()=>{sf.model("modal-remote-sketch-connect").$el("input").focus()},100)}}},{path:"/remote-sync",html:'<sf-m name="remote-sync"><div class="description">Sync this Editor with Remote Blackprint</div><div class="list">\x3c!--div class="item" @click="puppetNodeList()" title="Use this if the remote module doesn\'t have nodes for Browser, or if you don\'t want to execute external module into this editor">\n\t\t\t<div class="icon"><i class="fa fa-sync-alt"></i></div>\n\t\t\t<div class="content">\n\t\t\t\t<div class="title">Puppet Node List</div>\n\t\t\t\t<div class="description">Replace this editor\'s node list with remote puppet node</div>\n\t\t\t</div>\n\t\t</div--\x3e<div class="item" @click="sendInstance()" title="Remote instance will import the schema from this editor"><div class="icon"><i class="fa fa-upload"></i></div><div class="content"><div class="title">Send remote instance schema</div><div class="description">Export Blackprint schema to remote</div></div></div><div class="item" @click="receiveInstance()" title="Your current schema will be cleared and replaced with remote schema, in case the remote module can\'t be loaded in this browser you will need to import nodes with Puppet Nodes"><div class="icon"><i class="fa fa-download"></i></div><div class="content"><div class="title">Receive remote instance schema</div><div class="description">Import Blackprint schema from remote</div></div></div><div class="item" @click="sendModuleList()" title="Use this if the remote is also using JavaScript, and the modules have support for target environment"><div class="icon"><i class="fa fa-upload"></i></div><div class="content"><div class="title">Send current module list to remote</div><div class="description">Ask remote Blackprint to load module from this editor\'s loaded module list</div></div></div><div class="item" @click="disconnect()"><div class="icon"><i class="fa fa-power-off"></i></div><div class="content"><div class="title">Disconnect</div><div class="description">Disconnect this editor with remote instance</div></div></div></div></sf-m>'},{path:"/sketch-importer",html:'<sf-m name="sketch-importer"><div class="description" title="To avoid any risks if you have stored sensitive data on this editor, make sure you have verify the author of the nodes and the JSON to be imported.">Please verify the author before importing</div><div class="info-modules"><div class="title">These modules will be imported: <span @click="removeModuleList" class="remove-module"><i class="fa fa-trash"></i></span></div><ul class="list"><li class="item" sf-each="x in modules">{{x}}</li></ul></div><div class="info-nodes"><div class="title">These nodes will be used:</div><ul class="list"><li class="item" sf-each="x in nodes">{{x.name}} ({{x.count}})</li></ul></div><div class="info-clear"><div class="title">Please be careful if you saved sensitive data on this editor<br>You can click below to clear the saved data:</div>\x3c!-- Hi! can you contribute for clearing browser data like WebSQL or IndexedDB? --\x3e<div class="button-clear"><div @click="clear.localStorage">Local Storage ({{savedKeys.localStorage.length}})</div><div @click="clear.sessionStorage">Session Storage ({{savedKeys.sessionStorage.length}})</div><br><div @click="clear.environmentVariables">Environment Variables ({{savedKeys.environmentVariables.length}})</div><div @click="clear.sketchPages">Sketch Pages ({{savedKeys.sketchPages.length}})</div></div></div><div class="button-import" @click="importNow">Import Sketch</div></sf-m>'},{path:"/sketch-settings",html:'<sf-m name="sketch-settings"><div class="description">Settings</div><div class="list"><div class="item"><div class="title">Theme:</div><select sf-bind="theme"><option value="default">Default</option><option value="darker">Darker</option></select></div><div class="item"><div class="title">Background:</div><input type="text" sf-bind="background" placeholder="https://..."></div><div class="item" style="display: {{isDevMode ? \'block\' : \'none\'}}"><div class="title">Custom script:</div><input type="text" sf-bind="customScript" placeholder="https://..."></div><div class="item"><div class="title">Hide unused port</div><input type="checkbox" sf-bind="hideUnusedPort"></div><div class="item"><div class="title">Show sketch minimap</div><input type="checkbox" sf-bind="showSketchMinimap"></div><div class="item"><div class="title">Single node execution loop limit</div><input type="number" sf-bind="singleNodeExecutionLoopLimit"></div></div></sf-m>'},{path:"/terms-and-privacy",html:"<sf-m name=\"terms-and-privacy\"><h1>Terms and Privacy</h1><h3>Terms of use:</h3><ul><li>May you do good and not evil.</li><li>May you find forgiveness for yourself and forgive others.</li><li>May you share freely, never taking more than you give.</li></ul><div class=\"small-note\">Adapted from: SQLite's License</div><h3>When you're using this editor:</h3><ul><li>There are no information collected and transmitted from this editor to the maintainer of this editor. There are no telemetry, user registration, or ads created/served by the maintainer.</li><li>This editor is using some third party like GitHub, Algolia, JSDelivr which serve the editor's assets. These services may count the traffic for analytics purposes.</li><li>This editor may store information in your browser's storage like IndexedDB or LocalStorage.</li><li>Environment variables that you input on this editor will be stored on your browser's storage.</li><li>If you're using remote control or remote module, Socket.io may store cookies.</li><li>When you're using workspace feature, this editor may have access to your files for the provided directory.</li></ul><h3>When you're using external modules or custom script:</h3><ul><li>Depends on which CDN you use, the CDN may record the downloaded module for their analytics purpose (like JSDelivr).</li><li>Depends on what module you loaded, the module may can collect information and send to third party, depends on their purposes (like Telegram or Discord module that connect to their datacenter server to send message in their services).</li><li>Be careful if you're didn't recognize and unable to trust/verify the module author as this feature can execute code from the module, just like \"npm install\".</li></ul><h3>When you're using remote control feature:</h3><i>This feature is not enabled by default.</i><ul><li>Node structure, data (may include input/output/environment), cables, loaded modules, name, messages, will be transmitted and synced to the third party. The third party can be the server for collaborating with your friend, or your own server to handle remote control.</li><li>Becareful if you're using this feature with someone you're not recognize and trust, as this is a remote control. You will need to control which data that can be synced to increase security.</li></ul>If you think some information was misleading/outdated or need clarification, feel free to contact the maintainer or do pull request. Last updated: 27 June 2023</sf-m>"}])}
//# sourceMappingURL=custom.sf.js.map