{"version":3,"sources":["custom.sf.css","editor/src/model/tutorial.sf","editor/src/component/SmallNotif.sf","editor/src/component/dropdown.sf","editor/src/component/editor-display-port-value.sf","editor/src/component/project-navigation-bar.sf","editor/src/component/sketch-panel-bottom.sf","editor/src/component/sketch-panel-right.sf","editor/src/component/sketch-panel-left.sf","editor/src/component/tree-list.sf","editor/src/model/Loading.sf","editor/src/model/header.sf","editor/src/model/modal.sf","editor/src/model/project-list.sf","editor/src/routes/body.sf","editor/src/model/project-panel-left.sf","editor/src/model/tooltip.sf","editor/src/routes/+vw-ground/sketch+vw-page/_page.sf","editor/src/component/documentation/docs-md-tabs.sf","editor/src/component/documentation/docs-security-test-vuln.sf","editor/src/model/project-panel-left/workspace.sf","editor/src/routes/+vw-ground/index.sf","editor/src/routes/+vw-ground/sketch.sf","editor/src/routes/+vw-modal/code-generator.sf","editor/src/routes/+vw-modal/custom-node-editor.sf","editor/src/routes/+vw-modal/documentation.sf","editor/src/routes/+vw-modal/dev-mode.sf","editor/src/routes/+vw-modal/environment-variables.sf","editor/src/routes/+vw-modal/example-list.sf","editor/src/routes/+vw-modal/module-example-list-deep.sf","editor/src/routes/+vw-modal/module-example-list.sf","editor/src/routes/+vw-modal/npm-package-info.sf","editor/src/routes/+vw-modal/module-url.sf","editor/src/routes/+vw-modal/npm-packages.sf","editor/src/routes/+vw-modal/remote-engine-connect.sf","editor/src/routes/+vw-modal/remote-sketch-connect.sf","editor/src/routes/+vw-modal/remote-sync.sf","editor/src/routes/+vw-modal/sketch-importer.sf","editor/src/routes/+vw-modal/terms-and-privacy.sf","editor/src/routes/+vw-modal/sketch-settings.sf"],"names":[],"mappings":"AAggCA,A,sBCt+BC,E,CACC,mB,CDy+BA,G,CAAA,E,CCx+BA,WD4+BF,A,qBC1+BC,E,CDi/BC,E,CCh/BA,mB,CD6+BA,G,CC5+BA,oBDhCF,Y,CEwFA,e,CACE,yB,CACA,U,CACA,sC,CAEA,gB,CACA,kC,CACA,0C,CACA,mB,CACA,a,CAEA,kB,CACA,iB,CACA,c,CACA,kB,CACA,Y,CACA,kB,CFvFF,uB,CE0FE,gB,CFvFF,iC,CEyFI,Y,CFtFJ,iB,CE2FE,oB,CACE,gB,CFxFJ,mB,CE4FE,S,CFzFF,yB,CE2FI,uB,CAAA,oB,CAAA,e,CACI,S,CACA,c,CACA,c,CACA,Q,CACA,a,CFxFR,mB,CE6FE,W,CACE,c,CACA,e,CACA,c,CACA,S,CACA,iB,CACA,U,CACA,uB,CACA,U,CFzFJ,iB,CE8FA,a,CACE,c,CACA,Y,CACA,Y,CF3FF,2B,CE8FE,U,CACE,K,CF3FJ,wC,CE8FI,W,CACE,e,CF3FN,0B,CE+FE,M,CACE,K,CF5FJ,uC,CE+FI,U,CACE,oB,CF3FN,W,CEkGE,a,CACE,sC,CACA,oB,CACA,2B,CF9FJ,c,CE2FE,a,CACE,sC,CACA,oB,CACA,2B,CFvFJ,Y,CEoFE,a,CACE,sC,CACA,oB,CACA,2B,CFhFJ,a,CE6EE,a,CACE,sC,CACA,oB,CACA,2B,CF1EJ,c,CG5DA,a,CACC,U,CACA,c,CAEA,sC,CACA,gC,CACA,c,CACG,c,CACA,K,CACA,M,CACA,S,CACA,iB,CACA,e,CH8DJ,qB,CGzDI,iB,CACF,S,CH4DF,oB,CGzDC,Y,CACC,S,CACA,Q,CACA,4B,CACA,sB,CACA,qD,CH4DF,sC,CG1DE,iB,CH0DF,iC,CG1DE,iB,CH6DF,iB,CGzDI,iB,CACC,e,CACA,gB,CH4DL,iB,CGxDC,iB,CACC,uB,CACA,yB,CACA,wB,CACA,e,CACA,gC,CACA,c,CACA,e,CACA,c,CACA,U,CH2DF,0B,CGxDE,wB,CH2DF,4B,CA0nBA,mD,CAvEA,wD,CAvhBA,8C,CA6dA,uB,CGjjBG,a,CH2DH,iC,CGxDG,c,CH2DH,8B,CGtDE,c,CACC,U,CACA,e,CACA,sB,CACA,kB,CHyDH,mB,CGrDE,mB,CHwDF,uB,CGpDE,kB,CHuDF,8B,CGlDC,Q,CACC,iB,CACA,S,CHqDF,wB,CGjDC,iB,CHyDD,iC,CG/CA,S,CHmDA,gB,CG/CA,iB,CACC,M,CACA,K,CACA,U,CACA,W,CACA,yB,CACA,a,CACA,iB,CACA,S,CACA,uB,CHkDD,qB,CG/CC,S,CACC,kB,CHmDF,S,CG9CA,wB,CAAA,qB,CAAA,gB,CHiDA,gB,CG/CC,a,CACC,gB,CACA,iB,CACA,e,CACA,c,CACA,yB,CACA,kB,CACA,U,CACA,kB,CACA,0B,CHkDF,Y,CG/CC,Q,CACC,S,CHkDF,iB,CG/CE,Y,CHkDF,qB,CGhDG,gB,CHmDH,2B,CG9CE,iB,CACC,U,CACA,iB,CHiDH,wB,CAAA,8B,CG7CE,wB,CACC,e,CHgDH,yB,CIrOA,e,CACC,e,CACA,wB,CACA,gC,CACA,kB,CACA,iB,CACA,c,CACA,e,CACA,c,CACA,sB,CACA,a,CACA,e,CJwOD,+B,CIrOC,c,CACC,c,CACA,gB,CACA,e,CACA,0B,CJyOF,iC,CIpOA,U,CJwOA,gC,CIpOA,S,CJuOA,sB,CK9PA,iB,CACC,0B,CLiQD,iC,CK9PC,kC,CACC,iB,CACA,2B,CACA,oB,CACA,e,CACA,U,CACA,c,CLiQF,sC,CK/PE,c,CLkQF,4C,CKhQG,a,CACC,sB,CLmQJ,iD,CK/PE,U,CACC,c,CACA,iB,CACG,kB,CLkQN,mD,CK/PG,U,CLkQH,uC,CKhQE,Y,CLoQF,iD,CK5PE,a,CL+PF,4C,CAsGA,0C,CMxXA,yB,CNsRA,uC,CAsGA,qC,CAmIA,sC,COlfA,iB,CAQC,iC,CACA,Y,CACA,kC,CAEA,kB,CP6PD,uC,CMjRI,Q,CACA,uC,CACH,iB,CACA,Q,CACA,wB,CACA,8B,CNyRD,gD,CMnRC,iB,CACC,sB,CACA,iB,CACA,W,CACA,U,CACA,Y,CACA,mC,CNsRF,yD,CMnRE,kC,CACC,wB,CACA,kB,CACA,W,CACA,e,CACA,c,CACA,c,CACA,Y,CACA,wB,CAAA,qB,CAAA,gB,CNsRH,iE,CMnRG,U,CACC,c,CACA,gB,CACA,c,CACA,c,CACA,c,CNsRJ,0E,CMnRI,U,CN0SJ,kF,CApBA,gF,CMnRK,iB,CNsRL,uE,CMjRI,wB,CNoRJ,yE,CMhRI,2B,CNmRJ,wE,CM/QI,U,CNkRJ,4E,CM9QI,iB,CACC,Y,CACA,U,CN6fL,4B,CAAA,0B,CA5OA,iF,CM9QK,U,CNoRL,6D,CMzQE,W,CACC,iB,CACA,U,CN4QH,+C,CMxQC,c,CACC,W,CACA,Y,CACA,U,CACA,sB,CACA,iB,CACA,K,CN2QF,iD,CMzQE,mC,CACC,iB,CACA,K,CACA,c,CACA,a,CN4QH,8C,CMxQC,2B,CN2QD,uD,CMzQE,kB,CN6QF,qE,CMxQA,iB,CN+QA,qC,CAmIA,sC,CO5eC,W,CPyWD,qC,CQpOC,M,CACA,W,CAEA,6B,CR4OD,8C,CQtOC,mB,CACC,iB,CACA,Y,CACA,yB,CACA,qB,CACA,gB,CRyOF,uD,CQvOE,e,CAEC,gB,CRyOH,6D,CQtOG,yB,CRyOH,iD,CAAA,oD,CAAA,iD,CAAA,gD,CAAA,oD,CQpOC,M,CACC,a,CACA,iB,CACA,W,CACA,kD,CACA,W,CACA,e,CACA,uB,CAAA,kB,CRuOF,yD,CAAA,wD,CAAA,4D,CAAA,2D,CAAA,yD,CAAA,wD,CAAA,wD,CAAA,uD,CAAA,4D,CAAA,2D,CQpOE,oB,CACC,c,CACA,kB,CRuOH,wD,CAAA,2D,CAAA,wD,CAAA,uD,CAAA,2D,CQpOE,a,CACC,e,CRuOH,+D,CAAA,kE,CAAA,+D,CAAA,8D,CAAA,kE,CQpOE,c,CACC,W,CACA,U,CRuOH,yD,CAAA,4D,CAAA,yD,CAAA,wD,CAAA,4D,CQpOE,iB,CACC,W,CRuOH,4D,CAAA,+D,CAAA,4D,CAAA,2D,CAAA,+D,CQpOE,iB,CACC,4B,CACA,e,CACA,a,CACA,c,CRuOH,kF,CASA,sE,CATA,qF,CASA,yE,CATA,kF,CASA,sE,CATA,iF,CASA,qE,CATA,qF,CASA,yE,CQ9OG,Y,CRwOH,gE,CAAA,mE,CAAA,gE,CAAA,+D,CAAA,mE,CQpOE,gB,CRuOF,2D,CAAA,8D,CAAA,2D,CAAA,0D,CAAA,8D,CQpOE,M,CR0OF,uD,CQnOC,oB,CACC,wB,CACA,iB,CRsOF,oD,CQnOC,e,CRsOD,4D,CQlOE,c,CRqOF,4D,CQlOE,W,CACC,e,CRqOH,mE,CQnOG,e,CACC,c,CACA,sB,CRsOJ,0E,CQnOG,U,CRsOH,6C,CQjOC,c,CACC,W,CACA,Y,CACA,kB,CACA,wB,CACA,iB,CACA,W,CRoOF,+C,CQlOE,mC,CACC,iB,CACA,U,CACA,c,CACA,a,CRqOH,4C,CQjOC,wB,CRoOD,qD,CQlOE,kB,CRsOF,mE,CAkEA,oE,CQnSA,iB,CRoOA,2C,COlfA,yB,CPsfA,kD,COlfA,yB,CACC,a,CPsfD,sC,COjfC,Q,CAEA,O,CACA,W,CACA,wB,CAEG,4B,CPwfJ,+C,COjfC,iB,CACC,qB,CACA,U,CACA,K,CACA,iB,CACA,a,CACA,mC,CPofF,4D,COjfE,U,CACC,c,CACA,e,CACA,iB,CPofH,8C,COhfC,c,CACC,W,CACA,Y,CACA,kB,CACA,wB,CACA,iB,CACA,U,CPmfF,gD,COjfE,mC,CACC,iB,CACA,S,CACA,c,CACA,a,CPofH,2C,COhfC,Y,CPmfD,6C,COhfC,wB,CPmfD,sD,COjfE,kB,CPyfF,sB,CAAA,oB,CO5eC,mD,CACC,c,CACA,e,CACA,gB,CPkfF,qB,CAAA,wB,CAAA,mB,CAAA,sB,CO5eC,0B,CACC,U,CACA,Q,CACA,S,CACA,W,CACA,uB,CACA,kB,CP+eF,sB,CSnlBA,Y,CTulBA,U,CSnlBA,iB,CTslBA,oB,CAiBA,qB,CSrmBC,iB,CTulBD,iB,CSplBC,wB,CAAA,qB,CAAA,gB,CACC,c,CTwlBF,6C,CSnlBA,U,CACC,W,CACA,iB,CTulBD,uD,CSnlBA,W,CTylBA,kB,CUxnBA,Y,CACC,kC,CACA,mB,CACA,gB,CACA,kB,CACA,wB,CACA,c,CACA,Q,CACA,U,CACA,U,CACA,W,CV8nBD,wB,CUvnBC,iB,CV0nBD,kB,CW7mBC,Y,CXgnBD,iC,CW7mBC,mB,CXgnBD,Y,CWpnBA,S,CAQC,yB,CACA,iB,CACA,kC,CACA,kB,CACA,4B,CACA,Y,CACA,wB,CXgnBD,yB,CW7mBC,sB,CACC,c,CACA,qB,CACA,iB,CACA,a,CXgnBF,6B,CW9mBE,W,CACC,gC,CAGA,gB,CXinBH,6B,CAPA,6B,CAgiCA,yC,CWvoDE,qB,CACC,oB,CXinBH,2C,CW7mBE,Y,CACC,iB,CACA,W,CACA,U,CXgnBH,iD,CAAA,mC,CW3mBG,a,CX8mBH,2B,CWxmBC,c,CACC,iB,CACA,Y,CACA,W,CX2mBF,qC,CAudA,sB,CAgZA,oC,CAAA,oC,CAAA,oC,CAAA,oC,CAAA,oC,CAAA,oC,CW78CE,c,CX4mBF,qC,CWtmBE,e,CXymBF,yB,CAwEA,U,CW5qBC,Y,CXumBD,oC,CWrmBE,Y,CACC,iB,CACA,O,CACA,Q,CACA,c,CXwmBH,0C,CWtmBG,c,CACC,c,CACA,iB,CXymBJ,iD,CWtmBI,U,CXymBJ,0D,CWrmBI,iB,CACC,Q,CACA,O,CACA,c,CACA,U,CACA,wC,CACA,uB,CACA,kB,CACA,uB,CACA,iB,CACA,e,CACA,W,CACA,c,CXwmBL,sC,CWnmBE,iB,CACC,U,CACA,U,CACA,U,CACA,Q,CACA,c,CXsmBH,sC,CWhmBE,Y,CACC,iB,CACA,Q,CACA,c,CXmmBH,4C,CWjmBG,c,CACC,c,CXomBJ,mD,CWjmBI,U,CXomBJ,yBW7lBC,+B,CACC,Y,CXgmBA,6B,CW5lBA,iBXgmBF,oC,CW1lBE,yB,CXimBF,mC,CWvlBC,e,CX0lBD,U,CY5wBA,6C,CAEC,c,CACA,Y,CACA,K,CACA,O,CACA,Q,CACA,M,CACA,qB,CACA,+H,CACA,wC,CAKA,W,CACA,uB,CACA,iB,CACA,c,CACA,+B,CZ2wBD,e,CYxwBC,Y,CACC,kC,CZ2wBF,6B,CYzwBE,S,CZ4wBF,wB,CYvwBC,Y,CACC,kB,CACA,S,CACA,a,CACA,U,CACA,iB,CACA,mB,CACA,iB,CACA,qB,CACA,c,CZ0wBF,uB,Ca7yBA,mB,CACC,Y,CACA,c,CACA,yB,CACA,e,CACA,a,CbgzBD,mC,Ca7yBC,iB,CACC,mB,CACA,Q,CACA,wC,CACA,oD,CACA,qD,CACA,c,CACA,gB,CACA,W,CACA,e,CbgzBF,qC,Ca7yBE,c,CACC,iB,CbgzBH,0C,CAAA,8C,Ca7yBE,iB,CACC,S,CbgzBH,gD,CAAA,oD,Ca7yBG,wC,CACC,mC,CACA,kB,CbgzBJ,8C,Ca5yBE,a,CACC,gB,CACA,S,Cb+yBH,0C,Ca5yBE,mB,Cb+yBF,wC,Ca5yBE,e,CACC,c,CACA,kB,CACA,e,Cb+yBH,0C,Ca5yBE,wC,CACC,mC,Cb+yBH,mC,Ca1yBC,oB,CACC,c,CACA,qB,Cb6yBF,yC,CA0BA,mD,CAHA,kD,Cah0BE,U,Cb4yBF,6B,CAoQA,S,CcxkCA,iB,CAIC,yB,Cdg0BD,6B,Cej2BC,S,Cfs2BD,oC,Cep2BC,U,CACC,W,CACA,iB,CACA,S,CACA,kC,CACA,4C,Cfu2BF,4C,Cep2BE,iB,CACC,c,CACA,Y,CACA,iB,CACA,c,Cf62BH,8D,Cet2BI,iB,CACC,gB,CACA,wC,CACA,W,CACA,S,CACA,iB,CACA,4B,Cfy2BL,oD,Cer2BG,sC,CACC,c,CACA,e,CACA,U,CACA,kB,CACA,iB,CACA,S,CACA,U,Cfw2BJ,yD,CA4BA,8C,Cel4BI,Y,Cfy2BJ,yD,Cex2BI,uC,Cf22BJ,2D,Ce12BI,uC,Cf62BJ,wD,Ce52BI,sC,Cf+2BJ,2D,Ce92BI,uC,CAAW,U,Cfk3Bf,0D,Cej3BI,sC,CAAU,U,Cfq3Bd,qC,Cej3BC,iB,CACC,S,CACA,W,Cfo3BF,yC,CA0XA,O,Ce5uCE,W,Cfy3BF,Y,Cel3BA,wB,CACC,gB,Cfq3BD,kB,CgB56BA,iB,CACC,kC,CACA,mB,CACA,e,CACA,iB,CACA,uB,CACA,c,CACA,Q,CACA,S,CACA,a,CACA,S,CACA,W,CACA,8B,ChB+6BD,wB,CgB56BC,U,CACC,c,ChB+6BF,2B,CAAA,sB,CAAA,wB,CgB36BC,U,ChB86BD,gC,CAAA,2B,CAAA,6B,CgB56BE,e,CACC,kB,ChB+6BH,gC,CAAA,2B,CgB16BC,U,ChB66BD,6B,CgBz6BC,Y,ChB46BD,wB,CgBx6BC,oB,ChB26BD,uB,CgBt6BC,kB,CACC,S,ChBy6BF,wB,CgBr6BC,iB,ChBw6BD,kC,CgBn6BE,c,ChBs6BF,iC,CgBl6BE,U,CACC,oB,ChBq6BH,oC,CgBj6BE,a,CACC,oB,ChBo6BH,mB,CCx+BA,U,CAGC,Y,CD4/BD,gC,CC/+BC,S,CACC,c,CACA,K,CACA,M,CACA,uB,CACA,mB,CDk/BF,6C,CCh/BE,c,CACC,W,CACA,Y,CACA,yB,CDm/BH,uC,CCh/BE,c,CACC,W,CACA,Y,CACA,kB,CACA,iB,CACA,kB,CACA,2I,CDm/BH,kC,CC/+BC,c,CACC,K,CACA,M,CACA,W,CACA,mB,CACA,a,CDk/BF,yC,CCh/BE,c,CACC,U,CACA,W,CACA,gB,CACA,e,CDm/BH,gD,CCj/BG,U,CACC,iB,CACA,a,CACA,U,CACA,W,CACA,iB,CACA,gB,CACA,kB,CACA,wB,CACA,gE,CDo/BJ,+C,CCj/BG,U,CACC,iB,CACA,K,CACA,a,CACA,U,CACA,W,CACA,8C,CACA,kB,CACA,uB,CACA,uE,CDo/BJ,2C,CCh/BE,c,CACC,c,CACG,U,CACA,kC,CACA,4C,CACA,kB,CACA,e,CACA,uB,CACA,gB,CDo/BN,kC,CC9+BA,iC,CDi/BA,gB,CcxkCA,c,CACC,K,CACA,M,Cd2kCD,qB,CczkCC,c,CACC,U,CACA,wB,CACA,mB,CACA,gC,CACA,U,CACA,W,Cd4kCF,sB,CAm4CA,yC,CiBn5EC,+C,CACC,qB,CAIA,U,CACA,W,CjB0gCF,sB,CczkCC,U,CACC,c,CAEA,wB,CAGA,gC,CAEA,sB,Cd6kCF,S,CcvkCC,e,CACA,a,CACA,Q,CAEA,W,Cd4kCD,yBcxkCA,U,CACC,iBd4kCD,I,CAmNA,kC,CAnNA,Q,CcvkCA,e,CAAA,a,CAAA,U,Cd0kCA,Y,CkBtoCA,a,CACC,kC,CACA,Y,CACA,kB,CACA,qB,CACA,2C,ClByoCD,kB,CkBvoCC,Y,CACC,gB,CACA,4B,CACA,mB,CACA,W,CACA,wC,CACA,iB,ClB6oCF,8B,CkBxoCE,U,CACC,2B,ClB2oCH,kB,CAkDA,+E,CAGA,mE,CkB5rCC,Y,ClB0oCD,wB,CkBvoCC,a,ClB0oCD,yB,CAAA,uB,CmBtqCA,a,CACC,Y,CACA,kB,CACA,kC,CACA,6C,CACA,2B,CnByqCD,kC,CoBzpCA,kB,CACC,W,CpB4pCD,8C,CoB1pCC,a,CACC,iB,CACA,W,CACA,iC,CACA,W,CpB6pCF,sD,CAAA,qD,CoBzpCE,oB,CACC,c,CACA,kB,CpB4pCH,qD,CoBzpCE,a,CACC,e,CpB4pCH,4D,CoBzpCE,c,CACC,W,CACA,U,CpB4pCH,sD,CoBzpCE,iB,CACC,W,CpB4pCH,yD,CoBzpCE,iB,CACC,4B,CACA,e,CACA,a,CACA,c,CpBkqCH,+C,CoBrpCC,iB,CACC,Q,CACA,iB,CACA,c,CACA,W,CACA,U,CACA,wB,CAAA,qB,CAAA,gB,CpB2pCF,qD,CoBppCC,W,CACC,qD,CpBupCF,a,CqBjpCA,U,CACC,iB,CACA,c,CrBopCD,0B,CqBjpCC,oB,CrBopCD,sB,CqBhpCC,e,CACC,U,CACA,mB,CrBmpCF,4B,CqBhpCE,Y,CACC,W,CACA,gB,CACA,c,CACA,kB,CACA,uB,CACA,wB,CACA,kC,CrBmpCH,+B,CqB9oCC,Q,CACC,W,CACA,M,CACA,iB,CrBipCF,2C,CqB9oCE,U,CAAA,oB,CAOC,U,CACA,Y,CrByoCH,+C,CqB/oCG,c,CACC,8B,CrBupCJ,uC,CqB/oCE,gC,CrBmpCF,a,CAeA,c,CqB7oCA,Y,CACC,iB,CACA,a,CACA,Q,CrB2nCD,a,CqBzoCC,S,CrBgpCD,e,CqB9oCC,gB,CrBipCD,qB,CAgBA,sB,CqB9pCC,U,CACC,wB,CrBkpCF,c,CqBzoCC,U,CACA,gB,CrBgpCD,gB,CqB9oCC,e,CrBqpCD,O,CsBxxCA,iB,CAEC,U,CtB2xCD,oB,CsBxxCC,K,CtB2xCD,yB,CuB/xCA,kB,CACC,kB,CACA,qB,CACA,iB,CACA,yB,CACA,W,CvBkyCD,+B,CAyQA,qC,CA3WA,oD,CuB9rCC,Y,CvBmyCD,gC,CuBhyCC,Y,CACC,U,CACA,kB,CACA,uB,CvBmyCF,oC,CuBjyCE,c,CACC,a,CACA,e,CACA,oB,CACA,kB,CvBoyCH,kC,CuBhyCC,qB,CACC,a,CACA,c,CvBmyCF,kC,CuBhyCC,e,CACC,uB,CACA,Y,CACA,U,CACA,kB,CACA,Q,CACA,S,CACA,iB,CACA,Y,CAEA,kB,CvBmyCF,qC,CuBhyCC,Y,CvBmyCD,2C,CuBjyCE,e,CACC,e,CACA,kB,CACA,U,CvBoyCH,iD,CuBlyCG,0B,CvBqyCH,qC,CuBhyCC,e,CACC,U,CACA,W,CACA,gB,CACA,qB,CACA,S,CvBmyCF,0C,CuBhyCC,c,CACC,iC,CACA,Y,CACA,a,CACA,c,CACA,gB,CvBmyCF,2C,CAAA,6C,CuBhyCC,iB,CACC,U,CACA,mB,CACA,kB,CACA,kB,CACA,qB,CACA,c,CACA,uB,CvByxCF,6C,CuBnxCC,U,CvB6xCD,iD,CAAA,mD,CuBjyCE,kB,CvBuyCF,iC,CuB/xCC,oB,CACC,U,CACA,kC,CACA,c,CACA,iB,CACA,W,CACA,U,CACA,qB,CvBkyCF,uC,CuBhyCE,qC,CACC,0B,CvBmyCH,6B,CwBl5CC,kB,CxBw5CD,qC,CwBn5CC,U,CACC,e,CACA,W,CxBs5CF,mC,CwBl5CC,iB,CACC,O,CACA,K,CACA,iB,CxBq5CF,yC,CwBn5CE,c,CACC,W,CACA,U,CACA,W,CACA,W,CACA,qB,CACA,kB,CACA,kC,CACA,U,CACA,uB,CxBy3CH,6B,CA6EA,wB,CAhDA,yB,CyBl6CA,kB,CACC,qB,CACA,iB,CzBg6CD,yB,C0Bl7CC,kB,CAGA,yB,C1Bs7CD,sC,C0Bp7CC,Y,CACC,U,C1Bu7CF,+B,C0Bp7CC,iB,CACC,c,CACA,S,CACA,U,CACA,gB,CACA,c,C1Bu7CF,qC,C0Bp7CC,Y,CACC,iB,CACA,Y,C1Bu7CF,2C,C0Bp7CE,U,CACC,qB,CACA,kB,CACA,W,CACA,U,CACA,S,C1Bu7CH,wC,C0Bn7CC,iB,CACC,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CACA,iB,CACA,c,CACA,U,C1Bs7CF,8C,C0Bp7CE,kB,CACC,0B,C1Bu7CH,wB,CyB/8CC,yB,CACA,U,CACA,W,CACA,e,CzBq9CD,+B,CyBn9CC,U,CACC,e,CACA,c,CACA,iB,CACA,qB,CACA,U,CACA,e,CACA,uB,CACA,S,CzBs9CF,+B,CyBn9CC,iB,CACC,O,CACA,K,CACA,U,CACA,iB,CACA,kB,CACA,U,CACA,c,CACA,e,CzBs9CF,mC,CyBn9CC,Y,CACC,W,CzBs9CF,oC,CAAA,qC,CyBn9CC,W,CACC,e,CADD,S,CAOC,e,CACA,kB,CACA,uB,CzB88CF,2C,CAAA,4C,CyBp9CE,c,CACC,e,CzB69CH,oC,CyBr9CC,oB,CACC,wB,CzBw9CF,iC,CyBr9CC,iB,CACC,gB,CACA,S,CACA,a,CACA,e,CACA,U,CzB29CF,0C,CAAA,0C,CAAA,0C,CAAA,0C,CAAA,0C,CAAA,0C,CyBv9CG,U,CACC,iC,CzB09CJ,gD,CAAA,gD,CAAA,gD,CAAA,gD,CAAA,gD,CAAA,gD,CyBx9CI,gB,CACC,c,CACA,iC,CACA,e,CACA,W,CAEA,qB,CzB09CL,mC,CyBr9CE,a,CACC,yB,CzBw9CH,yC,CyBr9CE,a,CACC,wB,CzBw9CH,8C,CyBp9CE,iB,CACC,Q,CACA,U,CACA,kB,CACA,e,CACA,kB,CACA,c,CzBu9CH,mC,CyBn9CC,c,CzBy9CD,0C,CyBn9CE,c,CACC,e,CACA,e,CzBs9CH,qD,CyBl9CE,a,CzBq9CF,6C,CAAA,iD,CyBj9CC,a,CACC,wD,CACA,wB,CzBo9CF,6C,CyBj9CC,U,CACC,c,CACA,kB,CACA,e,CACA,sB,CACA,c,CzBo9CF,+B,CyBj9CC,gB,CzBo9CD,+B,CyBn9CC,gB,CzBs9CD,+B,CyBr9CC,gB,CzBw9CD,+B,CyBv9CC,gB,CzB09CD,+B,CyBz9CC,gB,CzB+9CD,yByBz9CC,qC,CACC,Y,CzB49CA,oC,CyBz9CA,WzB69CF,mC,CyBx9CC,kB,CACC,U,CACA,Y,CACA,gB,CACA,iB,CzB29CF,qC,CyBz9CE,Q,CzB49CF,0C,CyB19CG,kC,CzB69CH,4C,CyB19CG,U,CzB69CH,+B,CyBv9CC,U,CACC,wB,CzB09CF,8B,CyBt9CC,e,CACC,8C,CACA,iB,CACA,W,CAiCD,c,CACC,a,CACA,a,CzBs7CF,iC,CyBv9CE,wB,CzB09CF,4B,CyBr9CC,kC,CACC,qB,CACA,W,CACA,iB,CACA,a,CzBy6CF,4B,CAkDA,8B,CyBn9CC,c,CACC,kB,CzBs9CF,gC,CAAA,+B,CAAA,gC,CAWA,gC,CyB59CE,yB,CACC,mB,CACA,iB,CACA,kB,CzBy9CH,gC,CyB18CE,a,CACA,qB,CzBi9CF,oC,CyB/8CE,iB,CACC,a,CzBm9CH,kC,CyB58CC,e,CzB+8CD,kC,CyB58CC,c,CACC,iB,CzB+8CF,yC,CyB78CE,W,CACC,iC,CAEA,kB,CACA,W,CzBi9CH,wC,CyB78CE,gC,CzBg9CF,gC,CAiEA,uB,CA6BA,mC,C2BxxDA,kB,CACC,kB,CACA,qB,CACA,iB,C3B6rDD,uC,C2B1rDC,iB,CACC,e,CACA,W,CACA,U,CACA,e,CACA,kB,CACA,4B,CACA,yB,CACA,c,C3B6rDF,sC,C2BzrDC,iB,CACC,Y,CACA,kC,C3B4rDF,2C,C2B1rDE,U,CACC,oB,CACA,S,CACA,sB,CACA,c,C3B6rDH,8C,C2BvrDE,Y,C3B0rDF,sD,C2BxrDG,U,CACC,oB,CACA,S,CACA,W,CACA,sB,C3B2rDJ,oD,C2BvrDG,U,CACC,kC,CACA,Q,C3B0rDJ,sC,C2BprDC,iB,CACC,O,CACA,K,CACA,iB,CACA,Y,C3BurDF,4C,C2BrrDE,c,CACC,W,CACA,U,CACA,W,CACA,qB,CACA,kB,CACA,qC,CACA,U,CACA,uB,C3BwrDH,iD,C2BtrDG,Y,C3ByrDH,uB,CA6BA,mC,C4BpyDC,yB,C5B8wDD,oC,C4B5wDC,Y,CACC,U,C5B+wDF,sC,CAuDA,kD,CAmDA,6C,CA4IA,mC,CAmBA,oC,C4BthEE,a,C5BgxDF,6B,C4B5wDC,W,C5B+wDD,mC,C4B7wDE,U,CACC,kC,CACA,c,CACA,iB,CACA,W,CACA,U,CACA,qB,C5BgxDH,yC,C4B9wDG,kC,C5BwxDH,gD,C6B/xDC,Y,CACC,e,CACA,W,CACA,4B,C7BkyDF,sD,C6BhyDE,W,CACC,U,CACA,U,CACA,c,CACA,iB,C7BmyDH,+D,C6BjyDG,a,C7BoyDH,mD,C6B9xDC,iB,CACC,e,CACA,c,CACA,gB,CACA,c,C7BiyDF,gD,C6B9xDC,e,CACC,Y,CACA,U,CACA,iB,CACA,uB,C7BoyDF,yC,C6B9xDC,W,C7BiyDD,+C,C6B/xDE,U,CACC,kC,CACA,c,CACA,iB,CACA,W,CACA,U,CACA,qB,C7BkyDH,qD,C6BhyDG,kC,C7BmyDH,yC,C6B7xDC,iB,CACC,U,CACA,S,CACA,iB,C7BgyDF,+C,C6B9xDE,c,CACC,W,CACA,U,CACA,W,CACA,W,CACA,qB,CACA,kB,CACA,kC,CACA,U,CACA,wB,C7BiyDH,8B,C8Bx2DC,Y,CACA,yB,C9B+2DD,2C,C8B72DC,Y,CACC,U,CACA,iB,CACA,kC,CACA,4B,C9Bm3DF,yC,C8B72DC,Y,C9Bg3DD,iD,C8B92DE,U,CACC,U,CACA,kC,CACA,Q,CACA,W,CACA,S,C9Bi3DH,yD,C8B/2DG,qB,C9Bk3DH,oC,C8B72DC,W,C9Bg3DD,0C,C8B92DE,U,CACC,kC,CACA,c,CACA,kB,CACA,e,CACA,U,CACA,mC,C9Bi3DH,gD,C8B/2DG,wC,C9Bm0DH,8B,CA+CA,qB,CA+FA,2B,C+Bx/DA,kB,CACC,kB,CACA,qB,CACA,iB,C/Bs5DD,qB,CgCp3DC,e,ChC23DD,2B,CgCx3DC,kB,CACC,iB,CACA,Y,CACA,kC,ChC23DF,gC,CgCz3DE,U,CACC,oB,CACA,sB,CACA,c,ChC43DH,oC,CgC13DG,S,ChC63DH,sC,CgC13DG,S,ChC63DH,wC,CgC13DG,S,ChC63DH,mC,CgCt3DE,kC,CACC,Y,ChCy3DH,2C,CgCv3DG,a,CACC,oB,CACA,S,CACA,W,CACA,sB,ChC03DJ,+C,CgCx3DI,S,CACC,e,CACA,kB,CACA,mB,CACA,W,CACA,c,ChC23DL,iD,CgCz3DK,gB,CACC,a,ChC43DN,mD,CgCz3DK,iB,CACC,mB,ChC43DN,iD,CgCx3DI,W,ChC23DJ,mD,CgCx3DI,S,ChC23DJ,qD,CgCx3DI,U,CACC,U,CACA,kC,CACA,Q,ChC23DL,8C,CgCr3DG,Q,CACC,c,CACA,a,CACA,oB,CACA,c,ChCw3DJ,8C,CgCr3DG,4B,ChCw3DH,2B,CgCl3DC,iB,CACC,W,CACA,S,CACA,iB,ChCq3DF,iC,CgCn3DE,c,CACC,W,CACA,U,CACA,W,CACA,W,CACA,wB,CACA,kB,CACA,kC,CACA,U,CACA,uB,ChCs3DH,2B,C+Bp/DC,yB,C/B2/DD,iC,C+Bz/DC,Y,CACC,U,CACA,c,CACA,gB,C/B+/DF,wC,C+Bz/DC,U,CACC,c,C/B4/DF,sC,C+Bz/DC,e,CACC,0B,CACA,kB,C/B4/DF,kC,C+Bz/DC,Y,CACC,iB,CACA,U,CACA,e,CACA,yB,C/B+/DF,sC,C+Bx/DC,U,C/B2/DD,iC,C+Bv/DC,W,C/B0/DD,uC,C+Bx/DE,U,CACC,kC,CACA,c,CACA,iB,CACA,W,CACA,U,CACA,qB,C/B2/DH,6C,C+Bz/DG,kC,C/B4/DH,8C,C+Bx/DG,U,C/B2/DH,+C,C+Bx/DG,a,C/B2/DH,iC,C+Br/DC,iB,CACC,U,CACA,S,CACA,iB,C/Bw/DF,uC,C+Bt/DE,c,CACC,W,CACA,U,CACA,W,CACA,W,CACA,qB,CACA,kB,CACA,kC,CACA,U,CACA,uB,C/By/DH,uB,CiC1jEC,W,CjCkkED,oC,CiC/jEC,U,CACC,iB,CACA,U,CACA,kB,CjCkkEF,yC,CiC/jEC,Y,CACC,U,CACA,c,CACA,gB,CACA,iB,CjCkkEF,2C,CiChkEE,U,CACC,c,CjCmkEH,oC,CiC/jEC,iB,CACC,Y,CACA,U,CjCkkEF,sC,CAkKA,qC,CA+CA,yC,CiCjxEE,a,CjCmkEF,+B,CiC/jEC,a,CjCglED,mC,CAdA,qC,CiCljEE,U,CACC,kC,CAEA,iB,CACA,W,CACA,U,CACA,qB,CjC4iEH,qC,CiC1jEG,uB,CjCmkEH,6B,CiC/jEC,W,CACC,e,CACA,sB,CjCkkEF,mC,CiC9jEG,c,CjCukEH,yC,CiCjkEG,kC,CjCokEH,0C,CiChkEG,U,CjCmkEH,0C,CiC/jEG,e,CACC,yB,CjCkkEJ,gD,CiC/jEG,e,CACC,e,CACG,wB,CACA,kB,CACA,sB,CjCkkEP,2C,CiC/jEG,W,CACC,gB,CjCkkEJ,yC,CiC/jEG,W,CACC,qB,CACA,gB,CjCkkEJ,sC,CAgDA,sC,CArIA,uB,CAqLA,sB,CkCjwEA,kB,CACC,kB,CACA,qB,CACA,iB,CACA,yB,ClCoqED,mD,CkClqEC,Y,CACC,U,ClCqqEF,4C,CkClqEC,iB,CACC,c,CACA,S,CACA,U,CACA,gB,CACA,c,ClCqqEF,kD,CkClqEC,Y,CACC,iB,CACA,Y,ClCqqEF,wD,CAgDA,wD,CkCltEE,U,CACC,qB,CACA,kB,CACA,W,CACA,U,CACA,S,ClCqqEH,qD,CkCjqEC,iB,CACC,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CACA,iB,CACA,c,CACA,U,ClCoqEF,2D,CAgDA,2D,CkCltEE,kB,CACC,0B,ClC4qEH,mD,CmCltEC,Y,CACC,U,CnCqtEF,4C,CmCltEC,iB,CACC,c,CACA,S,CACA,U,CACA,gB,CACA,c,CnCqtEF,kD,CmCltEC,Y,CACC,iB,CACA,Y,CnC6tEF,qD,CmCjtEC,iB,CACC,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CACA,iB,CACA,c,CACA,U,CnC+tEF,mC,CoCluEC,Y,CACC,U,CpCwuEF,4B,CoCluEC,W,CpCquED,kC,CoCnuEE,U,CACC,kC,CACA,c,CACA,iB,CACA,W,CACA,U,CACA,qB,CpCsuEH,wC,CoCpuEG,kC,CpCuuEH,wC,CoCnuEG,U,CACC,sB,CpCsuEJ,2C,CoCnuEG,oB,CpCsuEH,+C,CoCluEG,c,CACC,U,CpCquEJ,0B,CqCzwEA,qC,CAKC,U,CACA,c,CrC4wED,uC,CqC1wEC,Y,CACC,e,CACA,U,CACA,iB,CACA,kB,CACA,yB,CACA,kB,CrCgxEF,wC,CAAA,sC,CqC1wEC,kC,CACC,W,CACA,kB,CACA,c,CrC6wEF,+C,CAAA,6C,CqC3wEE,U,CrC8wEF,yC,CqC1wEC,c,CrC6wED,+C,CqC3wEE,U,CrC8wEF,sC,CqC1wEC,e,CrCgxED,gC,CqC1wEC,uB,CACC,Y,CACA,c,CACA,e,CACA,oB,CrC6wEF,wC,CAVA,6C,CqChwEC,iB,CrC6wED,4C,CqC3wEE,oB,CACC,U,CACA,sB,CACA,W,CACA,kC,CACA,kB,CACA,c,CrC8wEH,kD,CqC5wEG,qC,CACC,0B,CrC+wEJ,yC,CqC1wEC,iB,CACC,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CACA,iB,CACA,c,CrC6wEF,+C,CqC3wEE,kB,CACC,0B,CrC8rEH,0B,CAgFA,0B,CAkCA,4B,CsC73EC,kB,CAEA,qB,CACA,iB,CACA,yB,CtCu1ED,0B,CuCj2EA,kB,CvCw2EA,uC,CuCl2EC,W,CACC,U,CACA,4B,CACA,e,CvCq2EF,gC,CuCl2EC,W,CvCq2ED,sC,CuCn2EE,U,CACC,kC,CACA,qB,CACA,W,CACA,U,CvCs2EH,6C,CuCp2EG,c,CACC,iB,CvCu2EJ,4C,CAAA,6C,CuCp2EG,e,CACC,Q,CACA,U,CACA,S,CACA,W,CvCu2EJ,4B,CsCh4EA,e,CACC,U,CACG,Y,CAEH,e,CtCs4ED,+B,CsCh4EC,Q,CACC,wB,CtCm4EF,+B,CsCh4EC,kB,CtCm4ED,wC,CsCh4EC,c,CACC,a,CtCm4EF,4B,CiBh6EC,W,CACC,Y,CACA,iB,CACA,K,CACA,O,CACA,e,CACA,gD,CACA,wC,CACA,kB,CjBm6EF,iD,CiBh6EE,mB,CA4BA,a,CjBu4EF,mC,CiB/5EE,Y,CjBk6EF,gC,CiB75EC,iB,CjBg6ED,0B,CiB55EC,gB,CACC,W,CACA,mC,CACA,c,CACA,iB,CACA,K,CACA,M,CACA,kC,CACA,0C,CACA,kB,CACA,oB,CjB+5EF,+C,CiB15EE,a,CjB65EF,2B,CiBx5EC,iB,CACC,Q,CACA,a,CACA,U,CACA,Y,CACA,iB,CjB25EF,uC,CAAA,qC,CAAA,sC,CiBt5EE,yB,CACC,wB,CjBy5EH,yBiBp5EC,2B,CACC,cjBw5EF,yC,CiBj5EE,sB,CACA,0B,CACA,U,CAGA,iB","file":"custom.sf.css","sourcesContent":[".notify-base {\n  font-weight: bold;\n  padding: 6px 18px 6px 14px;\n  color: #222;\n  background-color: rgba(255, 255, 255, 0.97);\n  border: 1px solid;\n  border-color: rgba(255, 255, 255, 0.97);\n  box-shadow: 0 0 7px 0px rgba(255, 255, 255, 0.97);\n  border-radius: 500px;\n  min-width: 51%;\n  white-space: nowrap;\n  position: relative;\n  max-width: 100%;\n  margin: 10px 10px 0 10px;\n  display: flex;\n  align-items: center;\n}\n.notify-base .item-icon {\n  margin-right: 4px;\n}\n.notify-base .item-icon.hide-icon {\n  display: none;\n}\n.notify-base span {\n  white-space: pre-line;\n  margin-right: 5px;\n}\n.notify-base button {\n  outline: none;\n}\n.notify-base button.close {\n  appearance: none;\n  padding: 0;\n  cursor: pointer;\n  background: 0 0;\n  border: 0;\n  width: inherit;\n}\n.notify-base .close {\n  float: right;\n  font-size: 23px;\n  font-weight: 700;\n  line-height: 0.8;\n  right: 6px;\n  position: absolute;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: 0.2;\n}\n\n.notify-container {\n  max-width: 95%;\n  position: fixed;\n  z-index: 9999;\n  display: grid;\n}\n.notify-container.right-top {\n  right: 10px;\n  top: 0;\n}\n.notify-container.right-top .notify-base {\n  float: right;\n  margin: 10px 0 0 0;\n}\n.notify-container.left-top {\n  left: 0;\n  top: 0;\n}\n.notify-container.left-top .notify-base {\n  float: left;\n  margin: 10px 0 0 10px;\n}\n\n.notify-red {\n  color: #B94A48;\n  background-color: rgba(242, 222, 222, 0.97);\n  border-color: #EED3D7;\n  box-shadow: 0 0 5px 0px #EED3D7;\n}\n\n.notify-yellow {\n  color: #C09853;\n  background-color: rgba(252, 248, 227, 0.97);\n  border-color: #FBEED5;\n  box-shadow: 0 0 5px 0px #FBEED5;\n}\n\n.notify-blue {\n  color: #3A87AD;\n  background-color: rgba(217, 237, 247, 0.97);\n  border-color: #BCE8F1;\n  box-shadow: 0 0 5px 0px #BCE8F1;\n}\n\n.notify-green {\n  color: #468847;\n  background-color: rgba(223, 240, 216, 0.97);\n  border-color: #D6E9C6;\n  box-shadow: 0 0 5px 0px #D6E9C6;\n}\n.dropdown-menu {\n  z-index: 10000;\n  opacity: 0.9;\n  margin-top: 7px;\n  background-color: rgba(255, 255, 255, 0.96);\n  box-shadow: 1px 1px 11px 3px black;\n  border: inherit;\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding: 0;\n  border-radius: 3px;\n  background: white;\n}\n.dropdown-menu.hidden {\n  visibility: hidden;\n  opacity: 0;\n}\n.dropdown-menu input {\n  display: none;\n  outline: none;\n  border: none;\n  border-bottom: 1px solid black;\n  width: calc(100% - 4px);\n  font-family: \"Nunito\", sans-serif, \"Font Awesome 5 Free\";\n}\n.dropdown-menu input::placeholder {\n  text-align: center;\n}\n.dropdown-menu ul {\n  overflow-x: hidden;\n  overflow-y: auto;\n  max-height: 300px;\n}\n.dropdown-menu li {\n  position: relative;\n  vertical-align: baseline;\n  display: inherit !important;\n  padding: 8px 16px 8px 8px;\n  min-width: 110px;\n  border-bottom: 1px dashed darkgray;\n  font-size: 16px;\n  max-width: 400px;\n  cursor: pointer;\n  color: black;\n}\n.dropdown-menu li.has-desc {\n  padding: 2px 16px 2px 8px;\n}\n.dropdown-menu li.has-desc a {\n  display: block;\n}\n.dropdown-menu li.has-desc .title {\n  font-size: 14px;\n}\n.dropdown-menu li .description {\n  font-size: 12px;\n  color: gray;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.dropdown-menu li > * {\n  pointer-events: none;\n}\n.dropdown-menu li:hover {\n  background: lightgray;\n}\n.dropdown-menu ul li .has-deep {\n  top: 11px;\n  position: absolute;\n  right: 5px;\n}\n.dropdown-menu li > a > span {\n  padding-right: 6px;\n}\n\nsf-m[name=dropdown].has-search > drop-down > input {\n  display: block;\n}\n\ndrop-down.dropdown-menu drop-down {\n  opacity: 1;\n}\n\n.ground-backdrop {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.4);\n  z-index: 10000;\n  visibility: hidden;\n  opacity: 0;\n  transition-duration: 0.2s;\n}\n.ground-backdrop.show {\n  opacity: 1;\n  visibility: visible;\n}\n\ndrop-down {\n  user-select: none;\n}\ndrop-down > .first {\n  display: block;\n  padding: 5px 10px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 16px;\n  text-transform: capitalize;\n  letter-spacing: 1px;\n  color: white;\n  background: #ba2f63;\n  box-shadow: 0 0 5px #d12867;\n}\ndrop-down ul {\n  margin: 0;\n  padding: 0;\n}\ndrop-down ul li a {\n  display: flex;\n}\ndrop-down ul li a div {\n  padding-left: 5px;\n}\ndrop-down ul .dropdown-icon {\n  padding-right: 5px;\n  float: left;\n  align-self: center;\n}\ndrop-down ul li.disabled, drop-down ul li.disabled:hover {\n  cursor: default !important;\n  background: #888;\n}\neditor-display-port-value {\n  background: black;\n  padding: 1px 5px;\n  border: 2px solid #bd8352;\n  box-shadow: inset 0 0 8px #ff9f4c;\n  border-radius: 20px;\n  position: absolute;\n  max-width: 50px;\n  overflow: hidden;\n  font-size: 12px;\n  text-overflow: ellipsis;\n  min-width: 60%;\n  min-height: 12px;\n}\neditor-display-port-value:hover {\n  max-width: 50vw;\n  font-size: 14px;\n  padding: 5px 10px;\n  margin-top: -5px;\n  box-shadow: 0 0 8px #ff9f4c;\n}\n\n.output editor-display-port-value {\n  right: 20px;\n}\n\n.input editor-display-port-value {\n  left: 20px;\n}\nproject-navigation-bar {\n  position: absolute;\n  justify-self: anchor-center;\n}\nproject-navigation-bar .container {\n  background: rgba(0, 0, 0, 0.4588235294);\n  border-radius: 15%;\n  box-shadow: 0 0 5px 2px #000000;\n  padding: 8px 10px 5px 10px;\n  margin-top: -5px;\n  color: grey;\n  max-width: 40vw;\n}\nproject-navigation-bar .container span {\n  cursor: pointer;\n}\nproject-navigation-bar .container span:hover {\n  color: #fff298;\n  text-shadow: 0 0 #f7ff76;\n}\nproject-navigation-bar .container span:last-child {\n  color: white;\n  cursor: default;\n  text-shadow: unset;\n  pointer-events: all;\n}\nproject-navigation-bar .container span:last-child i {\n  color: grey;\n}\nproject-navigation-bar .container .hide {\n  display: none;\n}\n\nsketch-page.left-menu-hide project-navigation-bar {\n  margin-left: 0;\n}\nbody sketch-page > .panels sketch-panel-bottom {\n  backdrop-filter: blur(1px);\n}\n\nsketch-page > .panels sketch-panel-bottom {\n  position: absolute;\n  left: 50%;\n  width: calc(100% - 200px - 240px - 80px);\n  margin-left: -20px;\n  bottom: 0;\n  border: 1px solid #181818;\n  transform: translate(-50%, 90px);\n  transition: 0.3s ease-out transform;\n  display: flex;\n  background: rgba(0, 0, 0, 0.5215686275);\n  align-items: center;\n}\nsketch-page > .panels sketch-panel-bottom .content {\n  visibility: hidden;\n  justify-content: center;\n  text-align: center;\n  height: 80px;\n  width: 100%;\n  padding: 10px;\n  color: rgba(255, 255, 255, 0.5411764706);\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons {\n  background: rgba(0, 0, 0, 0.2901960784);\n  border: 1px solid #747474;\n  border-radius: 50px;\n  height: 24px;\n  text-align: left;\n  margin-top: 5px;\n  padding: 0 10px;\n  display: flex;\n  user-select: none;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button {\n  color: white;\n  font-size: 16px;\n  line-height: 26px;\n  padding: 0 10px;\n  min-width: 70px;\n  cursor: pointer;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button.inactive {\n  color: grey;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button.inactive:hover {\n  text-shadow: unset;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button:hover {\n  text-shadow: 0 0 5px white;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button + .button {\n  border-left: 1px dashed white;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button.active {\n  color: yellow;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button.debug-desc {\n  padding-left: 50px;\n  cursor: unset;\n  color: grey;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button.debug-desc span {\n  color: white;\n}\nsketch-page > .panels sketch-panel-bottom .content .buttons .button.debug-desc:hover {\n  text-shadow: unset;\n}\nsketch-page > .panels sketch-panel-bottom .content .description {\n  bottom: 10px;\n  position: absolute;\n  width: 100%;\n}\nsketch-page > .panels sketch-panel-bottom .opener {\n  cursor: pointer;\n  height: 10px;\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n}\nsketch-page > .panels sketch-panel-bottom .opener i {\n  color: rgba(255, 255, 255, 0.4392156863);\n  position: absolute;\n  top: 0;\n  font-size: 12px;\n  display: block;\n}\nsketch-page > .panels sketch-panel-bottom.opened {\n  transform: translate(-50%, 0);\n}\nsketch-page > .panels sketch-panel-bottom.opened .content {\n  visibility: visible;\n}\n\n.anim-element sketch-page > .panels sketch-panel-bottom.opened .content {\n  visibility: hidden;\n}\nbody sketch-page > .panels sketch-panel-left {\n  backdrop-filter: blur(1px);\n}\n\nsketch-page > .panels sketch-panel-left {\n  position: absolute;\n  display: flex;\n  left: 0;\n  width: 200px;\n  height: 100%;\n  transform: translate(-190px, 0);\n  transition: 0.3s ease-out transform;\n  background: rgba(0, 0, 0, 0.5215686275);\n  align-items: center;\n}\nsketch-page > .panels sketch-panel-left .content {\n  align-self: baseline;\n  visibility: hidden;\n  display: flex;\n  height: calc(100vh - 51px);\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\nsketch-page > .panels sketch-panel-left .content .preview {\n  max-width: 200px;\n  max-height: 200px;\n}\nsketch-page > .panels sketch-panel-left .content .preview .zoom {\n  transform-origin: left top;\n}\nsketch-page > .panels sketch-panel-left .variable-list, sketch-page > .panels sketch-panel-left .function-list, sketch-page > .panels sketch-panel-left .event-list, sketch-page > .panels sketch-panel-left .group-list, sketch-page > .panels sketch-panel-left .node-list {\n  flex: 1;\n  color: #cbcbcb;\n  position: relative;\n  width: 190px;\n  border-top: 1px solid rgba(120, 120, 120, 0.6392156863);\n  padding: 5px 5px;\n  min-height: 22px;\n  height: fit-content;\n}\nsketch-page > .panels sketch-panel-left .variable-list .title, sketch-page > .panels sketch-panel-left .variable-list .button, sketch-page > .panels sketch-panel-left .function-list .title, sketch-page > .panels sketch-panel-left .function-list .button, sketch-page > .panels sketch-panel-left .event-list .title, sketch-page > .panels sketch-panel-left .event-list .button, sketch-page > .panels sketch-panel-left .group-list .title, sketch-page > .panels sketch-panel-left .group-list .button, sketch-page > .panels sketch-panel-left .node-list .title, sketch-page > .panels sketch-panel-left .node-list .button {\n  display: inline-block;\n  cursor: pointer;\n  white-space: nowrap;\n}\nsketch-page > .panels sketch-panel-left .variable-list > .title, sketch-page > .panels sketch-panel-left .function-list > .title, sketch-page > .panels sketch-panel-left .event-list > .title, sketch-page > .panels sketch-panel-left .group-list > .title, sketch-page > .panels sketch-panel-left .node-list > .title {\n  color: #e7e7e7;\n  font-weight: bold;\n}\nsketch-page > .panels sketch-panel-left .variable-list .collapse-btn, sketch-page > .panels sketch-panel-left .function-list .collapse-btn, sketch-page > .panels sketch-panel-left .event-list .collapse-btn, sketch-page > .panels sketch-panel-left .group-list .collapse-btn, sketch-page > .panels sketch-panel-left .node-list .collapse-btn {\n  font-size: 14px;\n  padding: 2px;\n  width: 12px;\n}\nsketch-page > .panels sketch-panel-left .variable-list .button, sketch-page > .panels sketch-panel-left .function-list .button, sketch-page > .panels sketch-panel-left .event-list .button, sketch-page > .panels sketch-panel-left .group-list .button, sketch-page > .panels sketch-panel-left .node-list .button {\n  margin-right: 10px;\n  float: right;\n}\nsketch-page > .panels sketch-panel-left .variable-list .tree-view, sketch-page > .panels sketch-panel-left .function-list .tree-view, sketch-page > .panels sketch-panel-left .event-list .tree-view, sketch-page > .panels sketch-panel-left .group-list .tree-view, sketch-page > .panels sketch-panel-left .node-list .tree-view {\n  position: relative;\n  max-height: calc(100% - 22px);\n  max-width: 185px;\n  overflow: auto;\n  font-size: 14px;\n}\nsketch-page > .panels sketch-panel-left .variable-list .tree-view.collapsed > .tree-group, sketch-page > .panels sketch-panel-left .function-list .tree-view.collapsed > .tree-group, sketch-page > .panels sketch-panel-left .event-list .tree-view.collapsed > .tree-group, sketch-page > .panels sketch-panel-left .group-list .tree-view.collapsed > .tree-group, sketch-page > .panels sketch-panel-left .node-list .tree-view.collapsed > .tree-group {\n  display: none;\n}\nsketch-page > .panels sketch-panel-left .variable-list .tree-fullview, sketch-page > .panels sketch-panel-left .function-list .tree-fullview, sketch-page > .panels sketch-panel-left .event-list .tree-fullview, sketch-page > .panels sketch-panel-left .group-list .tree-fullview, sketch-page > .panels sketch-panel-left .node-list .tree-fullview {\n  max-height: unset;\n}\nsketch-page > .panels sketch-panel-left .variable-list.collapsed, sketch-page > .panels sketch-panel-left .function-list.collapsed, sketch-page > .panels sketch-panel-left .event-list.collapsed, sketch-page > .panels sketch-panel-left .group-list.collapsed, sketch-page > .panels sketch-panel-left .node-list.collapsed {\n  flex: 0;\n}\nsketch-page > .panels sketch-panel-left .variable-list.collapsed .tree-view, sketch-page > .panels sketch-panel-left .function-list.collapsed .tree-view, sketch-page > .panels sketch-panel-left .event-list.collapsed .tree-view, sketch-page > .panels sketch-panel-left .group-list.collapsed .tree-view, sketch-page > .panels sketch-panel-left .node-list.collapsed .tree-view {\n  display: none;\n}\nsketch-page > .panels sketch-panel-left .tree-view-scroll {\n  overflow: hidden auto;\n  height: calc(100% - 22px);\n  position: relative;\n}\nsketch-page > .panels sketch-panel-left .variable-list {\n  border-top: none;\n}\nsketch-page > .panels sketch-panel-left .group-list .tree-view {\n  margin-top: 3px;\n}\nsketch-page > .panels sketch-panel-left .group-list .tree-item {\n  height: 20px;\n  overflow: hidden;\n}\nsketch-page > .panels sketch-panel-left .group-list .tree-item .title {\n  overflow: hidden;\n  max-width: 100%;\n  text-overflow: ellipsis;\n}\nsketch-page > .panels sketch-panel-left .group-list .tree-item .title.active {\n  color: yellow;\n}\nsketch-page > .panels sketch-panel-left .opener {\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 10px 0 10px 10px;\n  position: absolute;\n  right: -10px;\n}\nsketch-page > .panels sketch-panel-left .opener i {\n  color: rgba(255, 255, 255, 0.4392156863);\n  position: absolute;\n  right: 10px;\n  font-size: 12px;\n  display: block;\n}\nsketch-page > .panels sketch-panel-left.opened {\n  transform: translate(0px, 0);\n}\nsketch-page > .panels sketch-panel-left.opened .content {\n  visibility: visible;\n}\n\n.anim-element sketch-page > .panels sketch-panel-left.opened .content {\n  visibility: hidden;\n}\nbody sketch-page > .panels sketch-panel-right {\n  backdrop-filter: blur(8px);\n}\n\nsketch-page > .panels.has-minimap sketch-panel-right {\n  height: calc(100% - 200px);\n  overflow: auto;\n}\n\nsketch-page > .panels sketch-panel-right {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 240px;\n  border: 1px solid #202020;\n  height: 100%;\n  transform: translate(230px, 0);\n  transition: 0.3s ease-out transform;\n  display: flex;\n  background: rgba(0, 0, 0, 0.5215686275);\n  align-items: center;\n}\nsketch-page > .panels sketch-panel-right .content {\n  visibility: hidden;\n  word-break: break-word;\n  width: 100%;\n  top: 0;\n  position: absolute;\n  padding: 6px 0;\n  color: rgba(255, 255, 255, 0.5411764706);\n}\nsketch-page > .panels sketch-panel-right .content .panel-title {\n  color: white;\n  font-size: 18px;\n  font-weight: bold;\n  text-align: center;\n}\nsketch-page > .panels sketch-panel-right .opener {\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 10px 10px 10px 0;\n  position: absolute;\n  left: -10px;\n}\nsketch-page > .panels sketch-panel-right .opener i {\n  color: rgba(255, 255, 255, 0.4392156863);\n  position: absolute;\n  left: 10px;\n  font-size: 12px;\n  display: block;\n}\nsketch-page > .panels sketch-panel-right.hide {\n  display: none;\n}\nsketch-page > .panels sketch-panel-right.opened {\n  transform: translate(0px, 0);\n}\nsketch-page > .panels sketch-panel-right.opened .content {\n  visibility: visible;\n}\n\n.anim-element sketch-page > .panels sketch-panel-right.opened .content {\n  visibility: hidden;\n}\n\n.bpsprf-default .field, .bpsprf-iface .field {\n  border-top: 1px dashed rgba(255, 255, 255, 0.1803921569);\n  margin-top: 4px;\n  padding-top: 2px;\n  padding-left: 5px;\n}\n.bpsprf-default .field > .name, .bpsprf-iface .field > .name {\n  color: white;\n}\n.bpsprf-default input, .bpsprf-default textarea, .bpsprf-iface input, .bpsprf-iface textarea {\n  background: rgba(0, 0, 0, 0.63);\n  color: white;\n  border: none;\n  outline: none;\n  padding: 4px;\n  width: calc(100% - 12px);\n  border-radius: 10px;\n}\n.tree-list-menu.hidden {\n  display: none;\n}\n\n.tree-item {\n  padding-left: 20px;\n}\n.tree-item.has-child {\n  padding-left: 10px;\n}\n.tree-item .title {\n  user-select: none;\n  cursor: pointer;\n}\n\n.tree-item.has-child > .title .tree-icon:before {\n  color: gray;\n  content: \"\\f0d7\";\n  padding-right: 5px;\n}\n\n.tree-item.has-child.collapsed > .title .tree-icon:before {\n  content: \"\\f0da\";\n}\ntree-list2 .tree-item {\n  padding-left: 10px;\n}\nsf-m[name=loading] {\n  display: none;\n  background: rgba(0, 0, 0, 0.7294117647);\n  pointer-events: none;\n  padding: 7px 15px;\n  border-radius: 20px;\n  box-shadow: 0 0 11px white;\n  position: fixed;\n  top: 60px;\n  color: white;\n  right: 10px;\n  z-index: 100;\n}\nsf-m[name=loading].show {\n  display: block;\n}\nsf-m[name=loading] .icon {\n  padding-right: 5px;\n}\nbody > .header > .hide {\n  display: none;\n}\nbody > .header .header-project-tabs {\n  align-self: baseline;\n}\nbody > .header {\n  z-index: 1;\n  backdrop-filter: blur(1px);\n  position: relative;\n  background: rgba(0, 0, 0, 0.5215686275);\n  align-items: center;\n  border-bottom: 1px solid black;\n  display: flex;\n  box-shadow: 0 0 8px 0 black;\n}\nbody > .header .header-left {\n  border-right: 2px solid;\n  font-size: 24px;\n  padding: 0 15px 0 18px;\n  text-align: center;\n  display: table;\n}\nbody > .header .header-left img {\n  height: 50px;\n  filter: drop-shadow(0 0 2px white);\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 8px;\n}\nbody > .header .header-left div {\n  vertical-align: middle;\n  display: inline-block;\n}\nbody > .header .header-left .menu-button-hint {\n  display: none;\n  position: absolute;\n  bottom: -3px;\n  left: 100px;\n}\nbody > .header .header-left:hover .menu-button-hint, body > .header .header-left:hover div {\n  color: #bdbdbd;\n}\nbody > .header .header-center {\n  font-size: 18px;\n  text-align: center;\n  padding: 10px;\n  height: 24px;\n}\nbody > .header.sketch-mode .header-left {\n  cursor: pointer;\n}\nbody > .header.sketch-mode .header-left i.menu-button-hint {\n  display: block;\n}\nbody > .header.sketch-mode .header-menu {\n  display: inherit;\n}\nbody > .header .header-menu {\n  display: none;\n}\nbody > .header .header-menu .item-list {\n  display: flex;\n  position: absolute;\n  right: 0px;\n  top: 12px;\n  font-size: 22px;\n}\nbody > .header .header-menu .item-list .item {\n  padding: 0 10px;\n  cursor: pointer;\n  position: relative;\n}\nbody > .header .header-menu .item-list .item.active {\n  color: white;\n}\nbody > .header .header-menu .item-list .item .module-counter {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  font-size: 10px;\n  color: black;\n  background: rgba(255, 255, 255, 0.8705882353);\n  box-shadow: 0 0 6px white;\n  border-radius: 100%;\n  padding: 2px 3px 2px 4px;\n  text-align: center;\n  font-weight: bold;\n  height: 12px;\n  min-width: 10px;\n}\nbody > .header .header-menu .header-zoom {\n  position: absolute;\n  right: 10px;\n  color: white;\n  opacity: 0.8;\n  top: 50px;\n  font-size: 22px;\n}\nbody > .header .header-center .item-list {\n  display: flex;\n  position: absolute;\n  top: 12px;\n  font-size: 22px;\n}\nbody > .header .header-center .item-list .item {\n  padding: 0 10px;\n  cursor: pointer;\n}\nbody > .header .header-center .item-list .item.active {\n  color: white;\n}\n@media (max-width: 900px) {\n  body > .header .header-center div {\n    display: none;\n  }\n  body > .header sf-m[name=modal] {\n    overflow: scroll;\n  }\n}\nbody > .header .large-header vw-ground {\n  height: calc(100vh - 86px);\n}\nbody > .header .large-header .header .header-left div {\n  display: block;\n}\n\n.header-left-menu .dropdown-menu li {\n  min-width: 170px;\n}\nsf-m.modal {\n  grid-template-columns: auto minmax(0, 1fr) auto;\n  display: none;\n  position: fixed;\n  z-index: 1001;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  box-sizing: border-box;\n  grid-template-areas: \"top-start top top-end\" \"center-start center center-end\" \"bottom-start bottom-center bottom-end\" \"gap gap gap\";\n  grid-template-rows: auto auto auto 0.625em;\n  height: 100%;\n  padding: 0.625em 0.625em 0;\n  overflow-x: hidden;\n  background: rgba(0, 0, 0, 0);\n  transition: background 0.3 linear;\n}\nsf-m.modal.show {\n  display: grid;\n  background: rgba(0, 0, 0, 0.3764705882);\n}\nsf-m.modal.show .modal-dialog {\n  opacity: 1;\n}\nsf-m.modal .modal-dialog {\n  display: grid;\n  transition: opacity;\n  opacity: 0;\n  grid-column: 2;\n  grid-row: 2;\n  align-self: center;\n  justify-self: center;\n  position: relative;\n  box-sizing: border-box;\n  max-width: 100%;\n}\nsf-m[name=project-list] {\n  align-self: baseline;\n  display: flex;\n  flex-wrap: wrap;\n  width: calc(100vw - 500px);\n  max-height: 50px;\n  overflow: auto;\n}\nsf-m[name=project-list] .list .item {\n  position: relative;\n  display: inline-flex;\n  flex: 1 1;\n  background: rgba(255, 255, 255, 0.0784313725);\n  border-right: 1px solid rgba(255, 255, 255, 0.1019607843);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1019607843);\n  cursor: pointer;\n  padding: 1px 10px;\n  height: 22px;\n  max-width: 150px;\n}\nsf-m[name=project-list] .list .item i {\n  font-size: 12px;\n  align-self: center;\n}\nsf-m[name=project-list] .list .item .fa-circle, sf-m[name=project-list] .list .item .close {\n  position: absolute;\n  right: 3px;\n}\nsf-m[name=project-list] .list .item .fa-circle:hover, sf-m[name=project-list] .list .item .close:hover {\n  background: rgba(255, 255, 255, 0.2784313725);\n  color: rgba(255, 255, 255, 0.7098039216);\n  border-radius: 100%;\n}\nsf-m[name=project-list] .list .item .fa-circle {\n  font-size: 9px;\n  margin: 0 3px 0 0;\n  padding: 0;\n}\nsf-m[name=project-list] .list .item .close {\n  padding: 3px 4px 2px 4px;\n}\nsf-m[name=project-list] .list .item span {\n  margin-left: 5px;\n  font-size: 13px;\n  padding-right: 20px;\n  padding-top: 3px;\n}\nsf-m[name=project-list] .list .item.active {\n  background: rgba(255, 255, 255, 0.1411764706);\n  color: rgba(255, 255, 255, 0.8196078431);\n}\nsf-m[name=project-list] .create-tab {\n  margin: 3px 3px 0px 5px;\n  cursor: pointer;\n  vertical-align: middle;\n}\nsf-m[name=project-list] .create-tab:hover {\n  color: white;\n}\nsf-m[name=project-panel-left] {\n  position: absolute;\n  height: calc(100vh - 50px);\n  z-index: 2;\n}\nsf-m[name=project-panel-left] .menus {\n  width: 50px;\n  height: 100%;\n  position: absolute;\n  z-index: 1;\n  background: rgba(0, 0, 0, 0.7411764706);\n  outline: 1px solid rgba(70, 70, 70, 0.7215686275);\n}\nsf-m[name=project-panel-left] .menus .button {\n  position: relative;\n  font-size: 22px;\n  padding: 10px;\n  text-align: center;\n  cursor: pointer;\n}\nsf-m[name=project-panel-left] .menus .button:hover {\n  color: white;\n}\nsf-m[name=project-panel-left] .menus .button.active {\n  color: white;\n}\nsf-m[name=project-panel-left] .menus .button.active .highlight {\n  margin-left: -10px;\n  margin-top: -10px;\n  background: rgba(255, 255, 255, 0.4901960784);\n  height: 50px;\n  width: 2px;\n  position: absolute;\n  box-shadow: 0 0 15px 1px white;\n}\nsf-m[name=project-panel-left] .menus .button .bubble {\n  background: rgba(93, 93, 255, 0.8196078431);\n  font-size: 10px;\n  padding: 2px 4px;\n  color: white;\n  border-radius: 20px;\n  position: absolute;\n  right: 3px;\n  bottom: 3px;\n}\nsf-m[name=project-panel-left] .menus .button .bubble.hide {\n  display: none;\n}\nsf-m[name=project-panel-left] .menus .button .bubble.blue {\n  background: rgba(46, 130, 255, 0.8196078431);\n}\nsf-m[name=project-panel-left] .menus .button .bubble.orange {\n  background: rgba(255, 133, 46, 0.8196078431);\n}\nsf-m[name=project-panel-left] .menus .button .bubble.red {\n  background: rgba(255, 46, 46, 0.8196078431);\n}\nsf-m[name=project-panel-left] .menus .button .bubble.yellow {\n  background: rgba(255, 210, 46, 0.8196078431);\n  color: black;\n}\nsf-m[name=project-panel-left] .menus .button .bubble.green {\n  background: rgba(48, 187, 53, 0.8196078431);\n  color: black;\n}\nsf-m[name=project-panel-left] .panels {\n  position: absolute;\n  left: 50px;\n  height: 100%;\n}\nsf-m[name=project-panel-left] .panels > div {\n  height: 100%;\n}\nsf-m[name=project-panel-left] .panels > div.hide {\n  display: none;\n}\n\nbody vw-page {\n  width: calc(100vw - 50px);\n  margin-left: 50px;\n}\nsf-m[name=tooltip] {\n  visibility: hidden;\n  background: rgba(0, 0, 0, 0.8549019608);\n  pointer-events: none;\n  padding: 2px 8px;\n  border-radius: 5px;\n  box-shadow: 0 0 2px white;\n  position: fixed;\n  top: 15px;\n  left: 10px;\n  color: #dbdbdb;\n  opacity: 0;\n  z-index: 100;\n  transition: 0.3s ease-in opacity;\n}\nsf-m[name=tooltip] .path {\n  color: gray;\n  font-size: 16px;\n}\nsf-m[name=tooltip] .type, sf-m[name=tooltip] .feature, sf-m[name=tooltip] .id {\n  color: gray;\n}\nsf-m[name=tooltip] .type span, sf-m[name=tooltip] .feature span, sf-m[name=tooltip] .id span {\n  font-weight: bold;\n  letter-spacing: 1px;\n}\nsf-m[name=tooltip] .feature span, sf-m[name=tooltip] .id span {\n  color: white;\n}\nsf-m[name=tooltip] .hide-this {\n  display: none;\n}\nsf-m[name=tooltip] .desc {\n  white-space: pre-wrap;\n}\nsf-m[name=tooltip].show {\n  visibility: visible;\n  opacity: 1;\n}\nsf-m[name=tooltip] .icon {\n  padding-right: 5px;\n}\nsf-m[name=tooltip] .general .title {\n  font-size: 16px;\n}\nsf-m[name=tooltip] .general .desc {\n  color: gray;\n  white-space: pre-wrap;\n}\nsf-m[name=tooltip] .general .comment {\n  color: #63a669;\n  white-space: pre-wrap;\n}\nsf-m[name=tutorial] {\n  z-index: 10;\n  display: none;\n}\n@keyframes pulse-ring {\n  0% {\n    transform: scale(0.1);\n  }\n  80%, 100% {\n    opacity: 0;\n  }\n}\n@keyframes pulse-dot {\n  0% {\n    transform: scale(0.7);\n  }\n  50% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0.7);\n  }\n}\nsf-m[name=tutorial] .highlighter {\n  z-index: 5;\n  position: fixed;\n  top: 0;\n  left: 0;\n  mix-blend-mode: multiply;\n  pointer-events: none;\n}\nsf-m[name=tutorial] .highlighter .dark-ground {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.8);\n}\nsf-m[name=tutorial] .highlighter .light {\n  position: fixed;\n  width: 500px;\n  height: 500px;\n  margin-left: -250px;\n  margin-top: -250px;\n  border-radius: 100%;\n  background: radial-gradient(circle, rgb(255, 255, 255) 0%, rgba(255, 255, 255, 0.8) 8%, rgba(255, 255, 255, 0.7) 15%, rgba(255, 255, 255, 0.5) 30%, rgba(255, 255, 255, 0) 60%);\n}\nsf-m[name=tutorial] .hinter .hints {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 500px;\n  pointer-events: none;\n  z-index: 10000;\n}\nsf-m[name=tutorial] .hinter .hints .light {\n  position: fixed;\n  width: 10px;\n  height: 10px;\n  margin-left: -5px;\n  margin-top: -5px;\n}\nsf-m[name=tutorial] .hinter .hints .light:before {\n  content: \"\";\n  position: relative;\n  display: block;\n  width: 500%;\n  height: 500%;\n  margin-left: -200%;\n  margin-top: -200%;\n  border-radius: 45px;\n  background-color: #01a4e9;\n  animation: pulse-ring 1.5s cubic-bezier(0.215, 0.61, 0.355, 1) infinite;\n}\nsf-m[name=tutorial] .hinter .hints .light:after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  display: block;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.4117647059);\n  border-radius: 15px;\n  box-shadow: 0 0 8px black;\n  animation: pulse-dot 1.5s cubic-bezier(0.455, 0.03, 0.515, 0.955) -0.4s infinite;\n}\nsf-m[name=tutorial] .hinter .hints .message {\n  position: fixed;\n  font-size: 16px;\n  color: white;\n  background: rgba(0, 0, 0, 0.7411764706);\n  border: 2px solid rgba(0, 137, 255, 0.8901960784);\n  border-radius: 10px;\n  padding: 4px 8px;\n  box-shadow: 0 0 8px #000000;\n  margin-left: 25px;\n}\n\n.bp-editor-tutorial-active-element {\n  filter: drop-shadow(0 0 12px yellow);\n}\nbody > .background {\n  position: fixed;\n  top: 0;\n  left: 0;\n}\nbody > .background .img {\n  position: fixed;\n  opacity: 0.8;\n  background-repeat: repeat;\n  background-size: 75%;\n  box-shadow: inset 0 0 11rem 0px black;\n  width: 100%;\n  height: 100%;\n}\nbody > .background .tile {\n  opacity: 0.8;\n  position: fixed;\n  background: url(\"/assets/img/background/tile.png\");\n  background-repeat: repeat;\n  background-size: 100px;\n  width: 100%;\n  box-shadow: inset 0 0 11rem 0px black;\n  height: 100%;\n  filter: brightness(28%);\n}\n\nvw-ground {\n  position: absolute;\n  overflow: hidden;\n  display: block;\n  top: 50px;\n  height: calc(100vh - 50px);\n  width: 100vw;\n}\n\n@media (max-width: 800px) {\n  sf-m.modal {\n    overflow: scroll;\n  }\n}\ntextarea, code {\n  tab-size: 4;\n}\ndocs-md-tabs {\n  display: block;\n  background: rgba(0, 0, 0, 0.3019607843);\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid black;\n  box-shadow: 0 0 17px rgba(0, 0, 0, 0.5803921569);\n}\ndocs-md-tabs .tabs {\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  margin-bottom: -10px;\n  padding: 5px;\n  background: rgba(208, 225, 157, 0.3490196078);\n  border-radius: 5px;\n}\ndocs-md-tabs .tabs > div {\n  cursor: pointer;\n}\ndocs-md-tabs .tabs .active-tab {\n  color: yellow;\n  text-shadow: 0 0 9px #f1ff1e;\n}\ndocs-md-tabs [tab] {\n  display: none;\n}\ndocs-md-tabs .active-tab {\n  display: block;\n}\ndocs-security-test-vuln, docs-security-escape-text {\n  display: block;\n  padding: 10px;\n  border-radius: 10px;\n  background: rgba(0, 0, 0, 0.6901960784);\n  border: 1px solid rgba(21, 158, 255, 0.3803921569);\n  box-shadow: 0 0 11px #04a1c5;\n}\nsf-m[name=project-panel-workspace] {\n  background: #181818;\n  height: 100%;\n}\nsf-m[name=project-panel-workspace] .files-list {\n  color: #cbcbcb;\n  position: relative;\n  width: 190px;\n  max-height: -webkit-fill-available;\n  padding: 5px 5px;\n}\nsf-m[name=project-panel-workspace] .files-list .title, sf-m[name=project-panel-workspace] .files-list .button {\n  display: inline-block;\n  cursor: pointer;\n  white-space: nowrap;\n}\nsf-m[name=project-panel-workspace] .files-list > .title {\n  color: #e7e7e7;\n  font-weight: bold;\n}\nsf-m[name=project-panel-workspace] .files-list .collapse-btn {\n  font-size: 14px;\n  padding: 2px;\n  width: 12px;\n}\nsf-m[name=project-panel-workspace] .files-list .button {\n  margin-right: 10px;\n  float: right;\n}\nsf-m[name=project-panel-workspace] .files-list .tree-view {\n  position: relative;\n  max-height: calc(100% - 22px);\n  max-width: 185px;\n  overflow: auto;\n  font-size: 14px;\n}\nsf-m[name=project-panel-workspace] .files-list .tree-view.collapsed > .tree-group {\n  display: none;\n}\nsf-m[name=project-panel-workspace] .files-list.collapsed .tree-view {\n  display: none;\n}\nsf-m[name=project-panel-workspace] .bottom-info {\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  font-size: 12px;\n  padding: 5px;\n  color: gray;\n  user-select: none;\n}\nsf-m[name=project-panel-workspace] .bottom-info.hide {\n  display: none;\n}\nsf-m[name=project-panel-workspace] .info-browser-flag {\n  bottom: 50px;\n  border-bottom: 1px solid rgba(165, 165, 165, 0.2117647059);\n}\n.welcome-text {\n  color: white;\n  text-align: center;\n  padding: 0 20px;\n}\n.welcome-text > .description {\n  white-space: pre-line;\n}\n.welcome-text > .content {\n  max-width: 750px;\n  width: 90vw;\n  display: inline-flex;\n}\n.welcome-text > .content .item {\n  padding: 10px;\n  width: 200px;\n  margin: 10px 14px;\n  cursor: pointer;\n  border-radius: 10px;\n  box-shadow: 0px 0px 3px white;\n  border: 1px solid #c5c5c5;\n  background: rgba(0, 0, 0, 0.5411764706);\n}\n.welcome-text .available-engine {\n  bottom: 0;\n  width: 100vw;\n  left: 0;\n  position: absolute;\n}\n.welcome-text .available-engine .list .item {\n  width: 50px;\n}\n.welcome-text .available-engine .list .item img {\n  max-width: 50px;\n  filter: brightness(0) invert(1);\n}\n.welcome-text .available-engine .list .item {\n  display: inline-block;\n  color: white;\n  margin: 0 5px;\n}\n.welcome-text .available-engine a:hover {\n  filter: drop-shadow(0 0 5px white);\n}\n\n.welcome-left {\n  display: grid;\n  position: absolute;\n  color: #a0a0a0;\n  bottom: 0;\n  left: 10px;\n}\n.welcome-left i {\n  margin-right: 5px;\n}\n.welcome-left a:hover {\n  color: white;\n  text-shadow: 0 0 4px white;\n}\n\n.welcome-right {\n  display: grid;\n  position: absolute;\n  color: #a0a0a0;\n  bottom: 0;\n  right: 10px;\n  text-align: right;\n}\n.welcome-right i {\n  margin-left: 5px;\n}\n.welcome-right a:hover {\n  color: white;\n  text-shadow: 0 0 4px white;\n}\nvw-page {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\nvw-page.page-current {\n  top: 0;\n}\nsf-m[name=code-generator] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n  width: 500px;\n}\nsf-m[name=code-generator] .hide {\n  display: none;\n}\nsf-m[name=code-generator] .title {\n  padding: 10px;\n  color: white;\n  background: #121212;\n  box-shadow: 0 0 4px black;\n}\nsf-m[name=code-generator] .title div {\n  font-size: 12px;\n  color: #bf7a7a;\n  font-weight: bold;\n  display: inline-block;\n  letter-spacing: 1px;\n}\nsf-m[name=code-generator] .section {\n  padding: 10px 0 0 10px;\n  color: #b5b5b5;\n  font-size: 14px;\n}\nsf-m[name=code-generator] textarea {\n  margin: 5px 10px;\n  width: calc(100% - 40px);\n  height: 100px;\n  color: white;\n  background: #121212;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  padding: 10px;\n  tab-size: 4;\n  white-space: nowrap;\n}\nsf-m[name=code-generator] .error-list {\n  padding: 10px;\n}\nsf-m[name=code-generator] .error-list .item {\n  background: black;\n  padding: 3px 7px;\n  border-radius: 10px;\n  color: white;\n}\nsf-m[name=code-generator] .error-list .item.error {\n  box-shadow: 0 0 6px #8f4141;\n}\nsf-m[name=code-generator] select.list {\n  background: black;\n  color: white;\n  padding: 5px;\n  margin-left: 10px;\n  border: 1px solid #444444;\n  outline: none;\n}\nsf-m[name=code-generator] .code-result pre {\n  margin-top: 3px;\n  background: rgba(0, 0, 0, 0.631372549);\n  padding: 10px;\n  overflow: auto;\n  max-width: 100%;\n  max-height: 200px;\n}\nsf-m[name=code-generator] .code-result-copy, sf-m[name=code-generator] .code-result-minify {\n  position: absolute;\n  right: 20px;\n  padding: 6px 9px 4px 9px;\n  background: #1e1e1e;\n  border-radius: 35px;\n  border: 1px solid #000000;\n  cursor: pointer;\n  box-shadow: 0 0 2px white;\n}\nsf-m[name=code-generator] .code-result-copy:hover, sf-m[name=code-generator] .code-result-minify:hover {\n  background: #323232;\n}\nsf-m[name=code-generator] .code-result-minify {\n  right: 62px;\n}\nsf-m[name=code-generator] .button {\n  display: inline-block;\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px;\n  margin: 5px;\n  border: 1px solid #000;\n}\nsf-m[name=code-generator] .button:hover {\n  background: rgba(44, 43, 34, 0.6196078431);\n  box-shadow: 0 0 7px #cbaf25;\n}\nsf-m[name=custom-node-editor] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n}\nsf-m[name=custom-node-editor] .editor {\n  width: 80vw;\n  max-width: 900px;\n  height: 90vh;\n}\nsf-m[name=custom-node-editor] .menu {\n  position: absolute;\n  right: 0px;\n  top: 0;\n  text-align: center;\n}\nsf-m[name=custom-node-editor] .menu .item {\n  cursor: pointer;\n  padding: 5px;\n  width: 20px;\n  height: 20px;\n  margin: 10px;\n  border: 1px solid #000;\n  border-radius: 20px;\n  background: rgba(0, 0, 0, 0.6588235294);\n  color: #fff;\n  box-shadow: 0 0 5px black;\n}\nsf-m[name=modal-dev-mode] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=modal-dev-mode] .description {\n  padding: 10px;\n  color: white;\n}\nsf-m[name=modal-dev-mode] .note {\n  text-align: center;\n  font-size: 12px;\n  padding: 0;\n  color: gray;\n  margin-top: -10px;\n  cursor: pointer;\n}\nsf-m[name=modal-dev-mode] .text-input {\n  padding: 10px;\n  position: relative;\n  display: flex;\n}\nsf-m[name=modal-dev-mode] .text-input input {\n  width: 100%;\n  border: 1px solid black;\n  background: #161616;\n  padding: 5px;\n  color: white;\n  outline: none;\n}\nsf-m[name=modal-dev-mode] .button-import {\n  position: relative;\n  border-radius: 10px;\n  background: #125c15;\n  border: 1px solid #65a122;\n  margin: 0 auto 5px auto;\n  width: 120px;\n  padding: 7px 10px;\n  text-align: center;\n  cursor: pointer;\n  color: white;\n}\nsf-m[name=modal-dev-mode] .button-import:hover {\n  background: #65a122;\n  box-shadow: 0 0 9px #c6ebbd;\n}\nsf-m[name=documentation] {\n  background: #292929;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px black;\n  width: 95vw;\n  height: 95vh;\n  overflow: hidden;\n}\nsf-m[name=documentation] .title {\n  color: white;\n  font-weight: bold;\n  font-size: 20px;\n  text-align: center;\n  vertical-align: middle;\n  width: 100%;\n  background: black;\n  box-shadow: 0 0 7px black;\n  z-index: 1;\n}\nsf-m[name=documentation] .close {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 20px;\n  text-align: center;\n  background: #3e3e3e;\n  color: white;\n  cursor: pointer;\n  font-weight: bold;\n}\nsf-m[name=documentation] .container {\n  display: flex;\n  height: 100%;\n}\nsf-m[name=documentation] .left-panel, sf-m[name=documentation] .right-panel {\n  height: 100%;\n  padding-top: 5px;\n}\nsf-m[name=documentation] .left-panel .title, sf-m[name=documentation] .right-panel .title {\n  font-size: 14px;\n  text-align: left;\n}\nsf-m[name=documentation] .left-panel, sf-m[name=documentation] .right-panel {\n  width: 15%;\n  max-width: 300px;\n  background: #161616;\n  box-shadow: 0 0 7px black;\n}\nsf-m[name=documentation] .left-panel {\n  overflow: hidden auto;\n  height: calc(95vh - 33px);\n}\nsf-m[name=documentation] .content {\n  position: relative;\n  padding: 5px 20px;\n  width: 70%;\n  color: #d7d7d7;\n  overflow: scroll;\n  height: 96%;\n}\nsf-m[name=documentation] .content h1, sf-m[name=documentation] .content h2, sf-m[name=documentation] .content h3, sf-m[name=documentation] .content h4, sf-m[name=documentation] .content h5, sf-m[name=documentation] .content h6 {\n  cursor: pointer;\n}\nsf-m[name=documentation] .content h1:hover, sf-m[name=documentation] .content h2:hover, sf-m[name=documentation] .content h3:hover, sf-m[name=documentation] .content h4:hover, sf-m[name=documentation] .content h5:hover, sf-m[name=documentation] .content h6:hover {\n  color: white;\n  filter: drop-shadow(0 0 10px white);\n}\nsf-m[name=documentation] .content h1:hover:after, sf-m[name=documentation] .content h2:hover:after, sf-m[name=documentation] .content h3:hover:after, sf-m[name=documentation] .content h4:hover:after, sf-m[name=documentation] .content h5:hover:after, sf-m[name=documentation] .content h6:hover:after {\n  margin-left: 10px;\n  font-size: 16px;\n  font-family: \"Font Awesome 5 Free\";\n  font-weight: 900;\n  content: \"\\f292\";\n  vertical-align: middle;\n}\nsf-m[name=documentation] .content a {\n  color: skyblue;\n  text-decoration: underline;\n}\nsf-m[name=documentation] .content .active {\n  color: #ffff70;\n  border-bottom: 1px dashed;\n}\nsf-m[name=documentation] .content .edit-button {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  background: #583c47;\n  padding: 5px 8px;\n  border-radius: 30px;\n  cursor: pointer;\n}\nsf-m[name=documentation] .tree-item {\n  margin-top: 1px;\n}\nsf-m[name=documentation] .tree-item i {\n  display: none;\n}\nsf-m[name=documentation] .tree-item .title {\n  background: none;\n  box-shadow: none;\n  font-weight: normal;\n}\nsf-m[name=documentation] .tree-item .tree-item .title {\n  color: #adadad;\n}\nsf-m[name=documentation] .tree-item.active > .title, sf-m[name=documentation] .right-panel .active {\n  color: #ffff70;\n  filter: drop-shadow(0 0 10px rgba(255, 255, 0, 0.7333333333));\n  border-bottom: 1px dashed;\n}\nsf-m[name=documentation] .right-panel > div > div {\n  color: white;\n  cursor: pointer;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 12px;\n}\nsf-m[name=documentation] .sc-H2 {\n  margin-left: 10px;\n}\nsf-m[name=documentation] .sc-H3 {\n  margin-left: 20px;\n}\nsf-m[name=documentation] .sc-H4 {\n  margin-left: 30px;\n}\nsf-m[name=documentation] .sc-H5 {\n  margin-left: 40px;\n}\nsf-m[name=documentation] .sc-H6 {\n  margin-left: 50px;\n}\nsf-m[name=documentation] img {\n  border-radius: 10px;\n}\n@media (max-width: 800px) {\n  sf-m[name=documentation] .right-panel {\n    display: none;\n  }\n  sf-m[name=documentation] .left-panel {\n    width: 30%;\n  }\n}\nsf-m[name=documentation] blockquote {\n  background: #00ff89;\n  color: black;\n  margin: 5px 0;\n  padding: 5px 10px;\n  border-radius: 5px;\n}\nsf-m[name=documentation] blockquote p {\n  margin: 0;\n}\nsf-m[name=documentation] blockquote p code {\n  background: rgba(0, 0, 0, 0.3333333333);\n}\nsf-m[name=documentation] blockquote p strong {\n  color: black;\n}\nsf-m[name=documentation] strong {\n  color: white;\n  white-space: break-spaces;\n}\nsf-m[name=documentation] table {\n  margin-top: -5px;\n  border: 1px solid rgba(255, 255, 255, 0.4784313725);\n  border-radius: 5px;\n  padding: 5px;\n}\nsf-m[name=documentation] table td {\n  padding: 3px 13px 3px 2px;\n}\nsf-m[name=documentation] pre {\n  background: rgba(0, 0, 0, 0.2705882353);\n  border: 1px solid black;\n  padding: 7px;\n  border-radius: 5px;\n  overflow: auto;\n}\nsf-m[name=documentation] img {\n  max-width: 100%;\n}\nsf-m[name=documentation] video {\n  max-width: 100%;\n  border-radius: 10px;\n}\nsf-m[name=documentation] p code, sf-m[name=documentation] li code, sf-m[name=documentation] td code {\n  background: rgba(0, 0, 0, 0.6);\n  padding: 1px 5px 4px 5px;\n  border-radius: 5px;\n  white-space: nowrap;\n}\nsf-m[name=documentation] table {\n  max-width: 100%;\n  overflow: auto;\n  display: block;\n}\nsf-m[name=documentation] x-code2 {\n  background: rgba(0, 0, 0, 0.6);\n  padding: 1px 5px 4px 5px;\n  border-radius: 5px;\n  white-space: nowrap;\n  display: block;\n  font-family: monospace;\n}\nsf-m[name=documentation] x-code2 x-t {\n  padding-left: 10px;\n  display: block;\n}\n\nsf-m[name=docs-editor-tutorial] ul {\n  list-style: none;\n}\nsf-m[name=docs-editor-tutorial] li {\n  cursor: pointer;\n  margin-bottom: 5px;\n}\nsf-m[name=docs-editor-tutorial] li:before {\n  content: \"\\f04b\";\n  font-family: \"Font Awesome 5 Free\";\n  display: inline-block;\n  margin-left: -1.3em;\n  width: 1.3em;\n  vertical-align: middle;\n}\nsf-m[name=docs-editor-tutorial] li:hover {\n  filter: drop-shadow(0 0 6px white);\n}\nsf-m[name=environment-variables] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n}\nsf-m[name=environment-variables] .title {\n  text-align: center;\n  min-width: 300px;\n  padding: 5px;\n  color: #fff;\n  font-weight: bold;\n  letter-spacing: 1px;\n  border-bottom: 1px solid #000;\n  background: rgba(0, 0, 0, 0.6);\n  cursor: default;\n}\nsf-m[name=environment-variables] .head {\n  text-align: center;\n  display: flex;\n  background: rgba(0, 0, 0, 0.4392156863);\n}\nsf-m[name=environment-variables] .head .row {\n  color: #fff;\n  display: inline-block;\n  width: 50%;\n  outline: 1px solid #000;\n  cursor: default;\n}\nsf-m[name=environment-variables] .content .row {\n  display: flex;\n}\nsf-m[name=environment-variables] .content .row .column {\n  color: #fff;\n  display: inline-block;\n  width: 50%;\n  padding: 8px;\n  outline: 1px solid #000;\n}\nsf-m[name=environment-variables] .content .row input {\n  color: gray;\n  background: rgba(0, 0, 0, 0.5803921569);\n  border: none;\n}\nsf-m[name=environment-variables] .menu {\n  position: absolute;\n  right: 0;\n  top: 0;\n  text-align: center;\n  display: flex;\n}\nsf-m[name=environment-variables] .menu .item {\n  cursor: pointer;\n  padding: 5px;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #000;\n  border-radius: 20px;\n  background: rgba(88, 88, 88, 0.6588235294);\n  color: #fff;\n  box-shadow: 0 0 5px black;\n}\nsf-m[name=environment-variables] .menu .item.hide {\n  display: none;\n}\nsf-m[name=example-list] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=example-list] .description {\n  padding: 10px;\n  color: white;\n}\nsf-m[name=example-list] .description a {\n  color: skyblue;\n}\nsf-m[name=example-list] .list {\n  padding: 5px;\n}\nsf-m[name=example-list] .list .item {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px;\n  margin: 5px;\n  border: 1px solid #000;\n}\nsf-m[name=example-list] .list .item:hover {\n  background: rgba(0, 0, 0, 0.8705882353);\n}\nsf-m[name=module-example-list-deep] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=module-example-list-deep] .source-menu {\n  display: flex;\n  background: black;\n  padding: 5px;\n  justify-content: space-evenly;\n}\nsf-m[name=module-example-list-deep] .source-menu .item {\n  padding: 5px;\n  color: white;\n  width: 100%;\n  cursor: pointer;\n  text-align: center;\n}\nsf-m[name=module-example-list-deep] .source-menu .item.selected {\n  color: #fdabab;\n}\nsf-m[name=module-example-list-deep] .refresh-button {\n  text-align: center;\n  background: black;\n  font-size: 12px;\n  margin-top: -10px;\n  cursor: pointer;\n}\nsf-m[name=module-example-list-deep] .description {\n  background: black;\n  padding: 10px;\n  color: white;\n  margin-right: 40px;\n  width: calc(100% - 20px);\n}\nsf-m[name=module-example-list-deep] .description a {\n  color: skyblue;\n}\nsf-m[name=module-example-list-deep] .list {\n  padding: 5px;\n}\nsf-m[name=module-example-list-deep] .list .item {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px;\n  margin: 5px;\n  border: 1px solid #000;\n}\nsf-m[name=module-example-list-deep] .list .item:hover {\n  background: rgba(0, 0, 0, 0.8705882353);\n}\nsf-m[name=module-example-list-deep] .menu {\n  position: absolute;\n  right: -5px;\n  top: -10px;\n  text-align: center;\n}\nsf-m[name=module-example-list-deep] .menu .item {\n  cursor: pointer;\n  padding: 5px;\n  width: 20px;\n  height: 20px;\n  margin: 10px;\n  border: 1px solid #000;\n  border-radius: 20px;\n  background: rgba(0, 0, 0, 0.6588235294);\n  color: #fff;\n  box-shadow: 0 0 10px white;\n}\nsf-m[name=module-example-list] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  height: 400px;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=module-example-list] .description {\n  padding: 10px;\n  color: white;\n  text-align: center;\n  background: rgba(0, 0, 0, 0.2509803922);\n  border-bottom: 1px solid black;\n}\nsf-m[name=module-example-list] .description a {\n  color: skyblue;\n}\nsf-m[name=module-example-list] .url-input {\n  display: flex;\n}\nsf-m[name=module-example-list] .url-input .column {\n  width: 100%;\n  color: gray;\n  background: rgba(0, 0, 0, 0.5803921569);\n  border: none;\n  padding: 7px;\n  outline: none;\n}\nsf-m[name=module-example-list] .url-input .column.invalid {\n  outline: 1px solid red;\n}\nsf-m[name=module-example-list] .list {\n  padding: 5px;\n}\nsf-m[name=module-example-list] .list .item {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.3215686275);\n  cursor: pointer;\n  border-radius: 17px;\n  padding: 5px 8px;\n  margin: 5px;\n  border: 1px solid rgba(139, 109, 0, 0.6);\n}\nsf-m[name=module-example-list] .list .item:hover {\n  background: rgba(255, 255, 255, 0.0705882353);\n}\nsf-m[name=module-url] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  min-width: 700px;\n}\nsf-m[name=module-url] .head {\n  letter-spacing: 1px;\n  text-align: center;\n  display: flex;\n  background: rgba(0, 0, 0, 0.2509803922);\n}\nsf-m[name=module-url] .head .row {\n  color: #fff;\n  display: inline-block;\n  outline: 1px solid #000;\n  cursor: default;\n}\nsf-m[name=module-url] .head .row.url {\n  width: 58%;\n}\nsf-m[name=module-url] .head .row.nodes {\n  width: 19%;\n}\nsf-m[name=module-url] .head .row.actions {\n  width: 22%;\n}\nsf-m[name=module-url] .content .row {\n  background: rgba(0, 0, 0, 0.5803921569);\n  display: flex;\n}\nsf-m[name=module-url] .content .row .column {\n  color: #dbdbdb;\n  display: inline-block;\n  width: 50%;\n  padding: 8px;\n  outline: 1px solid #000;\n}\nsf-m[name=module-url] .content .row .column.url {\n  width: 60%;\n  overflow: hidden;\n  white-space: nowrap;\n  margin-bottom: -10px;\n  height: 20px;\n  font-size: 14px;\n}\nsf-m[name=module-url] .content .row .column.url b {\n  margin-right: 4px;\n  color: #696969;\n}\nsf-m[name=module-url] .content .row .column.url div {\n  overflow-x: scroll;\n  padding-bottom: 10px;\n}\nsf-m[name=module-url] .content .row .column.nodes {\n  width: 17.5%;\n}\nsf-m[name=module-url] .content .row .column.actions {\n  width: 22%;\n}\nsf-m[name=module-url] .content .row .column.url-input {\n  width: 100%;\n  color: gray;\n  background: rgba(0, 0, 0, 0.5803921569);\n  border: none;\n}\nsf-m[name=module-url] .content .actions button {\n  border: 0;\n  background: none;\n  color: #dbdbdb;\n  display: inline-block;\n  cursor: pointer;\n}\nsf-m[name=module-url] .content .actions .cross {\n  text-decoration: line-through;\n}\nsf-m[name=module-url] .menu {\n  position: absolute;\n  right: -50px;\n  top: -10px;\n  text-align: center;\n}\nsf-m[name=module-url] .menu .item {\n  cursor: pointer;\n  padding: 5px;\n  width: 20px;\n  height: 20px;\n  margin: 10px;\n  border: 2px solid #456357;\n  border-radius: 20px;\n  background: rgba(0, 0, 0, 0.6588235294);\n  color: #fff;\n  box-shadow: 0 0 5px black;\n}\nsf-m[name=npm-package-info] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=npm-package-info] > .info {\n  padding: 10px;\n  color: white;\n  font-size: 12px;\n  margin-top: -20px;\n}\nsf-m[name=npm-package-info] > .info a {\n  color: skyblue;\n}\nsf-m[name=npm-package-info] > .description {\n  color: white;\n  padding: 0 10px;\n}\nsf-m[name=npm-package-info] > .list-info {\n  margin-top: 10px;\n  border-top: 1px dashed white;\n  padding: 5px 10px 0 10px;\n}\nsf-m[name=npm-package-info] > .title {\n  padding: 10px;\n  margin-right: 40px;\n  color: white;\n  font-weight: bold;\n  text-decoration: underline;\n}\nsf-m[name=npm-package-info] > .title a {\n  color: skyblue;\n}\nsf-m[name=npm-package-info] > .list-info {\n  color: white;\n}\nsf-m[name=npm-package-info] .list {\n  padding: 5px;\n}\nsf-m[name=npm-package-info] .list .item {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px;\n  margin: 5px;\n  border: 1px solid #000;\n}\nsf-m[name=npm-package-info] .list .item:hover {\n  background: rgba(0, 0, 0, 0.8705882353);\n}\nsf-m[name=npm-package-info] .list .item.active {\n  color: gray;\n}\nsf-m[name=npm-package-info] .list .item.loading {\n  color: burlywood;\n}\nsf-m[name=npm-package-info] .menu {\n  position: absolute;\n  right: -5px;\n  top: -10px;\n  text-align: center;\n}\nsf-m[name=npm-package-info] .menu .item {\n  cursor: pointer;\n  padding: 5px;\n  width: 20px;\n  height: 20px;\n  margin: 10px;\n  border: 1px solid #000;\n  border-radius: 20px;\n  background: rgba(0, 0, 0, 0.6588235294);\n  color: #fff;\n  box-shadow: 0 0 5px black;\n}\nsf-m[name=npm-packages] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  width: 420px;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=npm-packages] .search-info {\n  color: white;\n  text-align: center;\n  width: 100%;\n  margin-bottom: 10px;\n}\nsf-m[name=npm-packages] > .mini-description {\n  padding: 10px;\n  color: grey;\n  font-size: 12px;\n  margin-top: -20px;\n  text-align: center;\n}\nsf-m[name=npm-packages] > .mini-description a {\n  color: grey;\n  cursor: pointer;\n}\nsf-m[name=npm-packages] > .description {\n  text-align: center;\n  padding: 10px;\n  color: white;\n}\nsf-m[name=npm-packages] > .description a {\n  color: skyblue;\n}\nsf-m[name=npm-packages] .search {\n  padding: 0 5px;\n}\nsf-m[name=npm-packages] .search input {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  border-radius: 4px;\n  padding: 5px;\n  margin: 5px;\n  border: 1px solid #000;\n  width: calc(100% - 22px);\n}\nsf-m[name=npm-packages] .list {\n  padding: 5px;\n  max-height: 60vh;\n  overflow: hidden scroll;\n}\nsf-m[name=npm-packages] .list .item {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px;\n  margin: 5px;\n  border: 1px solid #000;\n}\nsf-m[name=npm-packages] .list .item:hover {\n  background: rgba(0, 0, 0, 0.8705882353);\n}\nsf-m[name=npm-packages] .list .item.active {\n  color: gray;\n}\nsf-m[name=npm-packages] .list .item .title {\n  font-weight: bold;\n  text-decoration: underline;\n}\nsf-m[name=npm-packages] .list .item .description {\n  font-weight: normal;\n  overflow: hidden;\n  width: calc(100% - 100px);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\nsf-m[name=npm-packages] .list .item .author {\n  float: right;\n  margin-top: -24px;\n}\nsf-m[name=npm-packages] .list .item .date {\n  float: right;\n  vertical-align: middle;\n  margin-top: -20px;\n}\nsf-m[name=modal-remote-engine-connect] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=modal-remote-engine-connect] .description {\n  padding: 10px;\n  color: white;\n}\nsf-m[name=modal-remote-engine-connect] .note {\n  text-align: center;\n  font-size: 12px;\n  padding: 0;\n  color: gray;\n  margin-top: -10px;\n  cursor: pointer;\n}\nsf-m[name=modal-remote-engine-connect] .text-input {\n  padding: 10px;\n  position: relative;\n  display: flex;\n}\nsf-m[name=modal-remote-engine-connect] .text-input input {\n  width: 100%;\n  border: 1px solid black;\n  background: #161616;\n  padding: 5px;\n  color: white;\n  outline: none;\n}\nsf-m[name=modal-remote-engine-connect] .button-import {\n  position: relative;\n  border-radius: 10px;\n  background: #125c15;\n  border: 1px solid #65a122;\n  margin: 0 auto 5px auto;\n  width: 120px;\n  padding: 7px 10px;\n  text-align: center;\n  cursor: pointer;\n  color: white;\n}\nsf-m[name=modal-remote-engine-connect] .button-import:hover {\n  background: #65a122;\n  box-shadow: 0 0 9px #c6ebbd;\n}\nsf-m[name=modal-remote-sketch-connect] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=modal-remote-sketch-connect] .description {\n  padding: 10px;\n  color: white;\n}\nsf-m[name=modal-remote-sketch-connect] .note {\n  text-align: center;\n  font-size: 12px;\n  padding: 0;\n  color: gray;\n  margin-top: -10px;\n  cursor: pointer;\n}\nsf-m[name=modal-remote-sketch-connect] .text-input {\n  padding: 10px;\n  position: relative;\n  display: flex;\n}\nsf-m[name=modal-remote-sketch-connect] .text-input input {\n  width: 100%;\n  border: 1px solid black;\n  background: #161616;\n  padding: 5px;\n  color: white;\n  outline: none;\n}\nsf-m[name=modal-remote-sketch-connect] .button-import {\n  position: relative;\n  border-radius: 10px;\n  background: #125c15;\n  border: 1px solid #65a122;\n  margin: 0 auto 5px auto;\n  width: 120px;\n  padding: 7px 10px;\n  text-align: center;\n  cursor: pointer;\n  color: white;\n}\nsf-m[name=modal-remote-sketch-connect] .button-import:hover {\n  background: #65a122;\n  box-shadow: 0 0 9px #c6ebbd;\n}\nsf-m[name=remote-sync] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=remote-sync] > .description {\n  padding: 10px;\n  color: white;\n}\nsf-m[name=remote-sync] > .description a {\n  color: skyblue;\n}\nsf-m[name=remote-sync] .list {\n  padding: 5px;\n}\nsf-m[name=remote-sync] .list .item {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px;\n  margin: 5px;\n  border: 1px solid #000;\n}\nsf-m[name=remote-sync] .list .item:hover {\n  background: rgba(0, 0, 0, 0.8705882353);\n}\nsf-m[name=remote-sync] .list .item .icon {\n  float: left;\n  margin: 10px 10px 0 5px;\n}\nsf-m[name=remote-sync] .list .item .content {\n  display: inline-block;\n}\nsf-m[name=remote-sync] .list .item .description {\n  font-size: 12px;\n  color: #999999;\n}\nsf-m[name=sketch-importer] {\n  background: rgba(30, 30, 30, 0.6705882353);\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n  color: white;\n  max-width: 80vw;\n}\nsf-m[name=sketch-importer] .description {\n  padding: 10px;\n  min-width: 500px;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 10px;\n  text-decoration: underline;\n  letter-spacing: 1px;\n}\nsf-m[name=sketch-importer] .description a {\n  color: skyblue;\n}\nsf-m[name=sketch-importer] .info-modules, sf-m[name=sketch-importer] .info-nodes {\n  background: rgba(0, 0, 0, 0.6705882353);\n  padding: 7px;\n  border-radius: 10px;\n  margin: 5px 2px;\n}\nsf-m[name=sketch-importer] .info-modules .title, sf-m[name=sketch-importer] .info-nodes .title {\n  color: gray;\n}\nsf-m[name=sketch-importer] .remove-module {\n  cursor: pointer;\n}\nsf-m[name=sketch-importer] .remove-module:hover {\n  color: white;\n}\nsf-m[name=sketch-importer] .info-clear {\n  margin-top: 10px;\n}\nsf-m[name=sketch-importer] .info-clear .title {\n  text-align: center;\n}\nsf-m[name=sketch-importer] .list {\n  list-style-type: decimal;\n  margin: 5px 0;\n  padding: 0 30px;\n  max-height: 15vh;\n  overflow: hidden auto;\n}\nsf-m[name=sketch-importer] .button-clear {\n  text-align: center;\n}\nsf-m[name=sketch-importer] .button-clear div {\n  display: inline-block;\n  margin: 5px;\n  border: 1px dashed #000;\n  padding: 7px;\n  background: rgba(0, 0, 0, 0.6784313725);\n  border-radius: 20px;\n  cursor: pointer;\n}\nsf-m[name=sketch-importer] .button-clear div:hover {\n  background: rgba(24, 24, 24, 0.6784313725);\n  box-shadow: 0 0 9px #c6ebbd;\n}\nsf-m[name=sketch-importer] .button-import {\n  position: relative;\n  border-radius: 10px;\n  background: #125c15;\n  border: 1px solid #65a122;\n  margin: 0 auto 5px auto;\n  width: 120px;\n  padding: 7px 10px;\n  text-align: center;\n  cursor: pointer;\n}\nsf-m[name=sketch-importer] .button-import:hover {\n  background: #65a122;\n  box-shadow: 0 0 9px #c6ebbd;\n}\nsf-m[name=sketch-settings] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=sketch-settings] .description {\n  padding: 5px;\n  color: white;\n  border-bottom: 1px solid black;\n  background: #111;\n}\nsf-m[name=sketch-settings] .list {\n  padding: 5px;\n}\nsf-m[name=sketch-settings] .list .item {\n  color: #fff;\n  background: rgba(0, 0, 0, 0.6196078431);\n  border: 1px solid #000;\n  padding: 5px;\n  margin: 5px;\n}\nsf-m[name=sketch-settings] .list .item .title {\n  display: inline;\n  margin-right: 10px;\n}\nsf-m[name=sketch-settings] .list .item select, sf-m[name=sketch-settings] .list .item input {\n  background: black;\n  border: none;\n  color: white;\n  outline: none;\n  padding: 5px;\n}\nsf-m[name=terms-and-privacy] {\n  background: #ffffff;\n  color: black;\n  padding: 20px;\n  border-radius: 10px;\n  max-width: 700px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n}\nsf-m[name=terms-and-privacy] h1 {\n  margin: 0;\n  border-bottom: 1px dashed;\n}\nsf-m[name=terms-and-privacy] ul {\n  list-style: decimal;\n}\nsf-m[name=terms-and-privacy] .small-note {\n  font-size: 12px;\n  color: #bfbfbf;\n}\nsketch-page .mini-blackprint {\n  width: 240px;\n  height: 195px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  overflow: hidden;\n  box-shadow: 0 0 6px rgba(255, 255, 255, 0.4196078431);\n  background: rgba(255, 255, 255, 0.2509803922);\n  border-radius: 10px;\n}\nsketch-page .mini-blackprint sf-m[name=container] {\n  pointer-events: none;\n}\nsketch-page .mini-blackprint.hidden {\n  display: none;\n}\nsketch-page sf-m[name=container] {\n  margin-left: 200px;\n}\nsketch-page .top-left-info {\n  padding: 7px 10px;\n  margin: 10px;\n  color: rgba(255, 255, 255, 0.3490196078);\n  font-size: 12px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.2784313725);\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.7098039216);\n  border-radius: 10px;\n  white-space: pre-line;\n}\nsketch-page .mini-blackprint sf-m[name=container], sketch-page.left-menu-hide sf-m[name=container] {\n  margin-left: 0;\n}\nsketch-page > .bottom-message {\n  position: absolute;\n  bottom: 0;\n  color: #ababab;\n  width: 100%;\n  padding: 20px;\n  text-align: center;\n}\nsketch-page > .panels sketch-panel-left, sketch-page > .panels sketch-panel-bottom, sketch-page > .panels sketch-panel-right {\n  backdrop-filter: blur(1px);\n  box-shadow: 0 0 8px 0 black;\n}\n@media (max-width: 900px) {\n  sketch-page > .bottom-message {\n    display: none;\n  }\n}\nsketch-page > sf-space[blackprint] .bg-tile {\n  background: url(\"/assets/img/background/tile.png\");\n  background-size: 100px;\n  filter: brightness(38%);\n  backface-visibility: hidden;\n  opacity: 0.5;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n\n/*# sourceMappingURL=custom.sf.css.map */","## html.append-to-body\n<sf-m name=\"tutorial\" style=\"display: {{ active ? 'block' : 'none'}}\">\n\t<div class=\"highlighter\">\n\t\t<div class=\"dark-ground\"></div>\n\n\t\t<div>\n\t\t\t<div class=\"light\" sf-each=\"val in light\" style=\"transform: translate({{ val.position.x }}px, {{ val.position.y }}px);\"></div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"hinter\">\n\t\t<div class=\"hints\" sf-each=\"val in light\" style=\"transform: translate({{ val.position.x }}px, {{ val.position.y }}px);\">\n\t\t\t<div class=\"light\"></div>\n\t\t\t<div class=\"message\" style=\"transform: translate({{ -val.overflow.x }}px, {{ -val.overflow.y }}px);\">{{ val.message }}</div>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"tutorial\"]{\n\t$highlightWidth: 500px;\n\t$highlightHeight: 500px;\n\tz-index: 10;\n\tdisplay: none;\n \n\t@keyframes pulse-ring {\n\t\t0% { transform: scale(0.1); }\n\t\t80%, 100% { opacity: 0; }\n\t}\n\t@keyframes pulse-dot {\n\t\t0% { transform: scale(0.7); }\n\t\t50% { transform: scale(1); }\n\t\t100% { transform: scale(0.7); }\n\t}\n\n\t.highlighter{\n\t\tz-index: 5;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tmix-blend-mode: multiply;\n\t\tpointer-events: none;\n\t\t.dark-ground{\n\t\t\tposition: fixed;\n\t\t\twidth: 100vw;\n\t\t\theight: 100vh;\n\t\t\tbackground: rgba(0,0,0,0.8);\n\t\t}\n\t\t.light{\n\t\t\tposition: fixed;\n\t\t\twidth: $highlightWidth;\n\t\t\theight: $highlightHeight;\n\t\t\tmargin-left: calc(-1 * $highlightWidth / 2);\n\t\t\tmargin-top: calc(-1 * $highlightHeight / 2);\n\t\t\tborder-radius: 100%;\n\t\t\tbackground: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,0.8) 8%, rgba(255,255,255,0.7) 15%, rgba(255,255,255,0.5) 30%, rgba(255,255,255,0) 60%);\n\t\t}\n\t}\n\t.hinter .hints{\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 500px;\n\t\tpointer-events: none;\n\t\tz-index: 10000;\n\t\t.light{\n\t\t\tposition: fixed;\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tmargin-left: -5px;\n\t\t\tmargin-top: -5px;\n\t\t\t&:before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tposition: relative;\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 500%;\n\t\t\t\theight: 500%;\n\t\t\t\tmargin-left: -200%;\n\t\t\t\tmargin-top: -200%;\n\t\t\t\tborder-radius: 45px;\n\t\t\t\tbackground-color: #01a4e9;\n\t\t\t\tanimation: pulse-ring 1.5s cubic-bezier(0.215, 0.61, 0.355, 1) infinite;\n\t\t\t}\n\t\t\t&:after {\n\t\t\t\tcontent: \"\";\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground-color: #ffffff69;\n\t\t\t\tborder-radius: 15px;\n\t\t\t\tbox-shadow: 0 0 8px black;\n\t\t\t\tanimation: pulse-dot 1.5s cubic-bezier(0.455, 0.03, 0.515, 0.955) -0.4s infinite;\n\t\t\t}\n\t\t}\n\t\t.message{\n\t\t\tposition: fixed;\n\t\t    font-size: 16px;\n\t\t    color: white;\n\t\t    background: #000000bd;\n\t\t    border: 2px solid #0089ffe3;\n\t\t    border-radius: 10px;\n\t\t    padding: 4px 8px;\n\t\t    box-shadow: 0 0 8px #000000;\n\t\t    margin-left: 25px;\n\t\t}\n\t}\n}\n\n.bp-editor-tutorial-active-element {\n    filter: drop-shadow(0 0 12px yellow);\n}\n\n## js-global\nwindow.Tutorial = sf.model('tutorial', My => {\n\tMy.light = [];\n\tMy.pending = [];\n\tMy.active = false;\n\n\t/* data = [\n\t\t{message, position:{x, y}, onShow(){}, onLeave(){}}, // use XY\n\t\t{message, element, origin: 'center'}, // use element position\n\t\t{message, element, onEvent(){}, listenEvent: 'pointerup'}, // add event callback\n\t\t[{message, position:{x, y}}, {message, element:{x, y}}] // multiple highlight [ToDo]\n\t] */\n\tMy.loadTutorial = function(data){\n\t\tif(!(data instanceof Array))\n\t\t\tthrow new Error(\"Tutorial must be an array\");\n\n\t\t// Make sure container element always on front\n\t\t$(document.body).append(My.$el[0]);\n\n\t\tMy.pending = data.slice(0);\n\t}\n\n\t// Immediately show a highlight and clear previous tutorial\n\tMy.show = function(data){\n\t\tMy.pending = [data];\n\t\tMy.next();\n\t}\n\n\tMy.addTutorial = function(...data){\n\t\tMy.pending.push(...data);\n\t}\n\n\tMy.next = async function(){\n\t\t// ToDo: optimize code below for multiple highlight\n\t\tlet old = My.light[0];\n\t\tif(old != null){\n\t\t\told.onLeave?.();\n\t\t\tunregisterEventListener(old);\n\t\t}\n\n\t\tif(My.pending.length === 0){\n\t\t\tMy.light.splice(0);\n\t\t\tMy.active = false;\n\t\t\treturn;\n\t\t}\n\n\t\tlet data = My.pending.shift();\n\n\t\tif(data.delayShow != null){\n\t\t\tMy.active = false;\n\t\t\tawait new Promise(resolve => setTimeout(resolve, data.delayShow));\n\t\t}\n\n\t\tif(data.element != null){\n\t\t\tlet $el = $(data.element);\n\t\t\tif($el[0] == null){\n\t\t\t\tSmallNotif.add('Failed to find element \"'+data.element+'\" for the tutorial', 'red');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet rect = $el[0].getBoundingClientRect();\n\t\t\tlet origin = data.origin || 'center';\n\n\t\t\tvar oX=0,oY=0;\n\t\t\tif(origin === 'top-left') 1;\n\t\t\telse if(origin === 'top-right')\n\t\t\t\toX += rect.width;\n\t\t\telse if(origin === 'bottom-left')\n\t\t\t\toY += rect.height;\n\t\t\telse if(origin === 'bottom-right')\n\t\t\t\toX += rect.width, oY += rect.height;\n\t\t\telse if(origin === 'center')\n\t\t\t\toX += rect.width/2, oY += rect.height/2;\n\t\t\telse if(origin === 'center-top')\n\t\t\t\toX += rect.width/2;\n\t\t\telse if(origin === 'center-left')\n\t\t\t\toY += rect.height/2;\n\t\t\telse if(origin === 'center-right')\n\t\t\t\toX += rect.width, oY += rect.height/2;\n\t\t\telse if(origin === 'center-bottom')\n\t\t\t\toX += rect.width/2, oY += rect.height;\n\n\t\t\tlet position = data.position = {x: rect.x + oX, y: rect.y + oY};\n\t\t\tlet overflow = data.overflow = {x: 0, y: 0};\n\n\t\t\tsetTimeout(()=>{\n\t\t\t\tlet rect = My.$el('.hinter .hints .message')[0].getBoundingClientRect();\n\n\t\t\t\tlet oX = position.x + rect.width + 50 - window.innerWidth;\n\t\t\t\tlet oY = position.y + rect.height - window.innerHeight;\n\n\t\t\t\tif(oY > 0) overflow.y = oY;\n\t\t\t\tif(oX > 0){\n\t\t\t\t\toverflow.x = oX;\n\t\t\t\t\toverflow.y = (oY > 0 ? oY : 0) - 20;\n\t\t\t\t}\n\t\t\t}, 300);\n\n\t\t\tregisterEventListener(data);\n\t\t}\n\n\t\tMy.light = data.splice != null ? data : [data];\n\t\tMy.active = true;\n\n\t\tdata.onShow?.();\n\t}\n\n\tMy.clearTutorial = function(){\n\t\tlet old = My.light[0];\n\t\tif(old != null){\n\t\t\told.onLeave?.();\n\t\t\tunregisterEventListener(old);\n\t\t}\n\n\t\tMy.active = false;\n\t\tMy.light = [];\n\t\tMy.pending = [];\n\t\tMy._domObserver?.disconnect();\n\t}\n\n\tMy.hotReloaded = function(){\n\t\t// My.loadTutorial([{message:\"hello\\nwodlw\", element: '.welcome-text', position:{x:100, y:100}, onShow(){\n\t\t// \t$(document.body).once('pointerup', function(){\n\t\t// \t\tMy.next();\n\t\t// \t});\n\t\t// }}]);\n\t\t// My.loadTutorial([[\n\t\t// \t{message:\"hello\\nwodlw\", position:{x:100, y:100}},\n\t\t// \t{message:\"aasd\\nwodlw\", position:{x:500, y:200}},\n\t\t// ]]);\n\n\t\t// My.next();\n\t}\n\n\tlet eventTest = /^on[A-Z]/m;\n\tfunction registerEventListener(obj){\n\t\tif(obj.element != null)\n\t\t\t$(obj.element).addClass('bp-editor-tutorial-active-element');\n\n\t\tfor(let key in obj){\n\t\t\tif(!eventTest.test(key)) continue;\n\t\t\tif(key === 'onShow' || key === 'onLeave') continue;\n\n\t\t\tlet call = obj[key];\n\t\t\tif(call === 'next') call = My.next;\n\t\t\t$(obj.element).on(key.slice(2).toLowerCase(), call);\n\t\t}\n\t}\n\tfunction unregisterEventListener(obj){\n\t\tif(obj.element != null)\n\t\t\t$(obj.element).removeClass('bp-editor-tutorial-active-element');\n\n\t\tfor(let key in obj){\n\t\t\tif(!eventTest.test(key)) continue;\n\t\t\tif(key === 'onShow' || key === 'onLeave') continue;\n\n\t\t\tlet call = obj[key];\n\t\t\tif(call === 'next') call = My.next;\n\t\t\t$(obj.element).off(key.slice(2).toLowerCase(), call);\n\t\t}\n\t}\n\n\tMy._domChanged = function(element, callback){\n\t\tMy._domObserver?.disconnect();\n\n\t\tMy._domObserver = new MutationObserver(function(){\n\t\t\tcallback();\n\t\t\tMy._domObserver.disconnect();\n\t\t\tMy._domObserver = null;\n\t\t});\n\n\t\tMy._domObserver.observe(element, { childList:true, subtree:true });\n\t}\n});","Small Notification\n\nYou can call this from anywhere\n```js\nSmallNotif.add('message', 'color', /* delay in ms*/);\nSmallNotif.add('message', {\n  color: '',\n  icon: '',\n  timeout: 0 // in ms\n});\n```\n\n## comment, this will automatically appended to body\n## html\n<!-- /src/component/SmallNotif.sf -->\n<sf-m name=\"small.notif\">\n  <div class=\"notify-container right-top\">\n    <div sf-each=\"x in list\" class=\"notify-base notify-{{ x.color }}\">\n      <i class=\"item-icon {{ x.icon ? x.icon : 'hide-icon' }}\"></i>\n      <span>{{ x.message }}</span>\n      <button @click=\"close(x)\" class=\"close\">×</button>\n    </div>\n  </div>\n</sf-m>\n\n## js-global\nvar SmallNotif = sf.model('small.notif', function(My){\n  const $ = sf.$;\n\n  My.list = [];\n  My.on$list = {\n    create(el){\n      $(el).animateKey('fadeInUp');\n    },\n    remove(el, remove){\n      $(el).animateKey('fadeOutUp', remove);\n      setTimeout(remove, 500); // To make sure it's removed\n      return true;\n    }\n  };\n\n  $(function(){\n    if($('sf-m[name=\"small.notif\"]').length !== 0) return;\n    $('body').append($(window.templates[#this.path]));\n  });\n\n  My.add = function(message, color, delay){\n    var icon;\n    if(typeof color === 'object'){\n      let obj = color;\n\n      color = obj.color ?? 'yellow';\n      delay = obj.delay;\n      icon = obj.icon;\n    }\n\n    var item = {message, color: color || 'yellow', icon};\n    My.list.push(item);\n\n    if(delay !== false){\n      item.timer = setTimeout(()=> {\n        My.list.splice(My.list.indexOf(item), 1);\n      }, delay || (1000 + 100 * message.length));\n    }\n    else {\n      item.destroy = function(){\n        let i = My.list.indexOf(item);\n        if(i === -1) return;\n        My.list.splice(i, 1);\n      };\n      item.change = function(message, color, delay){\n        item.message = message;\n        item.color = color;\n        \n        if(delay === false) return;\n        item.timer = setTimeout(item.destroy, delay || (1000 + 100 * item.message.length));\n      }\n    }\n\n    return item;\n  }\n\n  My.close = function(item){\n    My.list.splice(My.list.indexOf(item), 1);\n  }\n});\n\n## scss-global\n.notify-base{\n  font-weight: bold;\n  padding: 6px 18px 6px 14px;\n  color: #222;\n  // text-shadow: 0 0 rgba(0, 0, 0, 0.5);\n  background-color: rgba(255, 255, 255, 0.97);\n  border: 1px solid;\n  border-color: rgba(255, 255, 255, 0.97);\n  box-shadow: 0 0 7px 0px rgba(255, 255, 255, 0.97);\n  border-radius: 500px;\n  // border-radius: 4px;\n  min-width: 51%;\n  white-space: nowrap;\n  position: relative;\n  max-width: 100%;\n  margin: 10px 10px 0 10px;\n  display: flex;\n  align-items: center;\n\n  .item-icon{\n    margin-right: 4px;\n    &.hide-icon{\n      display: none;\n    }\n  }\n\n  span{\n    white-space: pre-line;\n    margin-right: 5px;\n  }\n\n  button {\n    outline: none;\n    &.close {\n        appearance: none;\n        padding: 0;\n        cursor: pointer;\n        background: 0 0;\n        border: 0;\n        width: inherit;\n    }\n  }\n\n  .close {\n    float: right;\n    font-size: 23px;\n    font-weight: 700;\n    line-height: 0.8;\n    right: 6px;\n    position: absolute;\n    color: #000;\n    text-shadow: 0 1px 0 #fff;\n    opacity: .2;\n  }\n}\n\n.notify-container{\n  max-width: 95%;\n  position: fixed;\n  z-index: 9999;\n  display: grid;\n\n  &.right-top{\n    right: 10px;\n    top: 0;\n\n    .notify-base{\n      float: right;\n      margin: 10px 0 0 0;\n    }\n  }\n  &.left-top{\n    left: 0;\n    top: 0;\n\n    .notify-base{\n      float: left;\n      margin: 10px 0 0 10px;\n    }\n  }\n}\n\n@mixin notify-color($name, $txt, $bg, $border){\n  .notify-#{$name}{\n    color: #{$txt};\n    background-color: #{$bg};\n    border-color: #{$border};\n    box-shadow: 0 0 5px 0px #{$border};\n  }\n}\n\n@include notify-color('red', #B94A48, rgba(242, 222, 222, 0.97), #EED3D7);\n@include notify-color('yellow', #C09853, rgba(252, 248, 227, 0.97), #FBEED5);\n@include notify-color('blue', #3A87AD, rgba(217, 237, 247, 0.97), #BCE8F1);\n@include notify-color('green', #468847, rgba(223, 240, 216, 0.97), #D6E9C6);","## comment, This will be used for sf-each for above element\n## html\n<drop-down class=\"dropdown-menu {{ hidden }}\" style=\"\n    display: {{visible ? 'block' : 'none'}};\n    transform: translate({{ x | 0 }}px, {{ y | 0 }}px);\n  \">\n  <div class=\"first\" style=\"display: {{ !title && 'none' }}\">{{ title || '' }}</div>\n  <input>\n  <ul>\n    <li sf-each=\"x in options\" :class=\"{{ x.divider ? 'divider' : '' }} {{ x.disabled ? 'disabled' : '' }} {{ x.description ? 'has-desc' : '' }}\" title=\"{{ x.info || '' }}\">\n      {{@if x.title != null:\n      \t{[ <a> ]} // Begin\n\n      \t// Icon on the left\n      \tif(x.icon != null){\n      \t\tif(x.icon.includes('//'))\n      \t\t\t{[ <img class=\"dropdown-icon\" :src=\"{{x.icon}}\"> ]};\n      \t\telse\n      \t\t\t{[ <i class=\"dropdown-icon {{x.icon}}\"></i> ]};\n      \t}\n\n      \t// Always use { [ enclosed template ]} to avoid vulnerability\n      \t// like the text being parsed as HTML\n      \t{[ <div class=\"title\">{{ x.title }}</div> ]} // Content\n\n\t\tif(x.description != null)\n      \t\t{[ <div class=\"description\">{{ x.description }}</div> ]};\n\n      \t// Add icon if the has deep menu\n      \tif(x.deep != null)\n      \t\t{[ <i class=\"{{ root.icon.more }} has-deep\"></i> ]};\n\n      \t{[ </a> ]} // End\n      }}\n    </li>\n  </ul>\n</drop-down>\n\n## scss-global\n.dropdown-menu {\n\tz-index: 10000;\n\topacity: 0.9;\n\n\tmargin-top: 7px;\n\tbackground-color: rgba(255, 255, 255, 0.96);\n\tbox-shadow: 1px 1px 11px 3px black;\n    border: inherit;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 0;\n    border-radius: 3px;\n    background: white;\n\n    // transition: 0.3s ease-out;\n    // transition-property: visibility, opacity;\n    &.hidden{\n\t\tvisibility: hidden;\n\t\topacity: 0;\n    }\n\tinput{\n\t\tdisplay: none;\n\t\toutline: none;\n\t\tborder: none;\n\t\tborder-bottom: 1px solid black;\n\t\twidth: calc(100% - 4px);\n\t\tfont-family: 'Nunito', sans-serif, \"Font Awesome 5 Free\";\n\t\t&::placeholder {\n\t\t\ttext-align: center;\n\t\t}\n\t}\n    ul{\n    \toverflow-x: hidden;\n    \toverflow-y: auto;\n    \tmax-height: 300px;\n    }\n\n\tli {\n\t\tposition: relative;\n\t\tvertical-align: baseline;\n\t\tdisplay: inherit !important;\n\t\tpadding: 8px 16px 8px 8px;\n\t\tmin-width: 110px;\n\t\tborder-bottom: 1px dashed darkgray;\n\t\tfont-size: 16px;\n\t\tmax-width: 400px;\n\t\tcursor: pointer;\n    \tcolor: black;\n\n\t\t&.has-desc {\n\t\t\tpadding: 2px 16px 2px 8px;\n\n\t\t\ta{\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t\t.title{\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t}\n\n\t\t.description {\n\t\t\tfont-size: 12px;\n\t\t\tcolor: gray;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\twhite-space: nowrap;\n\t\t}\n\n\t\t> * {\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t&:hover{\n\t\t\tbackground: lightgray;\n\t\t}\n\t}\n\n\tul li .has-deep{\n\t\ttop: 11px;\n\t\tposition: absolute;\n\t\tright: 5px;\n\t}\n\n\tli > a > span {\n\t\tpadding-right: 6px;\n\t}\n}\n\n\nsf-m[name=\"dropdown\"].has-search > drop-down > input{\n\tdisplay: block;\n}\n\ndrop-down.dropdown-menu drop-down{\n\topacity: 1;\n}\n\n.ground-backdrop{\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: rgba(0,0,0,.4);\n\tz-index: 10000;\n\tvisibility: hidden;\n\topacity: 0;\n\ttransition-duration: .2s;\n\n\t&.show{\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t}\n}\n\ndrop-down{\n\tuser-select: none;\n\t&> .first {\n\t\tdisplay: block;\n\t\tpadding: 5px 10px;\n\t\ttext-align: center;\n\t\tfont-weight: bold;\n\t\tfont-size: 16px;\n\t\ttext-transform: capitalize;\n\t\tletter-spacing: 1px;\n\t\tcolor: white;\n\t\tbackground: #ba2f63;\n\t\tbox-shadow: 0 0 5px #d12867;\n\t}\n\tul{\n\t\tmargin: 0;\n\t\tpadding: 0;\n\n\t\tli a {\n\t\t\tdisplay: flex;\n\t\t\tdiv{\n\t\t\t\tpadding-left: 5px;\n\t\t\t}\n\t\t}\n\n\t\t.dropdown-icon {\n\t\t\tpadding-right: 5px;\n\t\t\tfloat: left;\n\t\t\talign-self: center;\n\t\t}\n\n\t\tli.disabled, li.disabled:hover{\n\t\t\tcursor: default !important;\n\t\t\tbackground: #888;\n\t\t}\n\t}\n}\n\n## js-global\n// =====================================================================\n// ============== Model <sf-m name=\"dropdown\"></sf-m> ==================\n// =====================================================================\nvar DropDown = sf.model('dropdown', function(My){\n\tMy.menus = [];\n\tMy.onCancel = void 0;\n\tMy.className = '';\n\tMy.hasSearch = false;\n\tMy.searchActive = false;\n\tMy.pendingDeepOpen = false;\n\tMy.pendingDeepOpen_ = 0;\n\tMy.lastClickEvent = null;\n\n\tMy.icon = {\n\t\tmore: 'fa fa-chevron-right'\n\t};\n\n\t// menus: [{title, callback}, {title, deep:[{...}]}, ...]\n\tMy.show = function(menus, { x, y, event, element, title, className, hasSearch, searchObject }){\n\t\tMy._event = event;\n\n\t\t// Remove last dropdown if haven't been closed\n\t\tif(My.menus.length !== 0)\n\t\t\tMy.menus.splice(0);\n\t\telse\n\t\t\taddBackdrop();\n\n\t\tmenus.title = title;\n\n\t\tif(element !== void 0){\n\t\t\tlet rect = element.getBoundingClientRect();\n\t\t\tmenus.x = rect.x + 5;\n\t\t\tmenus.y = rect.y + rect.height;\n\t\t}\n\t\telse if(x !== void 0){\n\t\t\tmenus.x = x;\n\t\t\tmenus.y = y;\n\t\t}\n\t\telse{\n\t\t\tmenus.x = event.x;\n\t\t\tmenus.y = event.y;\n\t\t}\n\n\t\tmenus.event = event;\n\t\tfor (var i = menus.length - 1; i >= 0; i--) {\n\t\t\tif(menus[i].hide)\n\t\t\t\tmenus.splice(i, 1);\n\t\t}\n\n\t\tMy.className = className || '';\n\t\tMy.menus.push(menus);\n\n\t\tif(hasSearch){\n\t\t\tlet el = My.$el('input').eq(0);\n\t\t\tlet debounce = 0;\n\t\t\tlet ref = My.menus[0];\n\t\t\tlet menuCopy = My.menus[0].slice(0);\n\t\t\tel.attr('placeholder', ' Type here to search...');\n\t\t\tMy.hasSearch = true;\n\n\t\t\tfunction onClick(ev){\n\t\t\t\tlet item = ev.target.model;\n\t\t\t\tDropDown.lastClickEvent = ev;\n\t\t\t\titem.callback.apply(item.context, item.args);\n\n\t\t\t\tMy.$el('drop-down > ul').off('click', onClick);\n\t\t\t\tMy.hide();\n\t\t\t}\n\n\t\t\tel.on('keyup', function(ev){\n\t\t\t\tclearTimeout(debounce);\n\t\t\t\tdebounce = setTimeout(()=> {\n\t\t\t\t\tlet value = el[0].value;\n\t\t\t\t\tif(!value || !My.hasSearch){\n\t\t\t\t\t\tMy.searchActive = false;\n\t\t\t\t\t\tel[0].value = '';\n\n\t\t\t\t\t\tref.splice(0);\n\t\t\t\t\t\tref.push(...menuCopy);\n\n\t\t\t\t\t\tMy.$el('drop-down > ul').off('click', onClick);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tMy.searchActive = true;\n\t\t\t\t\tlet checks = value.split(' ').map(v => {\n\t\t\t\t\t\tlet temp = RegExp(v, 'i');\n\t\t\t\t\t\ttemp.found = false;\n\t\t\t\t\t\treturn temp;\n\t\t\t\t\t});\n\n\t\t\t\t\tlet results = [];\n\t\t\t\t\tfunction deepFindFilter(list, docs, lastPath=''){\n\t\t\t\t\t\tfor(let i=0; i < list.length; i++){\n\t\t\t\t\t\t\tlet item = list[i];\n\t\t\t\t\t\t\tlet getDocs = docs?.[item.title];\n\t\t\t\t\t\t\tlet fullPath = lastPath + item.title+' > ';\n\n\t\t\t\t\t\t\tif(item.deep != null){\n\t\t\t\t\t\t\t\tdeepFindFilter(item.deep, getDocs, fullPath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tlet allFound = true;\n\t\t\t\t\t\t\t\tfor(var k=0; k < checks.length; k++){\n\t\t\t\t\t\t\t\t\tlet ref = checks[k];\n\t\t\t\t\t\t\t\t\tif(ref.test(fullPath)) ref.found = true;\n\t\t\t\t\t\t\t\t\telse allFound = false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlet description;\n\t\t\t\t\t\t\t\tif(getDocs != null){\n\t\t\t\t\t\t\t\t\t;({ description } = getDocs);\n\n\t\t\t\t\t\t\t\t\tif(allFound === false){\n\t\t\t\t\t\t\t\t\t\tfor(let k=0; k < checks.length; k++){\n\t\t\t\t\t\t\t\t\t\t\tlet ref = checks[k];\n\t\t\t\t\t\t\t\t\t\t\tif(ref.test(description)) ref.found = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Check and reset flag\n\t\t\t\t\t\t\t\tallFound = true;\n\t\t\t\t\t\t\t\tfor(let k=0; k < checks.length; k++){\n\t\t\t\t\t\t\t\t\tlet ref = checks[k];\n\t\t\t\t\t\t\t\t\tif(ref.found === false) allFound = false;\n\t\t\t\t\t\t\t\t\tref.found = false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(allFound === false) continue;\n\n\t\t\t\t\t\t\t\tresults.push(Object.assign({ description, info: description }, item, {title: fullPath.slice(0, -3)}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdeepFindFilter(menuCopy, searchObject);\n\n\t\t\t\t\tfor (var i = 0; i < My.menus.length; i++)\n\t\t\t\t\t\tMy.menus.getElement(i).model.deepRemove();\n\n\t\t\t\t\tref.splice(0);\n\t\t\t\t\tref.push(...results);\n\n\t\t\t\t\tMy.$el('drop-down > ul').on('click', onClick);\n\t\t\t\t}, 300);\n\t\t\t});\n\n\t\t\tsetTimeout(()=> el.focus(), 200);\n\t\t}\n\n\t\treturn My;\n\t}\n\n\tMy.hide = function(){\n\t\tfor (var i = 0; i < My.menus.length; i++)\n\t\t\tMy.menus.getElement(i).model.deepRemove();\n\n\t\tMy.pendingDeepOpen = false;\n\t\tMy.pendingDeepOpen_ = 0;\n\t\tMy.menus.splice(0);\n\t\tremoveBackdrop();\n\n\t\tMy.className = '';\n\t\tMy.hasSearch = false;\n\n\t\tMy.$el('input').off('keyup');\n\t}\n\n\tvar backdropCreated = false;\n\tfunction backdropListener(ev){\n\t\tif($(ev.target).parent('sf-m')[0] === sf.Window.source(My.$el, My._event))\n\t\t\treturn;\n\n\t\tremoveBackdrop();\n\n\t\tMy.hide();\n\t\tMy.onCancel && My.onCancel();\n\t}\n\n\tvar backdrop = $('<div class=\"ground-backdrop\"></div>');\n\tfunction addBackdrop(){\n\t\tif(backdropCreated) return;\n\n\t\tbackdrop.insertBefore(sf.Window.source(My.$el, My._event));\n\t\tsetTimeout(function(){\n\t\t\tbackdrop.addClass('show');\n\t\t\t$(sf.Window).on('pointerdown', backdropListener);\n\t\t\t$(sf.Window).once('contextmenu', ev => ev.preventDefault());\n\t\t\tbackdropCreated = true;\n\t\t}, 10);\n\t}\n\n\tfunction removeBackdrop(){\n\t\tbackdropCreated = false;\n\t\tbackdrop.removeClass('show');\n\n\t\tsetTimeout(()=> {\n\t\t\tbackdrop.remove();\n\t\t}, 200);\n\n\t\t$(sf.Window).off('pointerdown', backdropListener);\n\t}\n});\n\n// =====================================================================\n// ============== Component <drop-down></drop-down> ====================\n// =====================================================================\nsf.component('drop-down', {template: #this.path}, function(My, include, $item){\n\tMy.visible = false;\n\tMy.hidden = 'hidden'; // We also need to hide it before repaint\n\n\tMy.options = $item;\n\tMy._parent = $item._parent;\n\tMy.x = $item.x;\n\tMy.y = $item.y;\n\tMy.root = include('dropdown');\n\tMy.width = 0;\n\tMy.height = 0;\n\tMy.disabled = $item.disabled === true;\n\n\tfor (var i = $item.length - 1; i >= 0; i--) {\n\t\tif($item[i].hide)\n\t\t\t$item.splice(i, 1);\n\t}\n\n\t// First dropdown title\n\tMy.title = $item.title;\n\n\tvar currentDeepLevel, $el;\n\tMy.init = function(){\n\t\tif($item.event !== void 0){\n\t\t\tvar el = sf.Window.source(My.$el, $item.event);\n\t\t\tif(el === null) return;\n\t\t\t$el = $(el);\n\t\t}\n\t\telse $el = My.$el;\n\n\t\tMy.visible = true;\n\n\t\t// Check position when the element rendered\n\t\tvar ulElem = sf.Window.source(My.$el, $item.event).querySelector('ul');\n\t\t$.afterRepaint().then(function(){\n\t\t\tlet x = 0, y = 0;\n\t\t\tlet parent = My._parent;\n\t\t\tlet w = parent !== void 0 ? parent.width : 0;\n\n\t\t\twhile(parent !== void 0){\n\t\t\t\tx += parent.x;\n\t\t\t\ty += parent.y;\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\n\t\t\tMy.width = ulElem.offsetWidth;\n\t\t\tMy.height = ulElem.offsetHeight;\n\n\t\t\tif(x + My.x + My.width > sf.Window.focus.innerWidth)\n\t\t\t\tMy.x -= My.width + w;\n\n\t\t\tif(y + My.y + My.height > sf.Window.focus.innerHeight)\n\t\t\t\tMy.y -= My.height;\n\n\t\t\tMy.hidden = '';\n\t\t});\n\n\t\t// Find nested options and add event listener on mouse hover\n\t\tvar options = My.options;\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tlet opt = options[i];\n\t\t\tconst elem = $(options.getElements(i));\n\n\t\t\tif(opt.deep !== void 0){\n\t\t\t\tfunction openDeep(ev){\n\t\t\t\t\tif(currentDeepLevel !== void 0)\n\t\t\t\t\t\tMy.deepRemove();\n\n\t\t\t\t\tif(opt.hover !== void 0)\n\t\t\t\t\t\topt.hover.apply(opt.context, opt.args);\n\n\t\t\t\t\tvar deep = opt.deep;\n\t\t\t\t\tdeep.event = ev;\n\t\t\t\t\tdeep._parent = My;\n\n\t\t\t\t\t// Use the cache instead\n\t\t\t\t\tif(deep.el !== void 0){\n\t\t\t\t\t\tcurrentDeepLevel = deep.el;\n\t\t\t\t\t\tdeep.el.model.y = deep.yi - (deep.ul?.scrollTop || 0);\n\t\t\t\t\t\t$el.append(deep.el);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdeep.ul = My.$el.children('ul')[0];\n\n\t\t\t\t\t// Initialize position once\n\t\t\t\t\tdeep.x = ulElem.offsetWidth;\n\t\t\t\t\tdeep.yi = ev.target.offsetTop - 7;\n\t\t\t\t\tdeep.y = deep.yi - (deep.ul?.scrollTop || 0);\n\n\t\t\t\t\t// Create dropdown in current sf-space\n\t\t\t\t\tdeep.el = currentDeepLevel = new $DropDown(deep, My.$space);\n\t\t\t\t\tcurrentDeepLevel.sf$noGC = true; // Avoid framework's GC\n\t\t\t\t\t$el.append(currentDeepLevel);\n\t\t\t\t}\n\n\t\t\t\telem.on('mouseover', function(ev){\n\t\t\t\t\tMy.root.pendingDeepOpen = ev.target;\n\t\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\n\n\t\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\n\t\t\t\t\t\tif(My.root.pendingDeepOpen === ev.target)\n\t\t\t\t\t\t\topenDeep(ev);\n\t\t\t\t\t}, 200);\n\t\t\t\t});\n\n\t\t\t\telem.on('click', openDeep);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\telem.on('mouseover', function(ev){\n\t\t\t\tMy.root.pendingDeepOpen = ev.target;\n\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\n\n\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\n\t\t\t\t\tif(currentDeepLevel !== void 0){\n\t\t\t\t\t\tMy.deepRemove();\n\t\t\t\t\t\tcurrentDeepLevel = void 0;\n\t\t\t\t\t}\n\n\t\t\t\t\topt.hover && opt.hover.apply(opt.context, opt.args);\n\t\t\t\t}, 200);\n\t\t\t});\n\n\t\t\tif(opt.callback){\n\t\t\t\telem.on('click', function(ev){\n\t\t\t\t\tif(opt.unhover !== void 0)\n\t\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\n\n\t\t\t\t\tDropDown.lastClickEvent = ev;\n\t\t\t\t\topt.callback.apply(opt.context, opt.args);\n\t\t\t\t\tMy.root.hide();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif(opt.unhover){\n\t\t\t\telem.on('mouseout', function(ev){\n\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tMy.deepRemove = function(){\n\t\tif(currentDeepLevel === void 0)\n\t\t\treturn;\n\n\t\tcurrentDeepLevel.remove();\n\t\tcurrentDeepLevel.model.deepRemove();\n\t}\n});","## html\n<editor-display-port-value  style=\"display: {{ visible ? '' : 'none' }}\">\n\t{{ _value }}\n</editor-display-port-value>\n\n## scss-global\neditor-display-port-value {\n\tbackground: black;\n\tpadding: 1px 5px;\n\tborder: 2px solid #bd8352;\n\tbox-shadow: inset 0 0 8px #ff9f4c;\n\tborder-radius: 20px;\n\tposition: absolute;\n\tmax-width: 50px;\n\toverflow: hidden;\n\tfont-size: 12px;\n\ttext-overflow: ellipsis;\n\tmin-width: 60%;\n    min-height: 12px;\n\n\t&:hover{\n\t\tmax-width: 50vw;\n\t\tfont-size: 14px;\n\t\tpadding: 5px 10px;\n\t\tmargin-top: -5px;\n\t\tbox-shadow: 0 0 8px #ff9f4c;\n\t}\n}\n\n.output editor-display-port-value {\n\tright: 20px;\n}\n\n.input editor-display-port-value {\n\tleft: 20px;\n}\n\n## js-global\nBlackprint.space.component('editor-display-port-value', {\n\ttemplate: #this.path\n}, (My, root, item) => {\n\tMy._value = '';\n\tMy.visible = true;\n\n\tMy.setValue = function(val){\n\t\tif(val == null) return My._value = '';\n\n\t\tif(val instanceof Function){\n\t\t\tMy.visible = false;\n\t\t\treturn;\n\t\t}\n\n\t\tMy._value = JSON.stringify(val);\n\t}\n\n\tif(item != null) My.setValue(item.value);\n});","## html\n<project-navigation-bar>\n\t<div class=\"container\" @pointerleave=\"unhoverNav\">\n\t\t<span @click=\"clickNav\" @pointerover=\"hoverNav\">{{ instanceName }}</span>\n\t\t<span @click=\"clickNav\" @pointerover=\"hoverNav\" sf-each=\"x in groupNames\"> <i class=\"fas fa-angle-double-right\"></i> {{ x }}</span>\n\t\t<span @click=\"clickNav\" @pointerover=\"hoverNav\" class=\"function-name {{ !functionName && 'hide' }}\"> <i class=\"fas fa-angle-double-right\"></i> {{ functionName }}</span>\n\t</div>\n</project-navigation-bar>\n\n## scss-global\nproject-navigation-bar {\n\tposition: absolute;\n\tjustify-self: anchor-center;\n\n\t.container{\n\t\tbackground: #00000075;\n\t\tborder-radius: 15%;\n\t\tbox-shadow: 0 0 5px 2px #000000;\n\t\tpadding: 8px 10px 5px 10px;\n\t\tmargin-top: -5px;\n\t\tcolor: grey;\n\t\tmax-width: 40vw;\n\t\tspan{\n\t\t\tcursor: pointer;\n\t\t\t&:hover{\n\t\t\t\tcolor: #fff298;\n    \t\t\ttext-shadow: 0 0 #f7ff76;\n\t\t\t}\n\t\t}\n\t\tspan:last-child {\n\t\t\tcolor: white;\n\t\t\tcursor: default;\n    \t\ttext-shadow: unset;\n\t\t\tpointer-events: all;\n\n\t\t\ti { color: grey; }\n\t\t}\n\t\t.hide{\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\nsketch-page {\n\t&.left-menu-hide {\n\t\tproject-navigation-bar{\n\t\t\tmargin-left: 0;\n\t\t}\n\t}\n}\n\n## js-global\nsf.component('project-navigation-bar', My => {\n\tMy.instanceName = '';\n\tMy.functionName = '';\n\tMy.groupNames = [];\n\n\tMy.mainInstance = null;\n\n\tMy.init = function(){\n\t\t// As we're a child component and we want to access parent data\n\t\t// We need to wait until parent component has been initialized after this component\n\t\t$.afterRepaint().then(() => {\n\t\t\tlet sketch = $('sf-space[blackprint] > sf-m[name=\"container\"]', My.$el[0].closest('sketch-page'))[0].model.$space.sketch;\n\t\t\tlet mainInstance = My.mainInstance = sketch.rootInstance ?? sketch;\n\n\t\t\tif(mainInstance.tabInfo == null){\n\t\t\t\tmainInstance.once('editor.tabInfo', tabInfo => {\n\t\t\t\t\tMy.instanceName = tabInfo.title;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse My.instanceName = mainInstance.tabInfo.title;\n\n\t\t\tlet funcMain = sketch.parentInterface;\n\t\t\tif(funcMain != null) My.functionName = funcMain.title.split('/').join(' / ');\n\n\t\t\tif(My.functionName === '') My.$el('.function-name').remove();\n\t\t});\n\t}\n\n\tMy.hoverNav = function(ev){\n\t\tlet target = ev.target;\n\t\tif(target.nextElementSibling == null) ToolTip.set(\"You currently on this page\");\n\t\telse if(target.previousElementSibling == null) ToolTip.set(\"Navigate to root page\");\n\t\telse ToolTip.set(\"Navigate to this page\");\n\t}\n\n\tMy.clickNav = function(ev){\n\t\tlet target = ev.target;\n\t\tif(target.nextElementSibling == null) return;\n\t\tif(target.previousElementSibling == null){\n\t\t\tlet path = My.mainInstance.page.space.closest('vw-page > sf-page-view').routePath;\n\t\t\tviews.goto(path);\n\t\t\tMy.mainInstance.tabInfo.currentRoute = path;\n\t\t\treturn;\n\t\t}\n\n\t\tSmallNotif.add(\"Failed to navigating to this page\", \"red\");\n\t}\n\n\tMy.unhoverNav = function(){\n\t\tToolTip.set();\n\t}\n});","## html\n<sketch-panel-bottom class=\"panel {{ opened ? 'opened' : '' }}\" @contextmenu=\"SmallNotif.add('Some panels still WIP')\">\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'down' : 'up' }}\"></i>\n\t</div>\n\t<div class=\"content\">\n\t\t<div class=\"buttons\">\n\t\t\t<div @click=\"executionPauseSwitch\" class=\"button {{\n\t\t\t\texecOrder.pause && execOrder.length === 0 && !execOrder._hasStepPending ? 'inactive' : ''\n\t\t\t}}\"><i class=\"fa fa-{{ r_execOrder.pause ? 'play' : 'pause' }}\"></i> {{\n\t\t\t\tr_execOrder.pause ? 'Next' : 'Pause'\n\t\t\t}}</div>\n\t\t\t<div class=\"button {{ r_execOrder.stepMode ? 'active' : '' }}\" @click=\"executionStepMode\">\n\t\t\t\t<i class=\"fa fa-shoe-prints\"></i> Step Mode\n\t\t\t</div>\n\t\t\t<div class=\"button\" @click=\"sketchRefresh\"><i class=\"fa fa-sitemap\"></i> Refresh</div>\n\t\t\t<div class=\"button debug-desc\">{{ noteTitle }} <span>{{ note }}</span></div>\n\t\t</div>\n\t\t<div class=\"description\">\n\t\t\tThis editor still in development (≧▽≦)／<br>\n\t\t\tI want to make it better and easier to use.<br>\n\t\t</div>\n\t</div>\n</sketch-panel-bottom>\n\n## scss-global\nbody sketch-page > .panels sketch-panel-bottom {\n\tbackdrop-filter: blur(1px); // Long CSS rule = more priority\n}\n\nsketch-page > .panels sketch-panel-bottom {\n    position: absolute;\n    left: 50%;\n\twidth: calc(100% - 200px - 240px - 80px);\n\tmargin-left: -20px;\n\tbottom: 0;\n\tborder: 1px solid #181818;\n\ttransform: translate(-50%, 90px);\n\ttransition: 0.3s ease-out transform;\n\tdisplay: flex;\n\tbackground: #00000085;\n\talign-items: center;\n\t.content {\n\t\tvisibility: hidden;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\theight: 80px;\n\t\twidth: 100%;\n\t\tpadding: 10px;\n\t\tcolor: #ffffff8a;\n\n\t\t.buttons {\n\t\t\tbackground: #0000004a;\n\t\t\tborder: 1px solid #747474;\n\t\t\tborder-radius: 50px;\n\t\t\theight: 24px;\n\t\t\ttext-align: left;\n\t\t\tmargin-top: 5px;\n\t\t\tpadding: 0 10px;\n\t\t\tdisplay: flex;\n\t\t\tuser-select: none;\n\n\t\t\t.button {\n\t\t\t\tcolor: white;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tline-height: 26px;\n\t\t\t\tpadding: 0 10px;\n\t\t\t\tmin-width: 70px;\n\t\t\t\tcursor: pointer;\n\n\t\t\t\t&.inactive{\n\t\t\t\t\tcolor: grey;\n\n\t\t\t\t\t&:hover{\n\t\t\t\t\t\ttext-shadow: unset;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t&:hover{\n\t\t\t\t\ttext-shadow: 0 0 5px white;\n\t\t\t\t}\n\n\t\t\t\t& + .button{\n\t\t\t\t\tborder-left: 1px dashed white;\n\t\t\t\t}\n\n\t\t\t\t&.active {\n\t\t\t\t\tcolor: yellow;\n\t\t\t\t}\n\n\t\t\t\t&.debug-desc {\n\t\t\t\t\tpadding-left: 50px;\n\t\t\t\t\tcursor: unset;\n\t\t\t\t\tcolor: grey;\n\n\t\t\t\t\tspan{\n\t\t\t\t\t\tcolor: white;\n\t\t\t\t\t}\n\n\t\t\t\t\t&:hover{\n\t\t\t\t\t\ttext-shadow: unset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.description{\n\t\t\tbottom: 10px;\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\t.opener{\n\t\tcursor: pointer;\n\t\theight: 10px;\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: center;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\ti {\n\t\t\tcolor: #ffffff70;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tfont-size: 12px;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t&.opened {\n\t\ttransform: translate(-50%, 0);\n\t\t.content {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}\n.anim-element sketch-page > .panels sketch-panel-bottom.opened .content {\n\tvisibility: hidden;\n}\n\n## js-global\nsf.component('sketch-panel-bottom', {template: #this.path}, function(My){\n\tMy.opened = false;\n\tMy.sketchPage = null;\n\tMy.instance = null;\n\tMy.execOrder = null;\n\tMy.r_execOrder = {pause: false, stepMode: false}; // Remote engine + Editor's engine status\n\tMy.noteTitle = '';\n\tMy.note = '';\n\tMy.stepModeIsRequesting = '';\n\n\tMy.beforeInit = async function(){\n\t\tawait new Promise(resolve => {\n\t\t\t$(()=> setTimeout(resolve, 500));\n\t\t});\n\n\t\tMy.sketchPage = $('vw-page > .page-current > sketch-page')[0].model;\n\t\tMy.sketchPage.panels.bottom = My;\n\t\tMy.instance = My.sketchPage.sketch;\n\t\tMy.execOrder = My.instance.executionOrder;\n\n\t\tsf.watch(My.execOrder, 'pause', (old, now)=> {\n\t\t\tif(My.instance._remote) return; My.r_execOrder.pause = now;\n\t\t});\n\t\tsf.watch(My.execOrder, 'stepMode', (old, now)=> {\n\t\t\tif(My.instance._remote) return; My.r_execOrder.stepMode = now;\n\t\t});\n\n\t\tsf.watch(My.instance, '_remote', hasRemote);\n\t\tif(My.instance._remote) hasRemote();\n\t\tfunction hasRemote(){\n\t\t\tMy.hasRemote = true;\n\t\t\tlet remote = My.instance._remote;\n\t\t\tlet ifaceList = My.instance.ifaceList;\n\n\t\t\tfunction findCable(info){\n\t\t\t\tif(info == null) return null;\n\n\t\t\t\tlet iface = ifaceList[info.out.i];\n\t\t\t\tlet output = iface.output;\n\n\t\t\t\tlet cables = output[info.out.name].cables;\n\t\t\t\tlet cable = null;\n\t\t\t\tfor (let i=0; i < cables.length; i++) {\n\t\t\t\t\tlet ref = cables[i];\n\t\t\t\t\tif(ref.output.iface.i === info.out.i && ref.input?.iface.i === info.in?.i){\n\t\t\t\t\t\tcable = ref;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn cable;\n\t\t\t}\n\n\t\t\tremote.on('stepmode.enabled', data => {\n\t\t\t\tMy.r_execOrder.stepMode = data.flag;\n\t\t\t\tif(data.flag) My.opened = true;\n\t\t\t});\n\t\t\tremote.on('stepmode.paused', data => {\n\t\t\t\tMy.r_execOrder.pause = data.pause;\n\t\t\t\tif(data.pause) My.opened = true;\n\t\t\t\telse {\n\t\t\t\t\tMy.instance._emit('execution.paused', {\n\t\t\t\t\t\tafterNode: null,\n\t\t\t\t\t\tbeforeNode: null,\n\t\t\t\t\t\tcable: null,\n\t\t\t\t\t\tcables: null,\n\t\t\t\t\t\ttriggerSource: 0,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tremote.on('stepmode.status', data => {\n\t\t\t\tMy.r_execOrder.pause = true;\n\t\t\t\tMy.instance._emit('execution.paused', {\n\t\t\t\t\tafterNode: data.afterNode != null ? ifaceList[data.afterNode].node : null,\n\t\t\t\t\tbeforeNode: data.beforeNode != null ? ifaceList[data.beforeNode].node : null,\n\t\t\t\t\tcable: findCable(data.cable),\n\t\t\t\t\tcables: data.cables?.map(findCable),\n\t\t\t\t\ttriggerSource: data.triggerSource,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction removeBlur(){\n\t\tMy.$el.css('backdrop-filter', 'none');\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\n\t}\n\n\tMy.executionPauseSwitch = function(){\n\t\tlet executionOrder = My.instance.executionOrder;\n\t\tMy.sketchPage.$el('.debug-after-node, .debug-next, .debug-cable')\n\t\t\t.removeClass('debug-after-node')\n\t\t\t.removeClass('debug-cable')\n\t\t\t.removeClass('debug-next');\n\n\t\tif(!My.stepModeIsRequesting){\n\t\t\t// Remove all port value display element from the last pause session\n\t\t\tMy.sketchPage.$el('editor-display-port-value').remove();\n\t\t}\n\n\t\tif(My.hasRemote){\n\t\t\tif(My.r_execOrder.pause) My.instance._remote.pauseExecution(false);\n\t\t\telse My.instance._remote.pauseExecution(true);\n\t\t}\n\t\telse{\n\t\t\tif(executionOrder.pause){\n\t\t\t\tMy.noteTitle = My.note = '';\n\t\t\t\texecutionOrder.pause = false;\n\t\t\t\texecutionOrder.next(true);\n\t\t\t}\n\t\t\telse executionOrder.pause = true;\n\t\t}\n\t}\n\n\tMy.executionStepMode = function(){\n\t\tlet executionOrder = My.instance.executionOrder;\n\t\texecutionOrder.stepMode = !executionOrder.stepMode;\n\n\t\tif(My.hasRemote){\n\t\t\tif(My.r_execOrder.stepMode) My.instance._remote.enableStepMode(false);\n\t\t\telse My.instance._remote.enableStepMode(true);\n\t\t}\n\t\telse{\n\t\t\tif(executionOrder.stepMode) executionOrder.pause = true;\n\t\t}\n\t}\n\n\tMy.sketchRefresh = function(){\n\t\tCurrentSketch.recalculatePosition();\n\t}\n\n\tMy.openPanel = function(){\n\t\tremoveBlur();\n\t\tMy.opened = true;\n\t}\n\n\tMy.closePanel = function(ev){\n\t\tremoveBlur();\n\t\tev.stopPropagation();\n\t\tMy.opened = false;\n\t}\n});","## html\n<sketch-panel-right class=\"panel {{ opened ? 'opened' : ''}} {{ ifaceSelected == null ? 'hide' : '' }}\">\n\t<div class=\"content\">\n\t\t<div class=\"panel-title\">Properties</div>\n\t\t<div class=\"bpsprf-default\">\n\t\t\t<div class=\"field\">\n\t\t\t\t<span class=\"name\">Title:</span> <span> {{ data.title }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"field\">\n\t\t\t\t<span class=\"name\" title=\"Registered node path\">Namespace:</span> <span style=\"font-size:12px\"> {{ data.namespace }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"field\">\n\t\t\t\t<span class=\"name\" title=\"Add an ID so you can easily reference to this node from scripts\">Node ID:</span>\n\t\t\t\t<input sf-bind=\"data.id\" placeholder=\"...\">\n\t\t\t</div>\n\t\t\t<div class=\"field\">\n\t\t\t\t<span class=\"name\">Comment:</span>\n\t\t\t\t<textarea sf-bind=\"data.comment\" placeholder=\"Add node comment here...\"></textarea>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"bpsprf-iface\">\n\t\t\t<sf-slot for=\"ifaceField\"></sf-slot>\n\t\t</div>\n\t</div>\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'right' : 'left' }}\"></i>\n\t</div>\n</sketch-panel-right>\n\n## scss-global\nbody sketch-page > .panels sketch-panel-right {\n\tbackdrop-filter: blur(8px); // Long CSS rule = more priority\n}\n\nsketch-page > .panels.has-minimap sketch-panel-right {\n\theight: calc(100% - 200px);\n\toverflow: auto;\n}\n\nsketch-page > .panels sketch-panel-right {\n\tposition: absolute;\n\t// visibility: hidden;\n\tbottom: 0;\n\tright: 0;\n\twidth: 240px;\n\tborder: 1px solid #202020;\n    height: 100%;\n\ttransform: translate(230px, 0);\n\ttransition: 0.3s ease-out transform;\n\tdisplay: flex;\n\t// position: relative;\n\tbackground: #00000085;\n\talign-items: center;\n\t.content {\n\t\tvisibility: hidden;\n\t\tword-break: break-word;\n\t\twidth: 100%;\n\t\ttop: 0;\n\t\tposition: absolute;\n\t\tpadding: 6px 0;\n\t\tcolor: #ffffff8a;\n\n\t\t.panel-title{\n\t\t\tcolor: white;\n\t\t\tfont-size: 18px;\n\t\t\tfont-weight: bold;\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t.opener{\n\t\tcursor: pointer;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 10px 10px 10px 0;\n\t\tposition: absolute;\n\t\tleft: -10px;\n\t\ti {\n\t\t\tcolor: #ffffff70;\n\t\t\tposition: absolute;\n\t\t\tleft: 10px;\n\t\t\tfont-size: 12px;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t&.hide{\n\t\tdisplay: none;\n\t}\n\t&.opened {\n\t\ttransform: translate(0px, 0);\n\t\t.content {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}\n.anim-element sketch-page > .panels sketch-panel-right.opened .content {\n\tvisibility: hidden;\n}\n\n// bpsprf = Blackprint Sketch Panel Right Field\n.bpsprf-default, .bpsprf-iface {\n\t// border-bottom: 1px dashed #ffffff2e;\n\n\t.field {\n\t\tborder-top: 1px dashed #ffffff2e;\n\t\tmargin-top: 4px;\n\t\tpadding-top: 2px;\n\t\tpadding-left: 5px;\n\t}\n\t.field > .name {\n\t\tcolor: white;\n\t}\n\tinput, textarea {\n\t\tbackground: rgba(0, 0, 0, 0.63);\n\t\tcolor: white;\n\t\tborder: none;\n\t\toutline: none;\n\t\tpadding: 4px;\n\t\twidth: calc(100% - 12px);\n\t\tborder-radius: 10px;\n\t}\n}\n\n## js-global\nsf.component('sketch-panel-right', {template: #this.path}, function(My){\n\tMy.opened = true;\n\tMy.ifaceSelected = null;\n\tMy.ifaceField = null;\n\n\tMy.data = {title:'', namespace:'',\n\t\tid:'',\n\t\tv2m$id(val){\n\t\t\tMy.ifaceSelected.node.instance.changeNodeId(My.ifaceSelected, val);\n\t\t},\n\t\tcomment:'',\n\t\tv2m$comment(val){\n\t\t\tMy.ifaceSelected.comment = val;\n\t\t\tMy.ifaceSelected.node.instance.emit('_editor.node.comment', { iface: My.ifaceSelected });\n\t\t},\n\t};\n\n\tMy.init = function(){\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\n\t\tsketchPage.panels.right = My;\n\t}\n\n\tfunction removeBlur(){\n\t\tMy.$el.css('backdrop-filter', 'none');\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\n\t}\n\n\tMy.hide = function(){\n\t\tMy.ifaceSelected = null;\n\t}\n\n\tlet _firstTimeOpen = true;\n\tMy.selectNode = function(iface){\n\t\tMy.ifaceSelected = iface;\n\t\tMy.data.title = iface.title;\n\t\tMy.data.namespace = iface.namespace;\n\t\tMy.data.id = iface.id || '';\n\t\tMy.data.comment = iface.comment || '';\n\n\t\tif(iface._bpeditorpanel == null){\n\t\t\t// Blackprint Panel Component\n\t\t\tlet bppc = 'bppc-' + iface.namespace.toLowerCase().split('/').join('-');\n\t\t\tlet bppcList = Blackprint.space.component(bppc);\n\t\t\t\n\t\t\tif(bppcList.new != null){\n\t\t\t\tlet element = bppcList.new.stem(iface);\n\t\t\t\tiface._bpeditorpanel = element;\n\t\t\t}\n\t\t}\n\n\t\tMy.ifaceField = iface._bpeditorpanel || null;\n\t}\n\n\tMy.openPanel = function(){\n\t\tif(!My.opened) removeBlur();\n\t\tMy.opened = true;\n\t}\n\n\tMy.closePanel = function(ev){\n\t\tremoveBlur();\n\t\tev.stopPropagation();\n\t\tMy.opened = false;\n\t}\n});","## html\n<sketch-panel-left class=\"panel {{ opened ? 'opened' : ''}}\" @contextmenu=\"event.preventDefault()\">\n\t<div class=\"content\">\n\t\t<div class=\"preview\" style=\"height: {{ scaledPreviewHeight }}px\">\n\t\t\t<div class=\"zoom\" style=\"transform: scale({{ previewScale }})\">\n\t\t\t\t<sf-slot for=\"preview\"></sf-slot>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"variable-list\">\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this, true)\"><i class=\"fa fa-chevron-down collapse-btn\"></i> Variables</div>\n\n\t\t\t<div class=\"tree-view-scroll\">\n\t\t\t\t<div class=\"tree-view tree-fullview tree-item has-child collapsed\">\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> Environment ({{ _envVar.length }})</div>\n\t\t\t\t\t<div class=\"button\" @click=\"Modal.goto('/environment-variables')\"><i class=\"fa fa-plus-square\" title=\"Create new environment variable\"></i></div>\n\n\t\t\t\t\t<div class=\"tree-view tree-group\" tree-section=\"environmentVar\" @pointerdown=\"checkDragNode\">\n\t\t\t\t\t\t<div class=\"tree-item\" sf-each=\"val in _envVar\" tree-item-key=\"{{ val.key }}\">\n\t\t\t\t\t\t\t<div class=\"title\"><i class=\"fa tree-icon\"></i> {{ val.key }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"tree-view tree-fullview tree-item has-child collapsed\">\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> Public ({{ variableCount }})</div>\n\t\t\t\t\t<div class=\"button\" @click=\"createVariable(event, Blackprint.VarScope.Public)\"><i class=\"fa fa-plus-square\" title=\"Create new public/global variable\"></i></div>\n\n\t\t\t\t\t<!-- /src/component/tree-list.sf -->\n\t\t\t\t\t<div class=\"tree-view tree-group\" tree-section=\"variables\" @pointerdown=\"checkDragNode\">\n\t\t\t\t\t\t<div class=\"tree-item collapsed\" tree-item-key=\"{{ key }}\" sf-each=\"key, val in variables\" style=\"display: {{ val.hidden ? 'none' : '' }}\">\n\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\t\t\t\treturn new $TreeList({ parentKey: '', key, val, onToggle(){ recalculateMenu() } });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"tree-view tree-fullview tree-item has-child\" style=\"display: {{ isFunctionSketch ? '' : 'none' }}\">\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> Function </div>\n\n\t\t\t\t\t<div class=\"tree-view tree-group\">\n\t\t\t\t\t\t<div class=\"tree-view tree-item has-child collapsed\">\n\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> Input ({{ funcInput.length }}) </div>\n\n\t\t\t\t\t\t\t<div class=\"tree-view tree-group\" tree-section=\"functionInputs\" @pointerdown=\"checkDragNode\">\n\t\t\t\t\t\t\t\t<div class=\"tree-item collapsed\" tree-item-key=\"{{ val.name }}\" sf-each=\"val in funcInput\">\n\t\t\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ val.name }}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"tree-view tree-item has-child collapsed\">\n\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> Output ({{ funcOutput.length }}) </div>\n\n\t\t\t\t\t\t\t<div class=\"tree-view tree-group\" tree-section=\"functionOutputs\" @pointerdown=\"checkDragNode\">\n\t\t\t\t\t\t\t\t<div class=\"tree-item collapsed\" tree-item-key=\"{{ val.name }}\" sf-each=\"val in funcOutput\">\n\t\t\t\t\t\t\t\t\t<div class=\"title\"><i class=\"fa tree-icon\"></i> {{ val.name }}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"tree-view tree-item has-child collapsed\">\n\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> Shared ({{ functionSharedVariableLength }}) </div>\n\t\t\t\t\t\t\t<div class=\"button\" @click=\"createVariable(event, Blackprint.VarScope.Shared)\" title=\"Create new shared function variable\"><i class=\"fa fa-plus-square\"></i></div>\n\n\t\t\t\t\t\t\t<div class=\"tree-view tree-group\" tree-section=\"sharedVariables\" @pointerdown=\"checkDragNode\">\n\t\t\t\t\t\t\t\t<div class=\"tree-item collapsed\" tree-item-key=\"{{ key }}\" sf-each=\"key, val in funcSharedVariable\" style=\"display: {{ val.hidden ? 'none' : '' }}\">\n\t\t\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t\t\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\t\t\t\t\t\treturn new $TreeList({\n\t\t\t\t\t\t\t\t\t\t\tparentKey: '',\n\t\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\t\t\t\tonToggle(){ recalculateMenu() }\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"tree-view tree-item has-child collapsed\">\n\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> Private ({{ functionVariableLength }}) </div>\n\t\t\t\t\t\t\t<div class=\"button\" @click=\"createVariable(event, Blackprint.VarScope.Private)\" title=\"Create new private function variable\"><i class=\"fa fa-plus-square\"></i></div>\n\n\t\t\t\t\t\t\t<div class=\"tree-view tree-group\" tree-section=\"privateVars\" @pointerdown=\"checkDragNode\">\n\t\t\t\t\t\t\t\t<div class=\"tree-item collapsed\" tree-item-key=\"{{ key }}\" sf-each=\"key, val in funcVariable\" style=\"display: {{ val.hidden ? 'none' : '' }}\">\n\t\t\t\t\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t\t\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\t\t\t\t\t\treturn new $TreeList({\n\t\t\t\t\t\t\t\t\t\t\tparentKey: '',\n\t\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\t\t\t\tonToggle(){ recalculateMenu() }\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"function-list collapsed\">\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this, true)\"><i class=\"fa fa-chevron-right collapse-btn\"></i> Functions ({{ functionCount }})</div>\n\t\t\t<div class=\"button\" @click=\"createFunction\" title=\"Create new empty function node\"><i class=\"fa fa-plus-square\"></i></div>\n\n\t\t\t<!-- /src/component/tree-list.sf -->\n\t\t\t<div class=\"tree-view tree-view-scroll\" tree-section=\"functions\" @pointerdown=\"checkDragNode\">\n\t\t\t\t<div class=\"tree-item collapsed\" tree-item-key=\"{{ key }}\" sf-each=\"key, val in functions\"\n\t\t\t\t\tstyle=\"display: {{ val.hidden ? 'none' : '' }}\">\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\t\treturn new $TreeList({\n\t\t\t\t\t\t\tparentKey: '', key, val, onToggle(){ recalculateMenu() }\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"event-list collapsed\">\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this, true)\"><i class=\"fa fa-chevron-right collapse-btn\"></i> Events ({{ events.totalEvent }})</div>\n\t\t\t<div class=\"button\" @click=\"createEvent\" title=\"Create new empty event node\"><i class=\"fa fa-plus-square\"></i></div>\n\n\t\t\t<!-- /src/component/tree-list.sf -->\n\t\t\t<div class=\"tree-view tree-view-scroll\" tree-section=\"events\" @pointerdown=\"checkDragNode\">\n\t\t\t\t<div class=\"tree-item collapsed\" tree-item-key=\"{{ key }}\" sf-each=\"key, val in events.treeList\"\n\t\t\t\t\tstyle=\"display: {{ val.hidden ? 'none' : '' }}\">\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\t\treturn new $TreeList({ parentKey: '', key, val, onToggle(){ recalculateMenu() } });\n\t\t\t\t\t}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"group-list\">\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this, true)\"><i class=\"fa fa-chevron-down collapse-btn\"></i> Groups ({{ groupList.length }})</div>\n\n\t\t\t<!-- This list doesn't have namespace, so we don't use TreeList component here -->\n\t\t\t<div class=\"tree-view tree-view-scroll\" tree-section=\"groups\" @pointerleave=\"groupListLeave()\" @pointerdown=\"checkDragNode\">\n\t\t\t\t<div class=\"tree-item\" sf-each=\"val in groupList\">\n\t\t\t\t\t<div class=\"title {{ val.active && 'active' }}\" @click=\"groupListSelect(val)\" @pointerover=\"groupListHover(val)\"><i class=\"fa tree-icon\"></i> {{ val.title }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"node-list\">\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this, true)\"><i class=\"fa fa-chevron-down collapse-btn\"></i> Nodes ({{ nodeCount }})</div>\n\t\t\t<div class=\"button\" @click=\"createCustomNode\" title=\"Create new node by using code editor \"><i class=\"fa fa-plus-square\"></i></div>\n\n\t\t\t<!-- /src/component/tree-list.sf -->\n\t\t\t<div class=\"tree-view tree-view-scroll\" tree-section=\"nodes\" @pointerdown=\"checkDragNode\" @pointerover=\"nodeListHover\" @pointerleave=\"nodeListLeave\">\n\t\t\t\t<div class=\"tree-item collapsed\" sf-each=\"key, val in nodes\"\n\t\t\t\t\tstyle=\"display: {{ val.hidden ? 'none' : '' }}\">\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\t\treturn new $TreeList({ parentKey: '', key, val, onToggle(){ recalculateMenu() } });\n\t\t\t\t\t}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'left' : 'right' }}\"></i>\n\t</div>\n</sketch-panel-left>\n\n## scss-global\nbody sketch-page > .panels sketch-panel-left {\n\tbackdrop-filter: blur(1px); // Long CSS rule = more priority\n}\n\nsketch-page > .panels sketch-panel-left {\n\tposition: absolute;\n\tdisplay: flex;\n\tleft: 0;\n\twidth: 200px;\n\theight: 100%;\n\ttransform: translate(-190px, 0);\n\ttransition: 0.3s ease-out transform;\n\t// position: relative;\n\tbackground: #00000085;\n\talign-items: center;\n\t.content {\n\t\talign-self: baseline;\n\t\tvisibility: hidden;\n\t\tdisplay: flex;\n\t\theight: calc(100vh - 51px);\n\t\tflex-direction: column;\n\t\tflex-wrap: nowrap;\n\t\t.preview{\n\t\t\t// border-bottom: 1px dashed white;\n\t\t\tmax-width: 200px;\n\t\t\tmax-height: 200px;\n\t\t\t// overflow: hidden;\n\t\t\t.zoom{\n\t    \t\ttransform-origin: left top;\n\t\t\t}\n\t\t}\n\t}\n\t.variable-list, .function-list, .event-list, .group-list, .node-list {\n\t\tflex: 1;\n\t\tcolor: #cbcbcb;\n\t\tposition: relative;\n\t\twidth: 190px;\n\t\tborder-top: 1px solid #787878a3;\n\t\tpadding: 5px 5px;\n\t\tmin-height: 22px;\n\t\theight: fit-content;\n\t\t// border-bottom: 1px dashed white;\n\t\t.title, .button{\n\t\t\tdisplay: inline-block;\n\t\t\tcursor: pointer;\n\t\t\twhite-space: nowrap;\n\t\t}\n\t\t& > .title {\n\t\t\tcolor: #e7e7e7;\n    \t\tfont-weight: bold;\n\t\t}\n\t\t.collapse-btn {\n\t\t\tfont-size: 14px;\n\t\t\tpadding: 2px;\n\t\t\twidth: 12px;\n\t\t}\n\t\t.button{\n\t\t\tmargin-right: 10px;\n\t\t\tfloat: right;\n\t\t}\n\t\t.tree-view{\n\t\t\tposition: relative;\n\t\t\tmax-height: calc(100% - 22px);\n\t\t\tmax-width: 185px;\n\t\t\toverflow: auto;\n\t\t\tfont-size: 14px;\n\t\t\t&.collapsed > .tree-group {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.tree-fullview{\n\t\t\tmax-height: unset;\n\t\t}\n\t\t&.collapsed {\n\t\t\tflex: 0;\n\t\t\t.tree-view {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n\t.tree-view-scroll{\n\t\toverflow: hidden auto;\n\t\theight: calc(100% - 22px); // reduce by '.title' element size\n\t\tposition: relative;\n\t}\n\t.variable-list {\n\t\tborder-top: none;\n\t}\n\t.group-list{\n\t\t.tree-view{\n\t\t\tmargin-top: 3px;\n\t\t}\n\t\t.tree-item {\n\t\t\theight: 20px;\n\t\t\toverflow: hidden;\n\t\t\t.title{\n\t\t\t\toverflow: hidden;\n\t\t\t\tmax-width: 100%;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t}\n\t\t\t.title.active {\n\t\t\t\tcolor: yellow;\n\t\t\t}\n\t\t}\n\t}\n\t.opener{\n\t\tcursor: pointer;\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 10px 0 10px 10px;\n\t\tposition: absolute;\n\t\tright: -10px;\n\t\ti {\n\t\t\tcolor: #ffffff70;\n\t\t\tposition: absolute;\n\t\t\tright: 10px;\n\t\t\tfont-size: 12px;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t&.opened {\n\t\ttransform: translate(0px, 0);\n\t\t.content {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}\n.anim-element sketch-page > .panels sketch-panel-left.opened .content {\n\tvisibility: hidden;\n}\n\n## js-global\nsf.component('sketch-panel-left', {template: #this.path}, function(My){\n\tlet sketch = My.sketch = window.CurrentSketch;\n\n\tMy.opened = true;\n\tMy.preview = null;\n\tMy.previewWidth = 200;\n\tMy.previewScale = 1;\n\tMy.scaledPreviewHeight = 1;\n\n\tlet funcNodeInstance = sketch.parentInterface?.node.bpFunction;\n\tif(funcNodeInstance != null)\n\t\tMy.variables = funcNodeInstance.rootInstance.variables;\n\telse My.variables = sketch.variables;\n\n\tMy.functions = sketch.functions;\n\tMy.events = sketch.events || ({totalEvent: 0, treeList: {}});\n\tMy.nodes = Blackprint.nodes;\n\n\tMy.isFunctionSketch = sketch.parentInterface != null;\n\tMy.funcInput = sketch.parentInterface?.input._portList ?? [];\n\tMy.funcOutput = sketch.parentInterface?.output._portList ?? [];\n\tMy.funcSharedVariable = funcNodeInstance?.variables ?? {}; // shared function variables\n\tMy.funcVariable = sketch.variables ?? {}; // private function variables\n\n\tMy._envVar = Blackprint.Environment._list;\n\tMy.functionSharedVariableLength = 0;\n\tMy.functionVariableLength = 0;\n\tMy.variableCount = 0;\n\tMy.functionCount = 0;\n\tMy.eventCount = 0;\n\tMy.nodeCount = 0;\n\tMy.groupList = [];\n\n\tfunction deepCount(obj, isNodes){\n\t\tlet len = 0;\n\t\tif(obj.hidden) return len;\n\n\t\tfor(let key in obj){\n\t\t\tlet temp = obj[key];\n\t\t\tif(temp == null) continue;\n\n\t\t\tif(isNodes){\n\t\t\t\tif(temp instanceof Function)\n\t\t\t\t\tlen++;\n\t\t\t\telse len += deepCount(temp, isNodes);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(temp.constructor !== Object)\n\t\t\t\t\tlen++;\n\t\t\t\telse len += deepCount(temp, isNodes);\n\t\t\t}\n\t\t}\n\n\t\treSort(obj);\n\t\treturn len;\n\t}\n\n\tfunction reSort(obj){\n\t\tif(obj._list) obj._list.sort(Intl.Collator().compare);\n\t\tobj.refresh?.();\n\t}\n\n\tlet waitReSortGroups, waitReSortGroups_Rec;\n\tfunction reSortGroups(){\n\t\tclearTimeout(waitReSortGroups);\n\t\tclearTimeout(waitReSortGroups_Rec);\n\t\twaitReSortGroups = setTimeout(()=>{\n\t\t\tlet comparer = Intl.Collator().compare;\n\t\t\tMy.groupList.sort((A, B) => comparer(A.title, B.title));\n\t\t\tMy.groupList.refresh();\n\t\t}, 1000);\n\n\t\twaitReSortGroups_Rec = setTimeout(()=>{\n\t\t\tMy.recalculateMenu();\n\t\t}, 50);\n\t}\n\n\tlet pendingRefreshModule;\n\tMy.refreshNodesCounter = () => {\n\t\tclearTimeout(pendingRefreshModule);\n\n\t\tpendingRefreshModule = setTimeout(async () => {\n\t\t\tawait My.recalculateMenu();\n\t\t\tMy.nodeCount = deepCount(Blackprint.availableNode, true);\n\t\t}, 250);\n\t}\n\tlet pendingRefreshVars;\n\tMy.refreshVarsCounter = () => {\n\t\tclearTimeout(pendingRefreshVars);\n\n\t\tpendingRefreshVars = setTimeout(() => {\n\t\t\tMy.variableCount = deepCount(My.variables);\n\t\t\tMy.functionCount = deepCount(My.functions);\n\t\t\tMy.eventCount = deepCount(My.events);\n\n\t\t\tif(My.isFunctionSketch){\n\t\t\t\tMy.functionSharedVariableLength = deepCount(My.funcSharedVariable);\n\t\t\t\tMy.functionVariableLength = deepCount(My.funcVariable);\n\t\t\t}\n\t\t}, 250);\n\t}\n\n\tMy.groupListElObserver ??= new IntersectionObserver((entries, observer)=> {\n\t\tentries.forEach((entry) => {\n\t\t\tlet model = entry.target.model;\n\t\t\tlet list = My.groupList;\n\t\t\tfor (let i=0; i < list.length; i++) {\n\t\t\t\tlet temp = list[i];\n\t\t\t\tif(temp.iface === model){\n\t\t\t\t\ttemp.active = entry.intersectionRatio !== 0;\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}, {\n\t\troot: null,\n\t\trootMargin: \"0px\",\n\t\tthreshold: [0, 0.05, 1],\n\t});\n\n\tMy._onNodeCreated = ({ iface }) => {\n\t\tif(iface.node.instance !== sketch) return;\n\t\tif(iface.namespace === 'Decoration/Group/Default' && My.groupList.findIndex(v=> v.iface === iface) === -1) {\n\t\t\tlet obj = { iface, title: iface.data?.title, active: false };\n\t\t\tMy.groupList.push(obj);\n\t\t\tsf.watch(iface.data, 'title', ()=> {\n\t\t\t\tobj.title = iface.data.title;\n\t\t\t\treSortGroups();\n\t\t\t});\n\n\t\t\treSortGroups();\n\t\t\t$.afterRepaint().then(() => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif(iface.$el == null) return;\n\t\t\t\t\tMy.groupListElObserver.observe(iface.$el.eq(0).children('.node')[0]);\n\t\t\t\t}, 100);\n\t\t\t});\n\t\t}\n\t};\n\n\tMy._onNodeDeleted = ({ iface }) => {\n\t\tlet i = My.groupList.findIndex(v=> v.iface === iface);\n\t\tif(i !== -1) My.groupList.splice(i, 1);\n\t};\n\n\tMy.init = function(){\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\n\t\tsketchPage.panels.left = My;\n\t\tMy.recalculateMenu();\n\t\tMy.refreshNodesCounter();\n\n\t\tlet clearTooltip = ()=> ToolTip.set();\n\n\t\tMy.$el('.variable-list > .title').on('pointerleave', clearTooltip).on('pointerover', ()=> {\n\t\t\tToolTip.set(\"Can be used for storing output port's value or\\naccess stored data into an input port\");\n\t\t});\n\n\t\tMy.$el('.function-list > .title').on('pointerleave', clearTooltip).on('pointerover', ()=> {\n\t\t\tToolTip.set(\"Can be used for creating custom function node or\\ngrouping many nodes as a single node\");\n\t\t});\n\n\t\tMy.$el('.event-list > .title').on('pointerleave', clearTooltip).on('pointerover', ()=> {\n\t\t\tToolTip.set(\"Can be used as event emitter that can be accessed\\ninside any function or root instance\");\n\t\t});\n\n\t\tMy.$el('.group-list > .title').on('pointerleave', clearTooltip).on('pointerover', ()=> {\n\t\t\tToolTip.set(\"Region markers that can be used to grouping nodes in this page\\nIt's recommended to use numbered title\\n\\nYou can create a region marker by hold\\nleft click + move + right click\");\n\t\t});\n\n\t\tMy.$el('.node-list > .title').on('pointerleave', clearTooltip).on('pointerover', ()=> {\n\t\t\tToolTip.set(\"Nodes that registered to Blackprint\\nYou can create your own node or import it from external sources\");\n\t\t});\n\n\t\tsketch.on('node.created', data => My._onNodeCreated(data));\n\t\tsketch.on('node.deleted', data => My._onNodeDeleted(data));\n\n\t\tif(My.isFunctionSketch)\n\t\t\tfuncNodeInstance.rootInstance.on('variable.new variable.deleted', ev => My.refreshVarsCounter(ev));\n\n\t\tBlackprint.on('module.added', ev => My.refreshNodesCounter(ev)); // ToDo: use dot to separate event scope\n\t\tBlackprint.on('module.delete', ev => My.refreshNodesCounter(ev));\n\t\tBlackprint.on('module.update', ev => My.refreshNodesCounter(ev));\n\t\tBlackprint.on('bp_editorNodeAvailability', ev => My.refreshNodesCounter(ev));\n\t\t$(My.refreshNodesCounter); // Run when all script/page is loaded\n\t\t$(My.refreshVarsCounter); // Run when all script/page is loaded\n\n\t\tsketch.on('json.imported', ev => My.refreshVarsCounter(ev));\n\t\tsketch.on('variable.new variable.deleted function.new function.deleted', ev => My.refreshVarsCounter(ev));\n\n\t\tlet ifaceList = sketch.ifaceList;\n\t\tfor (let i=0; i < ifaceList.length; i++) {\n\t\t\tlet iface = ifaceList[i];\n\t\t\tif(iface.namespace === 'Decoration/Group/Default') My._onNodeCreated({ iface });\n\t\t}\n\t}\n\n\tlet recheckPreviewSize;\n\tMy.setPreview = function(el){\n\t\tif(el == null || My.preview !== el){\n\t\t\trecheckPreviewSize?.disconnect();\n\t\t\trecheckPreviewSize = null;\n\t\t}\n\n\t\tMy.preview = el;\n\t\tMy.previewScale = 1;\n\t\tMy.scaledPreviewHeight = 1;\n\n\t\tif(recheckPreviewSize != null || el == null)\n\t\t\treturn;\n\n\t\tlet checkTime = 0;\n\t\tlet checker = async function(){\n\t\t\tawait $.afterRepaint();\n\n\t\t\tlet width = el.clientWidth;\n\t\t\tlet height = el.clientHeight;\n\t\t\tlet scale = My.previewWidth / width;\n\n\t\t\tcheckTime = Math.round(Date.now() / 100);\n\n\t\t\tMy.previewScale = scale;\n\t\t\tMy.scaledPreviewHeight = height * scale;\n\t\t}\n\n\t\trecheckPreviewSize = new ResizeObserver(function(items){\n\t\t\tif(checkTime === Math.round(Date.now() / 100)) return;\n\t\t\tsetTimeout(checker, 200);\n\t\t});\n\t\trecheckPreviewSize.observe(el);\n\n\t\tsetTimeout(checker, 100);\n\t}\n\n\tfunction removeBlur(){\n\t\tMy.$el.css('backdrop-filter', 'none');\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\n\t}\n\n\tMy.openPanel = function(){\n\t\tremoveBlur();\n\t\tMy.$el.parent('sketch-page').removeClass('left-menu-hide');\n\t\tMy.opened = true;\n\t\tsketch.recalculatePosition();\n\t}\n\n\tMy.closePanel = function(ev){\n\t\tremoveBlur();\n\t\tev.stopPropagation();\n\t\tMy.$el.parent('sketch-page').addClass('left-menu-hide');\n\t\tMy.opened = false;\n\t\tsketch.recalculatePosition();\n\t}\n\n\tMy.collapseTree = function(el){\n\t\tel = el.nextElementSibling;\n\t\tif(el == null) return;\n\n\t\tlet hidden;\n\t\tlet parent = $(el.parentNode);\n\n\t\tif(parent.hasClass('tree-view') || parent.hasClass('tree-no-model'))\n\t\t\thidden = !parent.hasClass('collapsed');\n\t\telse hidden = el.model.hidden = !el.model.hidden;\n\n\t\tif(hidden)\n\t\t\tparent.addClass(\"collapsed\");\n\t\telse {\n\t\t\tif(el.model != null) reSort(el.parentNode.model);\n\t\t\tparent.removeClass(\"collapsed\");\n\t\t}\n\n\t\tMy.recalculateMenu();\n\t}\n\n\tMy.collapseSubPanel = (el, isMain) => {\n\t\tlet temp = $(el);\n\t\tlet parent = temp.parent();\n\t\tparent.toggleClass(\"collapsed\");\n\n\t\tif(!isMain) return;\n\t\tMy.recalculateMenu();\n\n\t\tlet collapseBtn = temp.find('.collapse-btn').removeClass('fa-chevron-down').removeClass('fa-chevron-right');\n\n\t\tif(parent.hasClass('collapsed'))\n\t\t\tcollapseBtn.addClass('fa-chevron-right');\n\t\telse collapseBtn.addClass('fa-chevron-down');\n\t}\n\n\tMy.recalculateMenu = async function(){\n\t\tlet variableMenu = My.$el('.variable-list');\n\t\tlet functionMenu = My.$el('.function-list');\n\t\tlet eventMenu = My.$el('.event-list');\n\t\tlet groupMenu = My.$el('.group-list');\n\t\tlet nodeMenu = My.$el('.node-list');\n\n\t\tif(variableMenu[0] == null) return;\n\t\tlet $menus = [variableMenu, functionMenu, eventMenu, groupMenu, nodeMenu];\n\t\tlet menuLength = $menus.length;\n\n\t\tlet menuContainer = variableMenu.parent();\n\t\tlet maxContainerHeight = menuContainer[0].offsetHeight;\n\t\tlet maxMenuHeight = Math.round(maxContainerHeight / menuLength);\n\n\t\t// Save current scroll position for each menu\n\t\tlet scrolls = $menus.map(v => v.find('.tree-view-scroll')[0].scrollTop);\n\n\t\t// Maximize all menu size\n\t\t$menus.forEach(v => v.css('max-height', ``).css('flex', `unset`).css('min-height', `unset`));\n\t\tawait $.afterRepaint();\n\n\t\t$menus.forEach(v => {\n\t\t\tlet height = v[0].offsetHeight;\n\t\t\tif(height < maxMenuHeight*2) v.css('max-height', `${height}px`);\n\t\t\tv.css('min-height', ``).css('flex', ``);\n\t\t});\n\n\t\t// Restore scroll position for each menu after size reset\n\t\t$menus.forEach((v, i) => v.find('.tree-view-scroll')[0].scrollTop = scrolls[i]);\n\t}\n\n\tMy.nodeListLeave = ev => {\n\t\tif(ev.pressure === 0) ToolTip.set();\n\t};\n\tMy.nodeListHover = ev => {\n\t\tif(ev.pressure !== 0) return; // Run on hover only, and no button click\n\n\t\tif(!ev.target.classList.contains('title'))\n\t\t\treturn ToolTip.set(false);\n\n\t\tlet itemEl = $(ev.target.parentNode);\n\t\tif(itemEl.hasClass('has-child'))\n\t\t\treturn ToolTip.set(false);\n\n\t\tlet key = itemEl.attr('tree-item-key');\n\t\tlet parentKey = itemEl[0].parentNode.model.parentKey;\n\n\t\tlet keys = parentKey.split('/');\n\t\tkeys.push(key);\n\n\t\tlet docs = Blackprint._utils.getDeepProperty(Blackprint._docs, keys);\n\t\tif(docs == null)\n\t\t\treturn ToolTip.set(false);\n\n\t\tToolTip.set(docs.description, ev, 'basic');\n\t};\n\n\tMy.checkDragNode = ev => {\n\t\tlet focus = ev.target;\n\t\tif(focus.nextElementSibling != null) return;\n\n\t\tfocus = $(focus);\n\n\t\tlet section = focus.parent('.tree-view').attr('tree-section');\n\t\tlet itemEl = focus[0].parentNode;\n\t\tlet key = itemEl.getAttribute('tree-item-key');\n\t\tif(key == null && section !== 'groups') return;\n\n\t\tlet parent = focus.parent(\".tree-item.has-child > tree-list, .tree-view > .tree-item\")[0];\n\t\tif(parent == null) return;\n\n\t\tif(ev.button === 2){\n\t\t\t$(window).once('contextmenu', ev2 => {\n\t\t\t\tif(ev.target !== ev2.target) return;\n\t\t\t\tev2.preventDefault();\n\n\t\t\t\tlet model = itemEl.model;\n\t\t\t\tif(section === 'nodes') return; // Do nothing for now\n\t\t\t\tif(model == null) return;\n\n\t\t\t\tlet menu = [{\n\t\t\t\t\ttitle: \"Rename\",\n\t\t\t\t\tasync callback(){\n\t\t\t\t\t\tasync function dialog(title, placeholder, oldVal){\n\t\t\t\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\t\t\t\ttitle, inputPlaceholder: placeholder, inputValue: oldVal, input: \"text\",\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn val.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(section === 'environmentVar'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Environment Variable:\", \"MyApp_Custom_Variable\", model.key);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tlet modalObj = sf.model('environment-variables');\n\t\t\t\t\t\t\tmodalObj.renameEnv(model, {value: val});\n\t\t\t\t\t\t\tmodalObj.saveToLocalStorage();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'variables'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Variable Namespace:\", \"MyApp/Custom/Variable\", model.id);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tsketch.renameVariable(model.id, val, Blackprint.VarScope.Public);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'sharedVariables'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Shared Variable Name:\", \"MyApp_Custom_Variable\", model.id);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tlet instance = funcNodeInstance;\n\t\t\t\t\t\t\tinstance.renameVariable(model.id, val, Blackprint.VarScope.Shared);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'privateVars'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Private Variable Name:\", \"MyApp_Custom_Variable\", model.id);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tlet instance = funcNodeInstance;\n\t\t\t\t\t\t\tinstance.renameVariable(model.id, val, Blackprint.VarScope.Private);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'functions'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Function Namespace:\", \"MyApp/Custom/Function\", model.id);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tsketch.renameFunction(model.id, val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'functionInputs'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Input Port Name:\", \"MyInputPortName\", model.name);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tsketch.parentInterface.renamePort('input', model.name, val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'functionOutputs'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Output Port Name:\", \"MyOutputPortName\", model.name);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tsketch.parentInterface.renamePort('output', model.name, val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'events'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Event Name:\", \"MyApp/Event/Name\", model.namespace);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tsketch.events.renameEvent(model.namespace, val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(section === 'groups'){\n\t\t\t\t\t\t\tlet val = await dialog(\"Rename Group Name:\", \"No title\", model.iface.data.title);\n\t\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\t\tmodel.iface.data.title = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttitle: \"Delete\",\n\t\t\t\t\tdescription: \"Hold shift for instant delete\",\n\t\t\t\t\tasync callback(){\n\t\t\t\t\t\tif(!DropDown.lastClickEvent.shiftKey){\n\t\t\t\t\t\t\tlet result = await Swal.fire({\n\t\t\t\t\t\t\t\ttitle: 'Are you sure want to delete this?',\n\t\t\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\t\t\tconfirmButtonText: 'Yes',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(!result.isConfirmed) return;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(section === 'environmentVar') Blackprint.Environment.delete(model.key);\n\t\t\t\t\t\telse if(section === 'variables') sketch.deleteVariable(model.id, Blackprint.VarScope.Public);\n\t\t\t\t\t\telse if(section === 'sharedVariables')\n\t\t\t\t\t\t\tfuncNodeInstance.deleteVariable(model.id, Blackprint.VarScope.Shared);\n\t\t\t\t\t\telse if(section === 'privateVars')\n\t\t\t\t\t\t\tfuncNodeInstance.deleteVariable(model.id, Blackprint.VarScope.Private);\n\t\t\t\t\t\telse if(section === 'functions') sketch.deleteFunction(model.id);\n\t\t\t\t\t\telse if(section === 'functionInputs') funcNodeInstance.deletePort('input', model.name);\n\t\t\t\t\t\telse if(section === 'functionOutputs') funcNodeInstance.deletePort('output', model.name);\n\t\t\t\t\t\telse if(section === 'events') sketch.events.deleteEvent(model.namespace);\n\t\t\t\t\t\telse if(section === 'groups') sketch.deleteNode(model.iface);\n\t\t\t\t\t}\n\t\t\t\t}];\n\n\t\t\t\tDropDown.show(menu, ev);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif(section === 'groups') return;\n\n\t\tlet endEvent = 'pointerup';\n\t\tif(ev.pointerType === 'touch')\n\t\t\tendEvent = 'touchend';\n\n\t\tToolTip.set(\"Create node\");\n\t\t$(sf.Window).once(endEvent, evUp => {\n\t\t\tToolTip.set();\n\n\t\t\tlet targetEl = evUp.target;\n\t\t\tif(endEvent === 'touchend'){\n\t\t\t\tlet { clientX, clientY } = evUp.changedTouches[0];\n\t\t\t\tevUp.clientX = clientX;\n\t\t\t\tevUp.clientY = clientY;\n\t\t\t\ttargetEl = document.elementFromPoint(clientX, clientY);\n\t\t\t}\n\n\t\t\tif(targetEl.closest('sketch-page') == null) return;\n\t\t\tif(targetEl.closest('sf-m.cables') != null){\n\t\t\t\tlet parentKey = parent.model.parentKey;\n\t\t\t\tlet namespace = !!parentKey ? (parentKey + '/' + key) : key;\n\n\t\t\t\t$.afterRepaint().then(function(){\n\t\t\t\t\tlet offset = targetEl.getBoundingClientRect();\n\t\t\t\t\tlet container = sketch.scope('container');\n\t\t\t\t\tlet posX = (evUp.clientX - offset.x) / container.scale;\n\t\t\t\t\tlet posY = (evUp.clientY - offset.y) / container.scale;\n\t\t\t\t\tlet nodeOptions = { x: posX, y: posY };\n\n\t\t\t\t\tif(section === 'nodes'){\n\t\t\t\t\t\tsketch.createNode(namespace, nodeOptions);\n\t\t\t\t\t}\n\t\t\t\t\telse if(section === 'functions'){\n\t\t\t\t\t\titemEl.model.createNode(sketch, nodeOptions);\n\t\t\t\t\t}\n\t\t\t\t\telse if(section === 'variables' || section === 'sharedVariables' || section === 'privateVars'){\n\t\t\t\t\t\tlet scope;\n\t\t\t\t\t\tif(section === 'variables') scope = 0;\n\t\t\t\t\t\telse if(section === 'sharedVariables') scope = 2;\n\t\t\t\t\t\telse if(section === 'privateVars') scope = 1;\n\n\t\t\t\t\t\tnodeOptions.data = { name: namespace, scope };\n\t\t\t\t\t\tDropDown.show([{\n\t\t\t\t\t\t\ttitle: \"Get \" + namespace, callback(){\n\t\t\t\t\t\t\t\tsketch.createNode('BP/Var/Get', nodeOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\ttitle: \"Set \" + namespace, callback(){\n\t\t\t\t\t\t\t\tsketch.createNode('BP/Var/Set', nodeOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}], {x: evUp.clientX, y: evUp.clientY, event: evUp});\n\t\t\t\t\t}\n\t\t\t\t\telse if(section === 'environmentVar'){\n\t\t\t\t\t\tnodeOptions.data = { name: key };\n\t\t\t\t\t\tDropDown.show([{\n\t\t\t\t\t\t\ttitle: \"Get \" + key, callback(){\n\t\t\t\t\t\t\t\tsketch.createNode('BP/Env/Get', nodeOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\ttitle: \"Set \" + key, callback(){\n\t\t\t\t\t\t\t\tsketch.createNode('BP/Env/Set', nodeOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}], {x: evUp.clientX, y: evUp.clientY, event: evUp});\n\t\t\t\t\t}\n\t\t\t\t\telse if(section === 'functionInputs'){\n\t\t\t\t\t\tnodeOptions.data = { name: key };\n\t\t\t\t\t\tsketch.createNode('BP/FnVar/Input', nodeOptions);\n\t\t\t\t\t}\n\t\t\t\t\telse if(section === 'functionOutputs'){1\n\t\t\t\t\t\tnodeOptions.data = {};\n\t\t\t\t\t\tsketch.createNode('BP/Fn/Output', nodeOptions);\n\t\t\t\t\t}\n\t\t\t\t\telse if(section === 'events'){\n\t\t\t\t\t\tnodeOptions.data = { namespace: namespace };\n\t\t\t\t\t\tDropDown.show([{\n\t\t\t\t\t\t\ttitle: \"Listen \" + key, callback(){\n\t\t\t\t\t\t\t\tsketch.createNode('BP/Event/Listen', nodeOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\ttitle: \"Emit \" + key, callback(){\n\t\t\t\t\t\t\t\tsketch.createNode('BP/Event/Emit', nodeOptions);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}], {x: evUp.clientX, y: evUp.clientY, event: evUp});\n\t\t\t\t\t}\n\t\t\t\t\telse console.error(\"Unhandled side panel section:\", section);\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\t}\n\n\tMy.createVariable = async (ev, scope) => {\n\t\tlet val = await Swal.fire({\n\t\t\ttitle: \"Variable Name:\",\n\t\t\tinputPlaceholder: scope === Blackprint.VarScope.Public\n\t\t\t\t? \"MyApp/Custom/Variable\" : \"MyApp_Custom_Variable\",\n\t\t\tinput: \"text\",\n\t\t});\n\n\t\tval = val.value;\n\t\tif(!val) return;\n\n\t\tlet funcInstance = sketch.parentInterface?.node.bpFunction;\n\t\tlet rootInstance = funcInstance?.rootInstance ?? sketch;\n\n\t\tif(scope === Blackprint.VarScope.Public)\n\t\t\treturn rootInstance.createVariable(val);\n\t\telse if(scope === Blackprint.VarScope.Shared || scope === Blackprint.VarScope.Private)\n\t\t\treturn funcInstance.createVariable(val, { scope });\n\t\telse throw new Error(\"Unhandled scope: \" + scope);\n\n\t\tMy.recalculateMenu();\n\t}\n\n\tMy.createFunction = async ev => {\n\t\tlet val = await Swal.fire({\n\t\t\ttitle: \"Function Name:\",\n\t\t\tinputPlaceholder: \"MyApp/Custom/Function\",\n\t\t\tinput: \"text\",\n\t\t});\n\n\t\tval = val.value;\n\t\tif(!val) return;\n\n\t\tlet rootInstance = sketch.parentInterface?.node.bpFunction.rootInstance ?? sketch;\n\t\trootInstance.createFunction(val, {description: \"No description\"});\n\n\t\tMy.recalculateMenu();\n\t}\n\n\tMy.createEvent = async ev => {\n\t\tlet val = await Swal.fire({\n\t\t\ttitle: \"Event Namespace:\",\n\t\t\tinputPlaceholder: \"MyApp/Custom/Event\",\n\t\t\tinput: \"text\",\n\t\t});\n\n\t\tval = val.value;\n\t\tif(!val) return;\n\n\t\tlet rootInstance = sketch.parentInterface?.node.bpFunction.rootInstance ?? sketch;\n\t\trootInstance.events.createEvent(val);\n\n\t\tMy.recalculateMenu();\n\t}\n\n\tMy.createCustomNode = ev => {\n\t\tModal.goto('/custom-node-editor');\n\t}\n\n\tMy.groupListLeave = () => {\n\t\tToolTip.set();\n\t\tMy.groupList.forEach(v=> v.iface.$el.children('.node').removeClass('highlighted'));\n\t}\n\tMy.groupListHover = ({ iface }) => {\n\t\tMy.groupListLeave();\n\t\tToolTip.set({\n\t\t\ttitle: iface.data.title,\n\t\t\tdesc: iface.data.textContent,\n\t\t\tcomment: iface.comment,\n\t\t}, null, 'general');\n\n\t\tiface.$el.children('.node').addClass('highlighted');\n\t}\n\tMy.groupListSelect = item => {\n\t\tlet container = sketch.scope('container');\n\t\tlet { x, y } = item.iface;\n\n\t\tx -= 40;\n\t\ty -= 40;\n\n\t\tif(x < 0) x = 0;\n\t\tif(y < 0) y = 0;\n\n\t\tx = container.scale * x;\n\t\ty = container.scale * y;\n\n\t\tcontainer.moveContainer({x: -x, y: -y});\n\t\titem.iface.swapZIndex(); // Simulate click to the group node\n\t}\n});","This tree list accept: {\n\tKey: {\n\t\tDeepKey: {...}\n\t}\n}\n\n## html\n<tree-list class=\"tree-list-menu {{ hidden ? 'hidden' : '' }}\">\n\t<div class=\"tree-item\" sf-each=\"key, val in deep\" tree-item-key=\"{{ key }}\">\n\t\t<div class=\"title\" @click=\"collapse(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\t\t{{@if hasChild(val):\n\t\t\treturn new $TreeList({\n\t\t\t\tparentKey: parentKey, key, val, hasChild: hasChild, onToggle: onToggle\n\t\t\t});\n\t\t}}\n\t</div>\n</tree-list>\n\n## scss-global\n.tree-list-menu.hidden {\n\tdisplay: none;\n}\n\n.tree-item{\n\tpadding-left: 20px;\n\t&.has-child {\n\t\tpadding-left: 10px;\n\t}\n\t.title {\n\t\tuser-select: none;\n\t\tcursor: pointer;\n\t}\n}\n\n.tree-item.has-child > .title .tree-icon:before {\n\tcolor: gray;\n\tcontent: \"\\f0d7\";\n\tpadding-right: 5px;\n}\n\n.tree-item.has-child.collapsed > .title .tree-icon:before {\n\tcontent: \"\\f0da\";\n}\n\n## js-global\nsf.component('tree-list', {template: #this.path}, function(My, include, $item={}){\n\tMy.parentKey = $item.parentKey ?? '';\n\tMy.parentKey += $item.key && My.parentKey !== '' ? `/${$item.key}` : ($item.key ?? '');\n\n\tMy.deep = $item.val ?? {};\n\tMy.hidden = true;\n\tMy.hasChild = $item.hasChild ?? (obj => obj.constructor === Object);\n\tMy.onToggle = $item.onToggle ?? function(){};\n\n\tMy.init = function(){\n\t\tMy.$el.parent().addClass(\"has-child\").addClass(\"collapsed\");\n\t}\n\n\tMy.collapse = function(el){\n\t\tel = el.nextElementSibling;\n\t\tif(el == null) return;\n\n\t\tlet hidden = el.model.hidden = !el.model.hidden;\n\n\t\tif(hidden)\n\t\t\t$(el.parentNode).addClass(\"collapsed\");\n\t\telse $(el.parentNode).removeClass(\"collapsed\");\n\n\t\tMy.onToggle(hidden);\n\t}\n});","## html.append-to-body\n<!-- /src/model/loading.sf -->\n<sf-m name=\"loading\" class=\"{{ showed && 'show' }}\">\n\t<span class=\"icon\"><i class=\"fa fa-fan fa-spin\"></i></span>\n\t<span class=\"desc\">{{ desc }}</span>\n</sf-m>\n\n## scss-global\nsf-m[name=\"loading\"]{\n\tdisplay: none;\n\tbackground: #000000ba;\n\tpointer-events: none;\n\tpadding: 7px 15px;\n\tborder-radius: 20px;\n\tbox-shadow: 0 0 11px white;\n\tposition: fixed;\n\ttop: 60px;\n\tcolor: white;\n\tright: 10px;\n\tz-index: 100;\n\n\t&.show{\n\t\tdisplay: block;\n\t}\n\n\t.icon{\n\t\tpadding-right: 5px;\n\t}\n}\n\n## js-global\nvar Loading = sf.model('loading', function(My){\n\tMy.showed = false;\n\tMy.desc = '';\n\n\tMy.set = function(text){\n\t\tif(!text)\n\t\t\tMy.showed = false;\n\t\telse My.showed = true;\n\n\t\tMy.desc = text;\n\t}\n});","## html\n<sf-m name=\"header\" class=\"header {{ showOptions ? 'sketch-mode' : '' }}\">\n\t<div class=\"header-left\" @click=\"mainMenu\">\n\t\t<img src=\"/assets/img/icon/blackprint.png\">\n\t\t<div>Blackprint</div>\n\t\t<i class=\"fa fa-caret-down menu-button-hint\"></i>\n\t</div>\n\t<div class=\"header-center {{ showTabs ? 'hide':'' }}\">\n\t\t<div>A node to node general purpose visual programming</div>\n\t</div>\n\t<div class=\"header-project-tabs {{ !showTabs ? 'hide':'' }}\">\n\t\t<sf-template path=\"BPEditor/model/project-list.sf\"></sf-template>\n\t</div>\n\t<div class=\"header-menu\">\n\t\t<div class=\"item-list\">\n\t\t\t<div class=\"item\" @click=\"openDocumentation\" title=\"Guide or Documentation\"><i class='fa fa-journal-whills'></i></div>\n\t\t\t<div class=\"item\" @click=\"Modal.goto('/module-example-list')\" title=\"Module examples\">\n\t\t\t\t<i class='fa fa-map-signs'></i>\n\t\t\t\t<div class=\"module-counter\">{{ _moduleExampleList.length }}</div>\n\t\t\t</div>\n\t\t\t<div class=\"item\" @click=\"Modal.goto('/module-url')\" title=\"Loaded module\">\n\t\t\t\t<i class='fa fa-boxes'></i>\n\t\t\t\t<div class=\"module-counter\">{{ _loadedModuleURL.length }}</div>\n\t\t\t</div>\n\t\t\t<div class=\"item\" @click=\"cloneContainer\" title=\"Open in new window\"><i class='fa fa-window-restore'></i></div>\n\t\t\t<div class=\"item {{ disableVFXActive ? 'active' : '' }}\" @click=\"disableVFX\" title=\"Improve performance by disable VFX\"><i class=\"fas fa-rocket\"></i></div>\n\t\t\t<div class=\"item {{ visualizeActive ? 'active' : '' }}\" @click=\"visualizeFlow\" title=\"Visualize data flow\"><i class=\"fas fa-bezier-curve\"></i></div>\n\t\t</div>\n\t\t<div class=\"header-zoom\">\n\t\t\t<div style=\"display: {{ info.scale === 100 ? 'none' : 'block' }}\">\n\t\t\t\t<i class=\"fas fa-search\"></i> {{ info.scale | 0 }}%\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nbody > .header {\n\t&> .hide {\n\t\tdisplay: none;\n\t}\n\t.header-project-tabs{\n\t\talign-self: baseline;\n\t}\n\n\tz-index: 1;\n\tbackdrop-filter: blur(1px);\n\tposition: relative;\n\tbackground: #00000085;\n\talign-items: center;\n\tborder-bottom: 1px solid black;\n\tdisplay: flex;\n\tbox-shadow: 0 0 8px 0 black;\n\n\t.header-left {\n\t\tborder-right: 2px solid;\n\t\tfont-size: 24px;\n\t\tpadding: 0 15px 0 18px;\n\t\ttext-align: center;\n\t\tdisplay: table;\n\t\timg{\n\t\t\theight: 50px;\n\t\t\tfilter: drop-shadow(0 0 2px white);\n\t\t\tdisplay: inline-block;\n\t\t\tvertical-align: middle;\n\t\t\tmargin-right: 8px;\n\t\t}\n\t\tdiv{\n\t\t\tvertical-align: middle;\n\t\t\tdisplay: inline-block;\n\t\t}\n\n\t\t.menu-button-hint{\n\t\t\tdisplay: none;\n\t\t\tposition: absolute;\n\t\t\tbottom: -3px;\n\t\t\tleft: 100px;\n\t\t}\n\n\t\t&:hover{\n\t\t\t.menu-button-hint, div{\n\t\t\t\tcolor: #bdbdbd;\n\t\t\t}\n\t\t}\n\t}\n\n\t.header-center {\n\t\tfont-size: 18px;\n\t\ttext-align: center;\n\t\tpadding: 10px;\n\t\theight: 24px;\n\t}\n\n\t&.sketch-mode{\n\t\t.header-left{\n\t\t\tcursor: pointer;\n\t\t\ti.menu-button-hint{\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\t\t.header-menu{\n\t\t\tdisplay: inherit;\n\t\t}\n\t}\n\n\t.header-menu{\n\t\tdisplay: none;\n\t\t.item-list{\n\t\t\tdisplay: flex;\n\t\t\tposition: absolute;\n\t\t\tright: 0px;\n\t\t\ttop: 12px;\n\t\t\tfont-size: 22px;\n\t\t\t.item{\n\t\t\t\tpadding: 0 10px;\n\t\t\t\tcursor: pointer;\n\t\t\t\tposition: relative;\n\n\t\t\t\t&.active{\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\n\t\t\t\t.module-counter {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tfont-size: 10px;\n\t\t\t\t\tcolor: black;\n\t\t\t\t\tbackground: #ffffffde;\n\t\t\t\t\tbox-shadow: 0 0 6px white;\n\t\t\t\t\tborder-radius: 100%;\n\t\t\t\t\tpadding: 2px 3px 2px 4px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\theight: 12px;\n\t\t\t\t\tmin-width: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.header-zoom{\n\t\t\tposition: absolute;\n\t\t\tright: 10px;\n\t\t\tcolor: white;\n\t\t\topacity: 0.8;\n\t\t\ttop: 50px;\n\t\t\tfont-size: 22px;\n\t\t}\n\t}\n\n\t.header-center{\n\t\t.item-list{\n\t\t\tdisplay: flex;\n\t\t\tposition: absolute;\n\t\t\ttop: 12px;\n\t\t\tfont-size: 22px;\n\t\t\t.item{\n\t\t\t\tpadding: 0 10px;\n\t\t\t\tcursor: pointer;\n\n\t\t\t\t&.active{\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@media(max-width: 900px){\n\t\t.header-center div {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\tsf-m[name=\"modal\"]{\n\t\t\toverflow: scroll;\n\t\t}\n\t}\n\n\t.large-header{\n\t\tvw-ground{\n\t\t\theight: calc(100vh - 86px);\n\t\t}\n\t\t.header .header-left div{\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n\n.header-left-menu{\n\t.dropdown-menu li{\n\t\tmin-width: 170px;\n\t}\n}\n\n## js-global\n// https://www.npmjs.com/package/scarletsframe#initializedefine-model\nvar EditorHeader = sf.model('header', function(My, include){\n\tMy.message = \"Hello\";\n\tMy.showOptions = false;\n\tMy.showTabs = false;\n\tMy.info = {scale:100};\n\tMy._loadedModuleURL = Blackprint._modulesURL;\n\tMy._moduleExampleList = window._moduleExampleList ??= []; // will be referenced by: /src/routes/+vw-modal/module-example-list.sf\n\n\tMy.init = function(){\n\t\tsf.URI.parse(); // Trigger to reparse current URL\n\t}\n\n\tMy.mainMenu = function(ev){\n\t\tif(My.showOptions === false) return;\n\t\tlet sketch = (CurrentSketch.rootInstance || CurrentSketch);\n\t\tlet sketchSocket = sf.model('modal-remote-sketch-connect').socket;\n\t\tlet engineSocket = sf.model('modal-remote-engine-connect').socket;\n\n\t\tinclude('dropdown').show([{\n\t\t\ttitle: 'Sketch',\n\t\t\ticon: 'fa fa-pencil-ruler',\n\t\t\tdeep:[{\n\t\t\t\ttitle: 'Open',\n\t\t\t\ticon: 'fa fa-folder-open',\n\t\t\t\tdeep:[{\n\t\t\t\t\ttitle: \"From Clipboard\",\n\t\t\t\t\tasync callback(){\n\t\t\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\t\t\ttitle: \"Paste the JSON here\",\n\t\t\t\t\t\t\tinput: \"text\",\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tval = val.value;\n\t\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t\tSketchImporter.loadJSON(val, sketch);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttitle: \"From File\",\n\t\t\t\t\tcallback(){\n\t\t\t\t\t\tvar el = document.createElement(\"input\");\n\t\t\t\t\t\tel.setAttribute('type', 'file');\n\t\t\t\t\t\tel.onchange = async function(){\n\t\t\t\t\t\t\tif(this.files.length === 0) return;\n\t\t\t\t\t\t\tif(this.files.length !== 1){\n\t\t\t\t\t\t\t\tconsole.log(this.files);\n\t\t\t\t\t\t\t\tconsole.log(\"Currently only support 1 file\");\n\t\t\t\t\t\t\t\tSmallNotif.add('Currently only support 1 file', 'error');\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet text = JSON.parse(await this.files[0].text());\n\t\t\t\t\t\t\tif(text){\n\t\t\t\t\t\t\t\ttext = text.trim();\n\t\t\t\t\t\t\t\tif(text.slice(0, 1) !== '{')\n\t\t\t\t\t\t\t\t\tSmallNotif.add('Data in the file is not a JSON', 'error');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tSketchImporter.loadJSON(text, sketch);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tel.click();\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}, {\n\t\t\t\ttitle:'Export',\n\t\t\t\ticon: 'fa fa-save',\n\t\t\t\tdeep:[{\n\t\t\t\t\ttitle: 'To Clipboard',\n\t\t\t\t\tasync callback(){\n\t\t\t\t\t\tlet confirm = await Swal.fire({\n\t\t\t\t\t\t\ttitle: \"Choose one of the export mode\",\n\t\t\t\t\t\t\tcancelButtonText: 'Minified JSON',\n\t\t\t\t\t\t\tconfirmButtonText: 'Prettified JS',\n\t\t\t\t\t\t\tdenyButtonText: 'Minimal JSON',\n\t\t\t\t\t\t\tdenyButtonColor: 'gray',\n\t\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\t\tshowDenyButton: true,\n\t\t\t\t\t\t\tshowCloseButton: true\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif(confirm.isDismissed && confirm.dismiss === 'backdrop')\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tlet option = {};\n\t\t\t\t\t\tif(confirm.isConfirmed){ // Prettified\n\t\t\t\t\t\t\toption.toJS = true;\n\t\t\t\t\t\t\toption.space = '\\t';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(confirm.isDenied){ // Minimal JSON export (no position/comment)\n\t\t\t\t\t\t\toption.position = false;\n\t\t\t\t\t\t\toption.comment = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toption.environment = false;\n\n\t\t\t\t\t\tvar temp = sketch.exportJSON(option);\n\t\t\t\t\t\tnavigator.clipboard.writeText(temp);\n\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttitle: \"Copied to clipboard!\",\n\t\t\t\t\t\t\ttext: temp\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttitle: 'To File',\n\t\t\t\t\tcallback(){\n\t\t\t\t\t\tvar btn = document.createElement(\"a\");\n\t\t\t\t\t\tvar opt = {environment: false};\n\t\t\t\t\t\tvar file = new Blob([sketch.exportJSON(opt)], {type: 'application/json'});\n\t\t\t\t\t\tbtn.href = URL.createObjectURL(file);\n\t\t\t\t\t\tbtn.download = 'blackprint.json';\n\t\t\t\t\t\tbtn.click();\n\n\t\t\t\t\t\t// Auto revoke after 120 sec\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\tURL.revokeObjectURL(btn.href);\n\t\t\t\t\t\t}, 120e3);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttitle: 'To URL',\n\t\t\t\t\tcallback(){\n\t\t\t\t\t\tvar opt = {environment: false};\n\t\t\t\t\t\tvar compress = pako.deflateRaw(sketch.exportJSON(opt), {level: 9});\n\t\t\t\t\t\tvar temp = Base64.fromUint8Array(compress, true);\n\n\t\t\t\t\t\tsf.URI.data.importSketch = [temp];\n\t\t\t\t\t\tsf.URI.replace();\n\n\t\t\t\t\t\tlet loc = location.href;\n\t\t\t\t\t\tnavigator.clipboard.writeText(loc);\n\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttitle: \"Copied to clipboard!\",\n\t\t\t\t\t\t\ttext: loc\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}, {\n\t\t\t\ttitle: 'Code Generation',\n\t\t\t\ticon: 'fa fa-save',\n\t\t\t\tcallback(){\n\t\t\t\t\tModal.goto('/code-generator');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\ttitle: 'Examples',\n\t\t\t\ticon: 'fa fa-layer-group',\n\t\t\t\tcallback(){\n\t\t\t\t\tModal.goto('/example-list');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\ttitle: 'Reload',\n\t\t\t\ticon: 'fa fa-sync',\n\t\t\t\tasync callback(){\n\t\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\t\ttitle: \"This action will export and reimport current sketch\",\n\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\tshowCloseButton: true\n\t\t\t\t\t});\n\n\t\t\t\t\tif(val.isDismissed)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tlet sketch = SketchList[0];\n\t\t\t\t\tlet opt = {environment: false};\n\t\t\t\t\tlet temp = sketch.exportJSON(opt);\n\t\t\t\t\tsketch.clearNodes();\n\n\t\t\t\t\tawait sketch.importJSON(temp);\n\t\t\t\t}\n\t\t\t}]\n\t\t}, {\n\t\t\ttitle: 'Modules',\n\t\t\ticon: 'fa fa-layer-group',\n\t\t\tdeep:[{\n\t\t\t\ttitle: 'Create Custom',\n\t\t\t\ticon: 'fa fa-plus',\n\t\t\t\thide: sf.hotReload === void 0,\n\t\t\t\tcallback(){\n\t\t\t\t\tModal.goto('/custom-node-editor');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\ttitle: 'Loaded module',\n\t\t\t\ticon: 'fa fa-boxes',\n\t\t\t\tcallback(){\n\t\t\t\t\tModal.goto('/module-url');\n\t\t\t\t}\n\t\t\t}]\n\t\t}, {\n\t\t\ttitle: 'Remote',\n\t\t\ticon: 'fa fa-plug',\n\t\t\thide: sf.hotReload === void 0,\n\t\t\tdeep:[{\n\t\t\t\ttitle: 'Sketch' + (sketchSocket?.connected ? ' ✔️' : ''),\n\t\t\t\ticon: 'fa fa-plug',\n\t\t\t\tdeep: sketchSocket?.connected ? [{\n\t\t\t\t\ttitle: 'Control Panel',\n\t\t\t\t\ticon: 'fa fa-grip-horizontal',\n\t\t\t\t\tcallback(){ Modal.goto('/remote-sync') },\n\t\t\t\t}, {\n\t\t\t\t\ttitle: 'Disconnect',\n\t\t\t\t\ticon: 'fa fa-power-off',\n\t\t\t\t\tcallback(){ sketchSocket.disconnect() },\n\t\t\t\t}] : undefined,\n\t\t\t\tcallback: !sketchSocket?.connected && (() => {\n\t\t\t\t\tModal.goto('/remote-sketch-connect');\n\t\t\t\t})\n\t\t\t}, {\n\t\t\t\ttitle: 'Engine' + (engineSocket?.connected ? ' ✔️' : ''),\n\t\t\t\ticon: 'fa fa-plug',\n\t\t\t\tdeep: engineSocket?.connected ? [{\n\t\t\t\t\ttitle: 'Control Panel',\n\t\t\t\t\ticon: 'fa fa-grip-horizontal',\n\t\t\t\t\tcallback(){ Modal.goto('/remote-sync') },\n\t\t\t\t}, {\n\t\t\t\t\ttitle: 'Disconnect',\n\t\t\t\t\ticon: 'fa fa-power-off',\n\t\t\t\t\tcallback(){ engineSocket.disconnect() },\n\t\t\t\t}] : undefined,\n\t\t\t\tcallback: !engineSocket?.connected && (() => {\n\t\t\t\t\tModal.goto('/remote-engine-connect');\n\t\t\t\t})\n\t\t\t}, {\n\t\t\t\ttitle: (function(){\n\t\t\t\t\tif(window.___browserSync___ === void 0)\n\t\t\t\t\t\treturn \"Module server\";\n\n\t\t\t\t\tlet socket = ___browserSync___.socket;\n\t\t\t\t\tlet isConnected = socket.connected;\n\t\t\t\t\tlet isDefault = socket.io.uri.indexOf(location.origin) === 0;\n\n\t\t\t\t\treturn 'Module server '+(!isConnected || isDefault ? \"\" : \"✔️\");\n\t\t\t\t})(),\n\t\t\t\ticon: 'fa fa-plug',\n\t\t\t\tcallback(){\n\t\t\t\t\tif(window.___browserSync___){\n\t\t\t\t\t\tlet socket = ___browserSync___.socket;\n\t\t\t\t\t\tlet isConnected = socket.connected;\n\t\t\t\t\t\tlet isDefault = socket.io.uri.indexOf(location.origin) === 0;\n\n\t\t\t\t\t\tif(isConnected && !isDefault)\n\t\t\t\t\t\t\tsocket.disconnect();\n\t\t\t\t\t}\n\n\t\t\t\t\tModal.goto('/dev-mode');\n\t\t\t\t}\n\t\t\t}]\n\t\t}, {\n\t\t\ttitle: 'Development Mode',\n\t\t\ticon: 'fa fa-tools',\n\t\t\thide: sf.hotReload !== void 0,\n\t\t\tasync callback(){\n\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\ttitle: \"Warning\",\n\t\t\t\t\ttext: \"Development mode editor is intended for developers only, because it has feature that can evaluating code you will need to be more aware with code that you will run or execute. Are you sure to continue?\",\n\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\tshowCloseButton: true\n\t\t\t\t});\n\n\t\t\t\tif(val.isDismissed) return;\n\t\t\t\tlocation.pathname = '/dev.html';\n\t\t\t}\n\t\t}, {\n\t\t\ttitle: 'Environment',\n\t\t\ticon: 'fa fa-key',\n\t\t\tcallback(){\n\t\t\t\tModal.goto('/environment-variables');\n\t\t\t}\n\t\t}, {\n\t\t\ttitle: 'Settings',\n\t\t\ticon: 'fa fa-tools',\n\t\t\tcallback(){\n\t\t\t\tModal.goto('/sketch-settings');\n\t\t\t}\n\t\t}, {\n\t\t\ttitle: 'Home',\n\t\t\ticon: 'fa fa-home',\n\t\t\tcallback(){\n\t\t\t\tviews.goto('/');\n\t\t\t}\n\t\t}], {\n\t\t\telement: My.$el('.header-left')[0],\n\t\t\tclassName: 'header-left-menu'\n\t\t});\n\t}\n\n\tMy.openDocumentation = function(){\n\t\tModal.goto('/documentation')\n\t}\n\n\tMy.cloneContainer = function(){\n\t\twindow.CurrentSketch.page.cloneContainer();\n\t}\n\n\tMy.disableVFXActive = false;\n\tMy.disableVFX = function(){\n\t\tMy.disableVFXActive = !My.disableVFXActive;\n\n\t\tif(My.disableVFXActive)\n\t\t\t$('body').addClass('blackprint-no-vfx');\n\t\telse $('body').removeClass('blackprint-no-vfx');\n\n\t\tlocalStorage.disableVFXActive = My.disableVFXActive ? '1' : '0';\n\t}\n\n\tif(localStorage.disableVFXActive === '1' && My.disableVFXActive === false)\n\t\tMy.disableVFX();\n\n\tMy.visualizeActive = true;\n\tMy.visualizeFlow = function(){\n\t\tMy.visualizeActive = !My.visualizeActive;\n\t\tBlackprint.settings('visualizeFlow', My.visualizeActive);\n\t}\n});","## html.append-to-body\n<!-- /src/model/modal.sf -->\n<sf-m name=\"modal\" class=\"modal {{ showed && 'show' }}\">\n  <div class=\"modal-dialog\">\n    <vw-modal></vw-modal>\n  </div>\n</sf-m>\n\n## scss-global\nsf-m.modal{\n\tgrid-template-columns: auto minmax(0, 1fr) auto;\n\tdisplay: none;\n\tposition: fixed;\n\tz-index: 1001;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbox-sizing: border-box;\n\tgrid-template-areas:\n\t    \"top-start top top-end\"\n\t    \"center-start center center-end\"\n\t    \"bottom-start bottom-center bottom-end\"\n\t    \"gap gap gap\";\n\tgrid-template-rows: auto auto auto .625em;\n\theight: 100%;\n\tpadding: .625em .625em 0;\n\toverflow-x: hidden;\n\tbackground: #00000000;\n\ttransition: background 0.3 linear;\n\n\t&.show{\n\t\tdisplay: grid;\n\t\tbackground: #00000060;\n\t\t.modal-dialog{\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.modal-dialog{\n\t\tdisplay: grid;\n\t\ttransition: opacity;\n\t\topacity: 0;\n\t\tgrid-column: 2;\n\t\tgrid-row: 2;\n\t\talign-self: center;\n\t\tjustify-self: center;\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tmax-width: 100%;\n\t}\n}\n\n## js-global\nvar Modal = sf.model('modal', function(My){\n\tMy.showed = false;\n\n\tMy.init = function(){\n\t\tMy.hotReloaded();\n\n\t\t$(window).on('keyup', function(ev){\n\t\t\tif(ev.key === \"Escape\"){\n\t\t\t\tif(My.showed) My.hide();\n\t\t\t}\n\t\t});\n\t}\n\tMy.hotReloaded = function(){\n\t\tMy.views = sf.Views.listSelector['vw-modal'];\n\t}\n\n\tlet onHide = {};\n\tMy.onHide = function(path, callback){\n\t\tlet list = onHide[path] ??= [];\n\t\tlist.push(callback);\n\t}\n\n\tMy._triggerHide = function(){\n\t\tlet list = onHide[My.views.currentPath];\n\t\tlist?.forEach(v => v());\n\t}\n\n\tMy.hide = function(){\n\t\tMy.showed = false;\n\t\tMy.$el('.modal-dialog').off('pointerdown', My.hide, {outside: true});\n\t\tMy._triggerHide();\n\t}\n\n\tMy.goto = function(path){\n\t\tMy._triggerHide();\n\n\t\tMy.views.goto(path);\n\t\tMy.showed = true;\n\n\t\tsetTimeout(()=> {\n\t\t\tMy.$el('.modal-dialog').on('pointerdown', My.hide, {outside: true});\n\t\t}, 400);\n\t}\n});","## html\n<sf-m name=\"project-list\">\n\t<div class=\"list\" title=\"Use Alt + 1/2/3 to switch between tab, Alt + W to close\">\n\t\t<div class=\"item {{ x.active && 'active' }}\" sf-each=\"x in list\" @contextmenu.prevent=\"openMenu(event, x)\">\n\t\t\t<i class=\"fa fa-sticky-note\"></i>\n\t\t\t<span @click=\"switchTab(x)\" title=\"{{ x.tooltip || '' }}\">{{ x.title }}</span>\n\t\t\t<i class=\"fa fa-{{ x.isUnsaved ? 'circle' : 'times close' }}\" @click=\"closeTab(x)\"></i>\n\t\t</div>\n\t</div>\n\t<div class=\"create-tab\" @click=\"createTab\" title=\"Create new instance, public variable/event/function will not be shared on the new instance\"><i class=\"fa fa-plus\"></i></div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"project-list\"] {\n\talign-self: baseline;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\twidth: calc(100vw - 500px);\n\tmax-height: 50px;\n\toverflow: auto;\n\n\t.list .item {\n\t\tposition: relative;\n\t\tdisplay: inline-flex;\n\t\tflex: 1 1;\n\t\tbackground: #ffffff14;\n\t\tborder-right: 1px solid #ffffff1a;\n\t\tborder-bottom: 1px solid #ffffff1a;\n\t\tcursor: pointer;\n\t\tpadding: 1px 10px;\n\t\theight: 22px;\n\t\t// flex-grow: initial;\n\t\tmax-width: 150px;\n\t\ti {\n\t\t\tfont-size: 12px;\n\t\t\talign-self: center;\n\t\t}\n\t\t.fa-circle, .close {\n\t\t\tposition: absolute;\n\t\t\tright: 3px;\n\n\t\t\t&:hover{\n\t\t\t\tbackground: #ffffff47;\n\t\t\t\tcolor: #ffffffb5;\n\t\t\t\tborder-radius: 100%;\n\t\t\t}\n\t\t}\n\t\t.fa-circle{\n\t\t\tfont-size: 9px;\n\t\t\tmargin: 0 3px 0 0;\n\t\t\tpadding: 0;\n\t\t}\n\t\t.close{\n\t\t\tpadding: 3px 4px 2px 4px;\n\t\t}\n\t\tspan {\n\t\t\tmargin-left: 5px;\n\t\t\tfont-size: 13px;\n\t\t\tpadding-right: 20px;\n\t\t\tpadding-top: 3px;\n\t\t}\n\t\t&.active {\n\t\t\tbackground: #ffffff24;\n\t\t\tcolor: #ffffffd1;\n\t\t}\n\t}\n\n\t.create-tab{\n\t\tmargin: 3px 3px 0px 5px;\n\t\tcursor: pointer;\n\t\tvertical-align: middle;\n\t\t// display: inline-flex;\n\t\t// margin: 1px 3px 0px 5px;\n\t\t&:hover {\n\t\t\tcolor: white;\n\t\t}\n\t}\n}\n\n## js-global\nsf.model(\"project-list\", My => {\n\tMy.list = [{active: true, title: 'Untitled-1', id: '1', isUnsaved: false, currentRoute: '/sketch/1'}];\n\tMy.uniqId = 2;\n\n\tMy.init = function(){\n\t\t// Avoid closing page when there are unsaved changes\n\t\twindow.addEventListener(\"beforeunload\", ev => {\n\t\t\t// Check for any unsaved tab\n\t\t\tlet list = My.list;\n\t\t\tlet hasUnsaved = false;\n\t\t\tfor (let i=0; i < list.length; i++) {\n\t\t\t\tif(list[i].isUnsaved){\n\t\t\t\t\thasUnsaved = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!hasUnsaved) return;\n\t\t\tev.preventDefault();\n\t\t\treturn (ev.returnValue = \"You have unsaved changes, are you sure to close this tab?\");\n\t\t}, { capture: true });\n\t}\n\n\tMy.storeCurrentSketchToTab = function(tab, i){\n\t\tsetTimeout(() => {\n\t\t\tlet pageIndex = CurrentSketch.page.$el.parent()[0].routerData.page;\n\t\t\tif(i !== pageIndex) throw new Error(\"Failed to save sketch page's reference\");\n\t\t\tif(tab.sketch === CurrentSketch) return;\n\n\t\t\ttab.sketch = CurrentSketch;\n\t\t\tCurrentSketch.tabInfo = tab;\n\t\t\tCurrentSketch.emit('editor.tabInfo', tab);\n\n\t\t\tCurrentSketch.on('cable.connect cable.disconnect node.created node.delete node.move node.id.changed port.default.changed _port.split _port.unsplit _port.resync.allow _port.resync.disallow variable.renamed', tab._needSave = function(){\n\t\t\t\ttab.isUnsaved = true;\n\t\t\t});\n\t\t}, 50);\n\t}\n\n\tMy.getActiveTab = function(){\n\t\tlet tabs = My.list;\n\t\tfor (let i=0; i < tabs.length; i++)\n\t\t\tif(tabs[i].active) return tabs[i];\n\t}\n\n\tMy.createTab = function(){\n\t\tlet i = '' + (My.uniqId++);\n\t\tlet tab = {active: false, title: 'Untitled-'+i, id: i, isUnsaved: false, currentRoute: '/sketch/'+i};\n\t\tMy.list.push(tab);\n\t\tMy.switchTab(tab);\n\t\tMy.storeCurrentSketchToTab(tab, i);\n\t\treturn tab;\n\t}\n\n\tMy.switchTab = function(tab){\n\t\tlet tabs = My.list;\n\t\tfor (let i=0; i < tabs.length; i++)\n\t\t\ttabs[i].active = false;\n\n\t\ttab.active = true;\n\t\tviews.goto(tab.currentRoute);\n\t}\n\n\tMy.saveTab = async function(tab){\n\t\tif(tab == null) return;\n\t\tif(tab === true){ // Save current active tab\n\t\t\tlet list = My.list;\n\t\t\tfor (let i=0; i < list.length; i++) {\n\t\t\t\tif(!list[i].active) continue;\n\t\t\t\ttab = list[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(!tab.title.includes('.bpi')) tab.title += '.bpi';\n\n\t\tlet workspacePanel = sf.model(\"project-panel-workspace\");\n\t\tlet file = await workspacePanel.resolvePath(EditorWorkingDir.name + '/instances/' + tab.title);\n\n\t\t// Create file if not exist\n\t\tif(file == null){\n\t\t\tfile = await EditorWorkingDir.createFile('instances/' + tab.title);\n\t\t\tawait workspacePanel.rescanFiles();\n\t\t}\n\n\t\tlet rootInstance = (tab.sketch.rootInstance || tab.sketch);\n\t\tawait file.writeData(tab.sketch.exportJSON({environment: false}));\n\t\ttab.isUnsaved = false;\n\n\t\tlet list = My.list;\n\t\tlet _list = [];\n\t\tfor (let i=0; i < list.length; i++) {\n\t\t\tif(list[i].title.endsWith('.bpi')) _list.push(list[i].title);\n\t\t}\n\n\t\tSmallNotif.add(\"Instance file saved to workspace\", 'green');\n\n\t\tif(_list.length === 0) return;\n\t\tworkspacePanel.setSetting('opened_instances', _list);\n\t}\n\n\tMy.openMenu = function(ev, tab){\n\t\tDropDown.show([{\n\t\t\ttitle: 'Rename',\n\t\t\tasync callback(){\n\t\t\t\tlet itemName = tab.title;\n\t\t\t\tlet extIndex = itemName.lastIndexOf('.bpi');\n\t\t\t\tif(extIndex === -1) extIndex = itemName.length;\n\n\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\ttitle: \"Rename to:\",\n\t\t\t\t\ttext: itemName.slice(0, extIndex),\n\t\t\t\t\tinput: \"text\",\n\t\t\t\t});\n\n\t\t\t\tval = val.value;\n\t\t\t\tif(!val) return;\n\n\t\t\t\tval = val + (val.slice(-4) != '.bpi' ? '.bpi' : '');\n\t\t\t\ttab.title = val;\n\n\t\t\t\t// Don't save as file if no workspace loaded\n\t\t\t\tif(EditorWorkingDir == null) return;\n\n\t\t\t\tlet workspacePanel = sf.model(\"project-panel-workspace\");\n\t\t\t\tlet path = EditorWorkingDir.name + '/instances/' + itemName;\n\n\t\t\t\t// Create file if not exist\n\t\t\t\tif(await workspacePanel.resolvePath(path) == null){\n\t\t\t\t\tawait EditorWorkingDir.createFile('instances/' + val);\n\t\t\t\t\tawait workspacePanel.rescanFiles();\n\t\t\t\t}\n\t\t\t\telse workspacePanel.fileRename(path, val);\n\t\t\t}\n\t\t}, {\n\t\t\ttitle: 'Save',\n\t\t\tcallback(){ My.saveTab(tab) }\n\t\t}], {x: ev.clientX, y: ev.clientY, event: ev});\n\t}\n\n\tMy.closeTab = function(tab, noSwitchTab=false){\n\t\tlet tabs = My.list;\n\t\tlet i = tabs.indexOf(tab);\n\t\tif(i === -1) return;\n\n\t\t// Remove page and destroy instance\n\t\tlet pages = [...$('vw-page', views.rootDOM)[0].children];\n\t\tlet sketch, page;\n\t\tfor (let i=0; i < pages.length; i++) {\n\t\t\tpage = pages[i];\n\t\t\tif(page.routerData.page === tab.id){\n\t\t\t\tsketch = $('sketch-page', page)[0].model.sketch;\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif(sketch != null){\n\t\t\tif(tab.isUnsaved){\n\t\t\t\tif(!confirm(\"Are you sure to close this unsaved instance?\"))\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsketch.destroy();\n\t\t\tpage.remove();\n\t\t}\n\n\t\ttabs.splice(i, 1);\n\n\t\tif(noSwitchTab) return;\n\t\tif(tabs.length === 0) My.createTab();\n\t\telse My.switchTab(tabs[0]);\n\t}\n});","This template will be appended to body\nFor adding library or style, please modify /public/index.html\n\n## html.append-to-body\n<div class=\"background\">\n\t<div class=\"img\" style=\"background-image: url('/assets/img/background/black3.jpg')\"></div>\n\t<div class=\"tile\"></div>\n</div>\n\n<!-- Model on ./model/header.sf -->\n<sf-template path=\"BPEditor/model/header.sf\"></sf-template>\n\n<!-- Ground viewport -->\n<!-- ./src/vw-ground/router.js -->\n<vw-ground style=\"display: none\"></vw-ground>\n\n<input type=\"text\" id=\"hidden_text\" style=\"position: fixed; top: 100vh;\">\n\n<!-- /src/component/dropdown.sf -->\n<sf-m name=\"dropdown\" class=\"{{ className }} {{ hasSearch ? 'has-search':'' }} {{ searchActive ? 'search-active':'' }}\">\n  <drop-down sf-each=\"val in menus\"></drop-down>\n</sf-m>\n\n## scss-global\nbody > .background {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\t.img{\n\t\tposition: fixed;\n\t\topacity: 0.8;\n\t\tbackground-repeat: repeat;\n\t\tbackground-size: 75%;\n\t\tbox-shadow: inset 0 0 11rem 0px black;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\t.tile{\n\t\topacity: 0.8;\n\t\tposition: fixed;\n\t\tbackground: url('/assets/img/background/tile.png');\n\t\tbackground-repeat: repeat;\n\t\tbackground-size: 100px;\n\t\twidth: 100%;\n\t\tbox-shadow: inset 0 0 11rem 0px black;\n\t\theight: 100%;\n\t\tfilter: brightness(28%);\n\t}\n}\n\nvw-ground{\n\tposition: absolute;\n\toverflow: hidden;\n\tdisplay: block;\n\ttop: 50px;\n\theight: calc(100vh - 50px);\n\twidth: 100vw;\n}\n\n@media(max-width: 800px){\n\tsf-m.modal {\n\t\toverflow: scroll;\n\t}\n}\n\ntextarea, code {\n\ttab-size: 4;\n}","## html\n<sf-m name=\"project-panel-left\">\n\t<div class=\"menus\">\n\t\t<div class=\"button {{ x.active ? 'active' : '' }}\" @pointerover=\"hover(x)\" @pointerout=\"unhover(x)\" sf-each=\"x in buttons\" @click=\"change(x)\">\n\t\t\t<div class=\"highlight\"></div>\n\t\t\t<i class=\"{{ x.icon }}\"></i>\n\t\t\t<div class=\"bubble {{ x.bubble ? '':'hide' }}\">{{ x.bubble }}</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"panels\">\n\t\t<div class=\"workspace {{ activeId === 'workspace' ? '':'hide' }}\">\n\t\t\t<sf-template path=\"BPEditor/model/project-panel-left/workspace.sf\"></sf-template>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"project-panel-left\"] {\n\tposition: absolute;\n\theight: calc(100vh - 50px);\n\tz-index: 2;\n\t.menus {\n\t\twidth: 50px;\n\t\theight: 100%;\n\t\tposition: absolute;\n\t\tz-index: 1;\n\t\tbackground: #000000bd;\n\t\toutline: 1px solid #464646b8;\n\n\t\t.button {\n\t\t\tposition: relative;\n\t\t\tfont-size: 22px;\n\t\t\tpadding: 10px;\n\t\t\ttext-align: center;\n\t\t\tcursor: pointer;\n\t\t\t&:hover {\n\t\t\t\tcolor: white;\n\t\t\t}\n\t\t\t&.active {\n\t\t\t\tcolor: white;\n\t\t\t\t.highlight {\n\t\t\t\t\tmargin-left: -10px;\n\t\t\t\t\tmargin-top: -10px;\n\t\t\t\t\tbackground: #ffffff7d;\n\t\t\t\t\theight: 50px;\n\t\t\t\t\twidth: 2px;\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tbox-shadow: 0 0 15px 1px white;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.bubble {\n\t\t\t\tbackground: #5d5dffd1;\n\t\t\t\tfont-size: 10px;\n\t\t\t\tpadding: 2px 4px;\n\t\t\t\tcolor: white;\n\t\t\t\tborder-radius: 20px;\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 3px;\n\t\t\t\tbottom: 3px;\n\t\t\t\t&.hide { display: none; }\n\t\t\t\t&.blue { background: #2e82ffd1; }\n\t\t\t\t&.orange { background: #ff852ed1; }\n\t\t\t\t&.red { background: #ff2e2ed1; }\n\t\t\t\t&.yellow { background: #ffd22ed1; color: black; }\n\t\t\t\t&.green { background: #30bb35d1; color: black; }\n\t\t\t}\n\t\t}\n\t}\n\t.panels{\n\t\tposition: absolute;\n\t\tleft: 50px;\n\t\theight: 100%;\n\t\t& > div {\n\t\t\theight: 100%;\n\t\t\t&.hide { display: none; }\n\t\t}\n\t}\n}\n\nbody vw-page {\n\twidth: calc(100vw - 50px);\n\tmargin-left: 50px;\n}\n\n## js-global\nsf.model(\"project-panel-left\", My => {\n\tMy.activeId = 'sketch';\n\tMy.buttons = [\n\t\t{active: true, id: 'sketch', bubble: '', tooltip: \"Sketch\", icon: 'fa fa-pencil-ruler'},\n\t\t{active: false, id: 'workspace', bubble: '', tooltip: \"Workspace\", icon: 'fa fa-folder'},\n\t\t{active: false, id: 'remote', bubble: '', tooltip: \"Remote Instance / Collaboration\", icon: 'fa fa-wifi'},\n\t\t// {active: false, id: 'source-control', tooltip: \"Source Control\", icon: 'fa fa-code-branch'}\n\t];\n\n\tMy.init = function(){}\n\tMy.change = function(item){\n\t\tif(item.active) return;\n\t\tif(item.id === 'remote') return SmallNotif.add(\"Feature not ready\");\n\n\t\tlet buttons = My.buttons;\n\t\tfor (let i=0; i < buttons.length; i++) {\n\t\t\tlet temp = buttons[i];\n\t\t\tif(temp.active){\n\t\t\t\t// if(item.id === 'workspace'){}\n\t\t\t\ttemp.active = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\titem.active = true;\n\t\tMy.activeId = item.id;\n\t\t// if(item.id === 'workspace'){}\n\t}\n\tMy.hover = function(x){\n\t\tToolTip.set(x.tooltip);\n\t}\n\tMy.unhover = function(x){\n\t\tToolTip.set();\n\t}\n});","## html.append-to-body\n<!-- /src/model/tooltip.sf -->\n<sf-m name=\"tooltip\" class=\"{{ showed && 'show' }}\" style=\"transform: translate({{ x }}px, {{ y }}px);\">\n\t<div class=\"{{ type === 'basic' ? '' : 'hide-this' }} basic desc\">{{ desc }}</div>\n\t<div class=\"{{ type === 'port' ? '' : 'hide-this' }} port\">\n\t\t<div class=\"type\">Type: <span style=\"color: {{ port.color }}\">{{ port.type }}</span></div>\n\t\t<div class=\"feature\" style=\"display: {{ port.feature ? '' : 'none' }}\">Feature: <span>{{ port.feature }}</span></div>\n\t\t<div class=\"desc\">{{ port.desc }}</div>\n\t</div>\n\t<div class=\"{{ type === 'node' ? '' : 'hide-this' }} node\">\n\t\t<div class=\"path\">Path: <span>{{ node.path }}</span></div>\n\t\t<div class=\"id\" style=\"display: {{ node.id ? '' : 'none' }}\">ID: <span>{{ node.id }}</span></div>\n\t\t<div class=\"desc\">{{ node.desc }}</div>\n\t\t<div class=\"preview\">\n\t\t\t<video :src=\"{{ node.hasVideo }}\" style=\"display: {{ node.hasVideo ? '' : 'none' }}\"></video>\n\t\t\t<img :src=\"{{ node.hasPicture }}\" style=\"display: {{ node.hasPicture ? '' : 'none' }}\"></video>\n\t\t</div>\n\t</div>\n\t<div class=\"{{ type === 'general' ? '' : 'hide-this' }} general\">\n\t\t<div class=\"title\">{{ general.title }}</div>\n\t\t<div class=\"desc\" style=\"display: {{ general.desc ? '' : 'none' }}\">{{ general.desc }}</div>\n\t\t<div class=\"comment\" style=\"display: {{ general.comment ? '' : 'none' }}\">{{ general.comment }}</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"tooltip\"]{\n\tvisibility: hidden;\n\tbackground: #000000da;\n\tpointer-events: none;\n\tpadding: 2px 8px;\n\tborder-radius: 5px;\n\tbox-shadow: 0 0 2px white;\n\tposition: fixed;\n\ttop: 15px;\n\tleft: 10px;\n\tcolor: #dbdbdb;\n\topacity: 0;\n\tz-index: 100;\n\ttransition: 0.3s ease-in opacity;\n\n\t.path{\n\t\tcolor: gray;\n\t\tfont-size: 16px;\n\t}\n\n\t.type, .feature, .id {\n\t\tcolor: gray;\n\t\tspan{\n\t\t\tfont-weight: bold;\n\t\t\tletter-spacing: 1px;\n\t\t}\n\t}\n\n\t.feature span, .id span{\n\t\tcolor: white;\n\t}\n\n\t.hide-this {\n\t\tdisplay: none;\n\t}\n\n\t.desc{\n\t\twhite-space: pre-wrap;\n\t\t// font-size: 14px;\n\t}\n\n\t&.show{\n\t\tvisibility: visible;\n\t\topacity: 1;\n\t}\n\n\t.icon{\n\t\tpadding-right: 5px;\n\t}\n\n\t.general {\n\t\t.title {\n\t\t\tfont-size: 16px;\n\t\t}\n\n\t\t.desc {\n\t\t\tcolor: gray;\n\t\t\twhite-space: pre-wrap;\n\t\t}\n\n\t\t.comment {\n\t\t\tcolor: #63a669;\n\t\t\twhite-space: pre-wrap;\n\t\t}\n\t}\n}\n\n## js-global\nvar ToolTip = sf.model('tooltip', function(My){\n\tMy.showed = false;\n\tMy.x = 0;\n\tMy.y = 0;\n\n\tMy.type = 'basic';\n\tMy.desc = '';\n\tMy.port = {type:'', desc:'', color:''};\n\tMy.node = {path:'', desc:'', hasVideo:'', hasPicture:''};\n\tMy.general = {title:'', desc:'', comment:''};\n\n\tMy.nodeVideoEl = null;\n\tMy.nodePictureEl = null;\n\tMy.init = function(){\n\t\tMy.nodeVideoEl = My.$el('.node .preview video');\n\t\tMy.nodePictureEl = My.$el('.node .preview img');\n\t}\n\n\tMy._listener = function(ev){\n\t\tMy.x = ev.clientX;\n\t\tMy.y = ev.clientY;\n\t}\n\n\tMy.set = function(data, ev, type='basic'){\n\t\tif(ev != null){\n\t\t\tMy.x = ev.x;\n\t\t\tMy.y = ev.y;\n\t\t}\n\n\t\tif(data && My.showed === false){\n\t\t\tMy.showed = true;\n\t\t\t$(window).on('pointermove', My._listener);\n\t\t}\n\t\telse if(!data){\n\t\t\tMy.showed = false;\n\t\t\t$(window).off('pointermove', My._listener);\n\t\t}\n\n\t\tMy.type = type;\n\n\t\tlet videoEl = My.nodeVideoEl[0];\n\t\tvideoEl.loop = false;\n\t\tvideoEl.pause();\n\n\t\tMy.node.hasVideo = '';\n\t\tMy.node.hasPicture = '';\n\n\t\tif(!data) return;\n\n\t\tif(type === 'basic') My.desc = data;\n\t\telse if(type === 'node'){\n\t\t\tMy.node.path = data.namespace;\n\t\t\tMy.node.desc = data.docs?.description || '';\n\t\t\tMy.node.id = data.id;\n\t\t\tMy.node.hasVideo = data.docs?.tags?.video_url || '';\n\t\t\tMy.node.hasPicture = data.docs?.tags?.picture_url || '';\n\n\t\t\tif(My.node.hasVideo){\n\t\t\t\tlet videoEl = My.nodeVideoEl[0];\n\t\t\t\tvideoEl.loop = true;\n\t\t\t\tvideoEl.play();\n\t\t\t}\n\t\t}\n\t\telse if(type === 'general'){\n\t\t\tMy.general.title = data.title;\n\t\t\tMy.general.desc = data.desc || '';\n\t\t\tMy.general.comment = data.comment || '';\n\t\t}\n\t\telse if(type === 'port'){\n\t\t\tlet typeName = data.type.name || '';\n\t\t\tlet feature = '';\n\t\t\tif(typeName.includes('BP-Union')){\n\t\t\t\ttypeName = typeName.replace(/BP\\-.*? /g, '');\n\t\t\t\ttypeName = `<${typeName.split(' ').join(' | ')}>`;\n\t\t\t\tfeature = \"Union\";\n\t\t\t}\n\t\t\telse if(data.classAdd.includes('BP-StructOf')){\n\t\t\t\ttypeName = `${typeName}{...}`;\n\t\t\t\tfeature = \"Structure\";\n\t\t\t}\n\t\t\telse if(data.classAdd.includes('BP-StructSplit')){\n\t\t\t\ttypeName = typeName.replace(/BP\\-(Open|Last) /g, '');\n\t\t\t\tfeature = \"StructureAccess\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(typeName.startsWith('BP-')){\n\t\t\t\t\tlet temp = /(BP\\-.*?) ?(.*)?/g.exec(typeName);\n\t\t\t\t\tif(temp == null){\n\t\t\t\t\t\ttypeName = feature = typeName.replace('BP-', '');\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\ttypeName = temp[2];\n\t\t\t\t\t\tfeature = temp[1].replace('BP-', '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse feature = data.classAdd;\n\t\t\t}\n\n\t\t\tif(data.virtualType != null){\n\t\t\t\tlet vtype = data.virtualType?.map(v => v.name).join(' | ');\n\t\t\t\ttypeName += (vtype ? ` as Virtual<${vtype}>` : '');\n\t\t\t}\n\n\t\t\tMy.port.type = typeName;\n\t\t\tMy.port.feature = feature;\n\n\t\t\tlet desc = data.docs?.description || '';\n\t\t\tMy.port.desc = desc.replace(/@menu\\b.*?$/s, '').trim();\n\n\t\t\tlet portElement = data.iface[data.source]._portList.getElement(data).querySelector('.port');\n\t\t\tlet color = window.getComputedStyle(portElement).getPropertyValue('background-color');\n\n\t\t\tif(color === 'rgba(0, 0, 0, 0)') color = 'white';\n\t\t\tMy.port.color = color;\n\t\t}\n\t}\n});","## html\n<sketch-page>\n\t<!-- This element will be replaced with 'My.space' -->\n\t<sf-slot for=\"space\"></sf-slot>\n\n\t<!-- Panels -->\n\t<div class=\"panels {{ !miniViewer.topRightHidden && 'has-minimap' }}\">\n\t\t<!-- /src/component/sketch-panel-left.sf -->\n\t\t<sketch-panel-left></sketch-panel-left>\n\n\t\t<!-- /src/component/sketch-panel-bottom.sf -->\n\t\t<sketch-panel-bottom></sketch-panel-bottom>\n\n\t\t<!-- /src/component/sketch-panel-right.sf -->\n\t\t<sketch-panel-right></sketch-panel-right>\n\t</div>\n\n\t<sf-template path=\"BPEditor/component/project-navigation-bar.sf\"></sf-template>\n\n\t<div class=\"mini-blackprint disable-effect {{ miniViewer.topRightHidden && 'hidden' }}\">\n\t\t<!-- Will be replaced with element returned by Blackprint.cloneContainer(true) -->\n\t\t<sf-slot for=\"miniViewer.topRight\"></sf-slot>\n\t</div>\n</sketch-page>\n\n## scss-global\nsketch-page{\n\t.mini-blackprint{\n\t\twidth: 240px;\n\t\theight: 195px;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 0 6px #ffffff6b;\n\t\tbackground: #ffffff40;\n\t\tborder-radius: 10px;\n\n\t\tsf-m[name=\"container\"]{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t&.hidden{\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\tsf-m[name=\"container\"] {\n\t\tmargin-left: 200px;\n\t}\n\n\t.top-left-info {\n\t\tpadding: 7px 10px;\n\t\tmargin: 10px;\n\t\tcolor: #ffffff59;\n\t\tfont-size: 12px;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbackground: #00000047;\n\t\tbox-shadow: 0 0 5px #000000b5;\n\t\tborder-radius: 10px;\n\t\twhite-space: pre-line;\n\t}\n\n\t.mini-blackprint, &.left-menu-hide {\n\t\tsf-m[name=\"container\"]{\n\t\t\tmargin-left: 0;\n\t\t}\n\t}\n\n\t&> .bottom-message {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tcolor: #ababab;\n\t\twidth: 100%;\n\t\tpadding: 20px;\n\t\ttext-align: center;\n\t}\n\n\t&> .panels {\n\t\tsketch-panel-left, sketch-panel-bottom, sketch-panel-right {\n\t\t\tbackdrop-filter: blur(1px);\n\t\t\tbox-shadow: 0 0 8px 0 black;\n\t\t}\n\t}\n\n\t@media(max-width: 900px){\n\t\t&> .bottom-message {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t&> sf-space[blackprint] .bg-tile{\n\t\tbackground: url('/assets/img/background/tile.png');\n\t\tbackground-size: 100px;\n\t\tfilter: brightness(38%);\n\t\tbackface-visibility: hidden;\n\t\topacity: 0.5;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: absolute;\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tasync coming(data){ // data === views.data\n\t\t\t// console.log(\"Sketch page data:\", data);\n\t\t\tlet sketch = data.bpInstance ?? SketchList[data.page - 1];\n\n\t\t\tif(sketch == null || sketch._abandon) return;\n\t\t\twindow.CurrentSketch = sketch;\n\t\t\tsetTimeout(() => EditorHeader.showTabs = true, 100);\n\n\t\t\t$('body > .background .tile').css('display', 'none');\n\n\t\t\tif(SketchSettings.showSketchMinimap){\n\t\t\t\tlet ref = sketch.page.miniViewer;\n\t\t\t\tif(ref.topRight == null){\n\t\t\t\t\tref.topRight = sketch.cloneContainer(true); // Clone and get the MiniMap\n\n\t\t\t\t\t// Remove the dropdown from minimap\n\t\t\t\t\t$('sf-m[name=\"dropdown\"]', ref.topRight).remove();\n\t\t\t\t}\n\n\t\t\t\tref.topRightHidden = false;\n\t\t\t}\n\n\t\t\tsf.model('header').info.scale = sketch.scope('container').scale*100;\n\n\t\t\t// Check if Data nodes already exist\n\t\t\t// Load nodes for data manipulation\n\t\t\tif(Blackprint.nodes.Data == null && !this._dataNodeChecked){\n\t\t\t\tawait sf.loader.task;\n\t\t\t\tthis._dataNodeChecked = true;\n\n\t\t\t\t// Only load if not connected to remote Blackprint instance\n\t\t\t\tif(CurrentSketch?._remote == null){\n\t\t\t\t\tSmallNotif.add(\"Loading required nodes\", 'yellow', 500);\n\n\t\t\t\t\tif(localStorage['no-autoload-standard-nodes'] !== 'true'){\n\t\t\t\t\t\tBlackprint.loadModuleFromURL([\n\t\t\t\t\t\t\t'https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-console.mjs?1',\n\t\t\t\t\t\t\t'https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-data.mjs?1',\n\t\t\t\t\t\t\t'https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-decoration.mjs?1',\n\t\t\t\t\t\t\t'https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-flowcontrol.mjs?1',\n\t\t\t\t\t\t\t'https://cdn.jsdelivr.net/npm/@blackprint/nodes@0.9/dist/nodes-input.mjs?1',\n\t\t\t\t\t\t], {\n\t\t\t\t\t\t\tloadBrowserInterface: true\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tleaving(targetURL){\n\t\t\t// console.log(\"Leaving from sketch page data:\", arguments);\n\n\t\t\tif(targetURL == null) return;\n\t\t\tif(!/^\\/sketch\\//m.test(targetURL)){\n\t\t\t\t$('body > .background .tile').css('display', '');\n\t\t\t\twindow.CurrentSketch = null;\n\t\t\t\tsetTimeout(() => EditorHeader.showTabs = false, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global\n// Blackprint.space = Space (https://github.com/ScarletsFiction/ScarletsFrame/wiki)\n// sketch.scope = shortcut to obtain your model scope/context\nvar SketchList = [];\nsf.component('sketch-page', function(My){\n\tMy.miniViewer = {\n\t\ttopRight: null,\n\t\ttopRightHidden: true,\n\t\ton$topRight(now){\n\t\t\tif(now === null)\n\t\t\t\treturn My.miniViewer.topRightHidden = true;\n\n\t\t\tMy.miniViewer.topRightHidden = false;\n\t\t\t// now => <sf-space>\n\t\t\t// $(now)\n\t\t}\n\t};\n\n\t// To avoid duplicated event registration on hot reload\n\tlet EventSlot = {slot: 'bp-editor'};\n\n\t// URL: #page/sketch/{data.page}\n\tlet sketch;\n\tif(views.data.bpInstance == null){\n\t\tif(views.data.page.startsWith('node-')){\n\t\t\t// Remove this page\n\t\t\tsetTimeout(()=>{\n\t\t\t\tMy.$el.parent('sf-page-view').remove();\n\t\t\t\tviews.lastSibling = null;\n\t\t\t}, 500);\n\n\t\t\tthis.CurrentSketch = {\n\t\t\t\t_abandon: true,\n\t\t\t\tvariables:{},\n\t\t\t\tfunctions:{},\n\t\t\t\ton(){}\n\t\t\t};\n\t\t\tMy.panels = {};\n\t\t\treturn console.log(\"Returning to other page because bpInstance was not found\");\n\t\t}\n\n\t\tsketch = My.sketch = SketchList[views.data.page - 1] ??= new Blackprint.Sketch();\n\t}\n\telse{\n\t\tsketch = My.sketch = views.data.bpInstance;\n\t\tsetTimeout(() => My.fitToView(), 200);\n\t}\n\n\tsketch.on('destroy', EventSlot, function(){\n\t\tlet pageEl = $(sketch.scope.domList[0].closest('sketch-page').parentNode);\n\n\t\tif(pageEl.hasClass('page-current')){\n\t\t\t// views.goto('/sketch/1');\n\t\t\tsetTimeout(() => pageEl.remove(), 700);\n\t\t}\n\t\telse pageEl.remove();\n\t});\n\n\twindow.CurrentSketch = sketch;\n\tsketch.page = My;\n\n\t// Will be filled by each panel component after initialized\n\tMy.panels = {left: null, bottom: null, right: null};\n\n\t// Please use sketch.on('...', callback) instead\n\t// This is used if no one listened to the event\n\tsketch._event.$_fallback = BlackprintEventFallback;\n\n\t// path: /src/global/SuggestNodeTypeCaster.js\n\tsketch.on('port.cable.test', EventSlot, SuggestNodeTypeCaster);\n\tsketch.on('port.hover node.hover', EventSlot, ev => {\n\t\tev.instance = sketch;\n\n\t\tif(ev.port != null) PortHoverInfo(ev, true);\n\t\tif(ev.iface != null) NodeHoverInfo(ev, true);\n\t});\n\tsketch.on('port.unhover node.unhover', EventSlot, ev => {\n\t\tev.instance = sketch;\n\n\t\tif(ev.port != null) PortHoverInfo(ev, false);\n\t\tif(ev.iface != null) NodeHoverInfo(ev, false);\n\t});\n\tsketch.on('port.menu', EventSlot, ev => {\n\t\tlet iface = ev.port.iface;\n\n\t\tlet cancel = {cancel: true};\n\t\tasync function getInput(title, text){\n\t\t\tlet ref = await Swal.fire({\n\t\t\t\ttitle, text, input: \"text\",\n\t\t\t});\n\n\t\t\tif(ref.isConfirmed === false) return cancel;\n\t\t\treturn ref.value;\n\t\t}\n\n\t\tif(iface.interface === \"BPIC/BP/Fn/Main\"){\n\t\t\tev.menu.push({\n\t\t\t\ttitle: \"Rename Port\",\n\t\t\t\tasync callback(){\n\t\t\t\t\tlet val = await getInput(\"Rename port\", \"Current name: \"+ev.port.name);\n\t\t\t\t\tif(val === cancel || !val) return;\n\n\t\t\t\t\tif(iface[ev.port.source][val] != null){\n\t\t\t\t\t\tSmallNotif.add(\"Conflicting port name\", 'red');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tiface.renamePort(ev.port.source, ev.port.name, val);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if(iface.interface === \"BPIC/BP/Event/Emit\"\n\t\t\t|| iface.interface === \"BPIC/BP/Event/Listen\"\n\t\t){\n\t\t\tlet portSource = iface.interface === \"BPIC/BP/Event/Emit\" ? 'input' : 'output';\n\t\t\tev.menu.push({\n\t\t\t\ttitle: \"Add Field\",\n\t\t\t\tasync callback(){\n\t\t\t\t\tlet val = await getInput(\"Add event data's field\");\n\t\t\t\t\tif(val === cancel || !val) return;\n\n\t\t\t\t\tif(iface[portSource][val] != null){\n\t\t\t\t\t\tSmallNotif.add(\"Conflicting event field name\", 'red');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tiface.createField(val);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(ev.port.type !== Function && !(ev.port.source === 'input' && ev.port.name === 'Limit')){\n\t\t\t\tev.menu.push({\n\t\t\t\t\ttitle: \"Rename Field\",\n\t\t\t\t\tasync callback(){\n\t\t\t\t\t\tlet val = await getInput(\"Add event data's field\", \"Current name: \"+ev.port.name);\n\t\t\t\t\t\tif(val === cancel || !val) return;\n\n\t\t\t\t\t\tif(iface[portSource][val] != null){\n\t\t\t\t\t\t\tSmallNotif.add(\"Conflicting event field name\", 'red');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tiface.renameField(ev.port.name, val);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tev.menu.push({\n\t\t\t\t\ttitle: \"Delete Field\",\n\t\t\t\t\tasync callback(){\n\t\t\t\t\t\tiface.deleteField(ev.port.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tsketch.on('cable.created cable.drag', EventSlot, ({ event, cable }) => {\n\t\tif(event == null)\n\t\t\treturn; // Skip if cable is not created manually by user\n\n\t\tsketch.once('cable.dropped cable.connect cable.deleted', listen);\n\t\tfunction listen(){\n\t\t\tsketch.off('cable.dropped cable.connect cable.deleted', listen);\n\n\t\t\tlet nodesContainer = CurrentSketch.scope('nodes');\n\t\t\tnodesContainer.$el('.bp-suggest-light').removeClass('bp-suggest-light');\n\t\t}\n\n\t\tlet port = cable.owner;\n\t\tlet type = port.virtualType || port.type;\n\t\tlet target = port.source === 'input' ? 'output' : 'input';\n\n\t\tlet list = sketch.ifaceList;\n\t\tfor (let i=0; i < list.length; i++) {\n\t\t\tlet temp = list[i];\n\t\t\tlet ports = temp[target];\n\t\t\tif(ports == null) continue;\n\n\t\t\tfor (let key in ports) {\n\t\t\t\tlet port = ports[key];\n\t\t\t\tif(type === (port.virtualType || port.type)){\n\t\t\t\t\tport.iface.$el.addClass('bp-suggest-light');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction simplifyNamespacePath(list, _deep=0){\n\t\tlet len = 0, val = null;\n\t\tfor(let key in list) len++;\n\t\tfor(var key in list) {\n\t\t\tval = list[key];\n\t\t\tif(val.constructor === Object){\n\t\t\t\tlet {\n\t\t\t\t\tlen: _len,\n\t\t\t\t\tkey: _key,\n\t\t\t\t\tlist: _list,\n\t\t\t\t\tval: _val\n\t\t\t\t} = simplifyNamespacePath(val, _deep+1);\n\n\t\t\t\tif(_deep !== 0 && len === 1 && _len === 1){\n\t\t\t\t\tdelete list[key];\n\t\t\t\t\tkey = key+'/'+_key;\n\t\t\t\t\tlist[key] = _val;\n\t\t\t\t\tval = _val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(_deep === 0) return list;\n\t\treturn { len, key, list, val };\n\t}\n\n\tsketch.on('cable.dropped', EventSlot, ev => {\n\t\tlet event = ev.event;\n\n\t\tif(event.ctrlKey || !ev.afterCreated || ev.cable.isRoute) return;\n\t\tif(event.pointerType === 'touch'){\n\t\t\tlet targetEl = document.elementFromPoint(event.clientX, event.clientY);\n\t\t\tif(targetEl.closest('sf-m[name=\"cables\"]') == null) return;\n\t\t}\n\t\telse if(event.target.parentNode.model !== sketch.scope('cables')) return;\n\n\t\tlet ifaceList = sketch.ifaceList;\n\t\tlet oldLastNode = ifaceList[ifaceList.length-1];\n\n\t\tSketchPages._cableDropMenu = ev.cable;\n\t\tsetTimeout(()=> SketchPages._cableDropMenu = null, 300);\n\n\t\tlet suggestedNode = simplifyNamespacePath(Blackprint.Sketch.suggestNodeForPort(ev.port));\n\n\t\t// Suggest for object deconstruction node\n\t\tlet portType = ev.port.type;\n\t\tif(portType instanceof Object && portType !== Blackprint.Types.Route && portType !== Blackprint.Types.Trigger){\n\t\t\tlet refA = suggestedNode;\n\t\t\tlet refB = Blackprint.nodes;\n\n\t\t\trefA.Data ??= {};\n\t\t\trefA.Data.Object ??= {};\n\t\t\trefA.Data.Object.Get = refB.Data.Object.Get;\n\t\t\trefA.Data.Object.Deconstructor = refB.Data.Object.Deconstructor;\n\t\t}\n\n\t\tcontainer.nodeScope.menu(event, suggestedNode, {\n\t\t\tonCreated(iface){\n\t\t\t\tlet owner = ev.cable.owner;\n\t\t\t\tlet sourcePort = owner.source;\n\t\t\t\tlet targetPorts = iface[sourcePort === 'input' ? 'output' : 'input'];\n\t\t\t\tlet compatiblePorts = [];\n\n\t\t\t\tif(targetPorts == null) return;\n\n\t\t\t\tfor(let key in targetPorts){\n\t\t\t\t\tlet port = targetPorts[key];\n\t\t\t\t\tif(isConnectablePort(owner.type, port.type))\n\t\t\t\t\t\tcompatiblePorts.push(port);\n\t\t\t\t}\n\n\t\t\t\t// Auto connect if found only one compatible port\n\t\t\t\tif(compatiblePorts.length === 1)\n\t\t\t\t\tcompatiblePorts[0].connectCable(ev.cable);\n\t\t\t\telse { // Drop near the port\n\t\t\t\t\tlet posX = sourcePort === 'input' ? 20 : -20;\n\t\t\t\t\tev.cable.head2[0] += posX;\n\t\t\t\t}\n\t\t\t},\n\t\t\tsuggest: true,\n\t\t});\n\t});\n\n\tsketch.on('editor.properties.open', ()=> {\n\t\tMy.panels.right.openPanel();\n\t});\n\n\tsketch.on('node.function.open', EventSlot, async ev => {\n\t\tlet name = ev.iface.namespace.split('/').join('-');\n\t\tname += '-'+ev.iface.uniqId;\n\n\t\tlet tabInfo = sketch.tabInfo ?? sketch.rootInstance.tabInfo;\n\t\tlet tabId = tabInfo.id;\n\n\t\tlet pages = $('vw-page > sf-page-view', views.rootDOM);\n\t\tlet routePath = `/sketch/${tabId}-node-`+name;\n\n\t\t// Remove old page if the instance was different\n\t\tfor (let i=0; i < pages.length; i++) {\n\t\t\tlet page = pages[i];\n\t\t\tif(page.routePath === routePath && page.querySelector('sketch-page').model.sketch !== ev.iface.bpInstance)\n\t\t\t\tpage.remove();\n\t\t}\n\n\t\tawait views.goto(routePath, {\n\t\t\tbpInstance: ev.iface.bpInstance\n\t\t});\n\n\t\ttabInfo.currentRoute = routePath;\n\t\tev.iface.bpInstance.recalculatePosition();\n\t});\n\n\t// This may cause one memory leak because this will never being cleared\n\t// But will only be replaced if the user is clicked other nodes\n\tsketch.on('node.click', EventSlot, ev => {\n\t\tMy.panels.right.selectNode(ev.iface);\n\t\tNodeHoverInfo(ev, false);\n\t});\n\n\tsketch.on('execution.paused', EventSlot, ({ cable, cables, afterNode, beforeNode, triggerSource }) => {\n\t\tlet bottomPanel = My.panels.bottom;\n\t\tlet portValueDisplay = My.$el('editor-display-port-value');\n\t\tbottomPanel.stepModeIsRequesting = false;\n\n\t\tMy.$el('.debug-after-node, .debug-next, .debug-cable')\n\t\t\t.removeClass('debug-after-node')\n\t\t\t.removeClass('debug-cable')\n\t\t\t.removeClass('debug-next');\n\n\t\tif(cable != null){\n\t\t\tlet el = sketch.scope('cables').list.getElement(cable);\n\t\t\t$('path', el).addClass('debug-cable');\n\n\t\t\tbeforeNode?.iface.$el.addClass('debug-next');\n\t\t\tafterNode?.iface.$el.addClass('debug-after-node');\n\n\t\t\tlet { input, output } = cable;\n\n\t\t\t// 0 = execution order, 1 = route, 2 = trigger port, 3 (ToDo) = request\n\t\t\tif(triggerSource === 1){ // route\n\t\t\t\tbottomPanel.noteTitle = `Routing: `;\n\t\t\t\tbottomPanel.note = `${output.iface.title} -> ${input?.iface.title || \"Stop\"}`;\n\t\t\t}\n\t\t\telse if(triggerSource === 2){ // trigger port\n\t\t\t\tbottomPanel.noteTitle = `Calling Trigger: `;\n\t\t\t\tbottomPanel.note = `${output.iface.title} -> ${input.iface.title}`;\n\t\t\t}\n\t\t\telse if(triggerSource === 3){ // request\n\t\t\t\tbottomPanel.noteTitle = `Request Value: `;\n\t\t\t\tbottomPanel.note = `${input.iface.title} -> ${output.iface.title}`;\n\t\t\t\tbottomPanel.stepModeIsRequesting = true;\n\t\t\t}\n\t\t}\n\t\telse if(beforeNode != null){ // triggerSource == 0 (execution order)\n\t\t\tif(cables != null){\n\t\t\t\tlet cableList = sketch.scope('cables').list;\n\t\t\t\tfor(let i=0; i < cables.length; i++){\n\t\t\t\t\tlet el = cableList.getElement(cables[i]);\n\t\t\t\t\t$('path', el).addClass('debug-cable');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbeforeNode.iface.$el.addClass('debug-next');\n\t\t\tbottomPanel.noteTitle = `Updating: `;\n\t\t\tbottomPanel.note = `${beforeNode.iface.title}`;\n\t\t}\n\n\t\tif(!bottomPanel.stepModeIsRequesting){\n\t\t\t// Remove all port value display element from the last pause session\n\t\t\tMy.$el('editor-display-port-value').remove();\n\t\t}\n\t\telse { // Update output port value\n\t\t\tfor(let i=0; i < portValueDisplay.length; i++){\n\t\t\t\tlet display = portValueDisplay[i];\n\t\t\t\tlet port = display.parentNode.model;\n\t\t\t\tdisplay.model.setValue(port._cache ?? port.value ?? port.default);\n\t\t\t}\n\t\t}\n\n\t\t// Display every port value\n\t\tif(beforeNode != null) showPortValue(beforeNode);\n\t\tif(afterNode != null && triggerSource !== 0) showPortValue(afterNode);\n\t\telse if(cables != null){\n\t\t\tfor(let i=0; i < cables.length; i++){\n\t\t\t\tshowPortValue(cables[i].output.iface.node);\n\t\t\t}\n\t\t}\n\n\t\tif(cable == null && cables == null) { // Idle\n\t\t\tbottomPanel.noteTitle = `Running...`;\n\t\t\tbottomPanel.note = ``;\n\t\t\tbottomPanel.stepModeIsRequesting = false;\n\t\t}\n\t});\n\n\tsketch.on('execution.terminated', EventSlot, ({ reason, iface }) => {\n\t\tSmallNotif.add(reason, 'red');\n\t\tlet bottomPanel = My.panels.bottom;\n\t\tbottomPanel.opened = true;\n\t\tbottomPanel.noteTitle = \"Execution stopped\";\n\t});\n\n\tfunction showPortValue(node){\n\t\tlet { input, output } = node.iface;\n\t\tfor(let key in input){\n\t\t\tlet port = input[key];\n\t\t\tlet value = port._cache ?? port._oldCache ?? port.value ?? port.default;\n\n\t\t\t// Only show value from primitive type and null/empty and no port feature\n\t\t\tif(port.feature != null || value != null\n\t\t\t\t&& port.type !== String\n\t\t\t\t&& port.type !== Boolean\n\t\t\t\t&& port.type !== Number) continue;\n\n\t\t\tport.insertComponent(null, 'editor-display-port-value', { value });\n\t\t}\n\n\t\tfor(let key in output){\n\t\t\tlet port = output[key];\n\t\t\tlet value = port.value ?? port.default;\n\n\t\t\t// Only show value from primitive type and null/empty and no port feature\n\t\t\tif(port.feature != null || port.type === Function || value != null\n\t\t\t\t&& port.type !== String\n\t\t\t\t&& port.type !== Boolean\n\t\t\t\t&& port.type !== Number) continue;\n\n\t\t\tport.insertComponent('.name', 'editor-display-port-value', { value });\n\t\t}\n\t}\n\n\tBlackprint.settings('visualizeFlow', true);\n\tMy.space ??= sketch.cloneContainer();\n\n\tlet SketchPages = sf.model('sketch-pages');\n\tlet container = sketch.scope('container');\n\tlet header = sf.model('header');\n\n\tcontainer.hideUnusedPort = sf.model('sketch-settings').hideUnusedPort;\n\n\tcontainer.onScale = function(scale){\n\t\theader.info.scale = Math.round(scale * 100);\n\t}\n\n\t// Will run when <sketch-page> inserted on DOM\n\tMy.init = async function(){\n\t\tlet sfm = $(My.space.firstElementChild);\n\n\t\t// Rescan if the tab info was missing\n\t\tif(sketch.tabInfo == null) {\n\t\t\tlet projectList = sf.model(\"project-list\");\n\t\t\tlet tabs = projectList.list;\n\t\t\tsetTimeout(() => {\n\t\t\t\tfor (let i=0; i < tabs.length; i++) {\n\t\t\t\t\tlet tab = tabs[i];\n\t\t\t\t\tlet currentRoute = '/sketch/' + views.data.page;\n\t\t\t\t\tif(tab.currentRoute === currentRoute){\n\t\t\t\t\t\tprojectList.storeCurrentSketchToTab(tab, views.data.page);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 1);\n\t\t}\n\n\t\t// Show module version\n\t\tif(true){\n\t\t\tlet sketch = $('script[src*=\"@blackprint/sketch\"]').attr('src').match(\"(?<=@)([0-9\\.]+)\")?.[0];\n\t\t\tlet engine = $('script[src*=\"@blackprint/engine\"]').attr('src').match(\"(?<=@)([0-9\\.]+)\")?.[0];\n\t\t\tlet remote = $('script[src*=\"@blackprint/remote-control\"]').attr('src').match(\"(?<=@)([0-9\\.]+)\")?.[0];\n\t\t\tlet codegen = $('script[src*=\"@blackprint/code-generation\"]').attr('src').match(\"(?<=@)([0-9\\.]+)\")?.[0];\n\n\t\t\tif(location.pathname.startsWith('/dev.html')) remote ??= 0; // We have remote module imported on dev mode\n\n\t\t\tsketch = 'Sketch: v' + $.escapeText(sketch || '-unknown');\n\t\t\tengine = '\\nEngine: v' + $.escapeText(engine || '-unknown');\n\t\t\tremote = remote != null ? '\\nRemote: v' + $.escapeText(remote || '-unknown') : '';\n\t\t\tcodegen = '\\nCodeGen: v' + $.escapeText(codegen || '-unknown');\n\n\t\t\tsfm.prepend(`<div class=\"top-left-info\">${sketch}${engine}${remote}${codegen}</div>`);\n\t\t}\n\n\t\t// Show tiled background\n\t\tif(!sfm.eq(0).hasClass('bg-tile')){\n\t\t\tsfm.prepend('<div class=\"bg-tile\"></div>');\n\t\t}\n\n\t\tMy.registerListener();\n\t}\n\n\tMy.registerListener = function(){\n\t\tfunction pointerOver(targetEl){\n\t\t\tif(targetEl.tagName === 'path'){\n\t\t\t\ttargetEl.parentElement.model.disconnect();\n\t\t\t}\n\t\t}\n\n\t\tfunction pmEvent(ev){\n\t\t\tif(!ev.altKey) return temp.off('pointermove', pmEvent);\n\t\t\tpointerOver(ev.target);\n\t\t}\n\t\tfunction tmEvent(ev){\n\t\t\tif(!ev.altKey) return temp.off('touchmove', tmEvent);\n\n\t\t\tlet touch = ev.touches[0];\n\t\t\tpointerOver(document.elementFromPoint(touch.clientX, touch.clientY));\n\t\t}\n\n\t\tlet temp = My.$el('sf-m[name=\"cables\"]');\n\t\tlet evRegistered = false;\n\t\ttemp.on('pointerdown', function(ev){\n\t\t\tif(ev.altKey && !evRegistered){\n\t\t\t\tevRegistered = true;\n\t\t\t\tif(ev.pointerType === 'touch')\n\t\t\t\t\ttemp.on('touchmove', tmEvent);\n\t\t\t\telse temp.on('pointermove', pmEvent);\n\t\t\t}\n\t\t})\n\t\t.on('pointerup', function(ev){\n\t\t\tif(evRegistered){\n\t\t\t\tevRegistered = false;\n\t\t\t\tif(ev.pointerType === 'touch')\n\t\t\t\t\ttemp.off('touchmove', tmEvent);\n\t\t\t\telse temp.off('pointermove', pmEvent);\n\t\t\t}\n\t\t});\n\n\t\tMy.$el('sf-m[name=\"nodes\"]').on('click', function(ev){\n\t\t\tlet textEl = ev.target;\n\t\t\tif(textEl.tagName !== 'TEXTAREA') return;\n\n\t\t\tlet portEl = textEl.closest('.ports');\n\t\t\tif(portEl == null) return;\n\n\t\t\tlet description = portEl.model.docs?.description;\n\t\t\tif(description == null) return;\n\t\t\tif(!/@menu\\b/.test(description)) return;\n\n\t\t\tlet list = [];\n\t\t\tdescription.replace(/-\\s+\\[(.*?)\\]:\\((.*?)\\)\\s+=\\s+(.*?)$/gm, function(full, val, title, description){\n\t\t\t\tlist.push({\n\t\t\t\t\ttitle, description, callback(){\n\t\t\t\t\t\t$(textEl).val(val);\n\t\t\t\t\t\t$(textEl).trigger('input');\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tDropDown.show(list, {element: textEl});\n\t\t});\n\t}\n\n\tMy.fitToView = async function(){\n\t\tawait $.afterRepaint;\n\t\tawait sketch.recalculatePosition()\n\t\tawait $.afterRepaint;\n\n\t\tlet Ref = sketch.scope('container');\n\t\tlet {offsetHeight, offsetWidth} = Ref.$el[0].parentElement;\n\t\tlet nodes = Ref.nodeScope.list;\n\t\tlet maxX = 0, maxY = 0;\n\t\tlet W = 0, H = 0;\n\n\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t\tlet node = nodes[i];\n\t\t\tif(maxX < node.x){\n\t\t\t\tmaxX = node.x;\n\t\t\t\tW = node.w || 0;\n\t\t\t}\n\n\t\t\tif(maxY < node.y){\n\t\t\t\tmaxY = node.y;\n\t\t\t\tH = node.h || 0;\n\t\t\t}\n\t\t}\n\n\t\tmaxX += W + 50;\n\t\tmaxY += H + 50;\n\n\t\tif(maxX <= (Ref.origSize.w - 100) && maxY <= (Ref.origSize.h - 100)){\n\t\t\tmaxX = Ref.origSize.w;\n\t\t\tmaxY = Ref.origSize.h;\n\t\t}\n\t\telse{\n\t\t\tmaxX += 200;\n\t\t\tmaxY += 200;\n\t\t}\n\n\t\tlet A = offsetWidth / maxX;\n\t\tlet B = offsetHeight / maxY;\n\n\t\tlet decidedScale = A < B ? A : B;\n\t\tdecidedScale = decidedScale*100;\n\t\tdecidedScale = decidedScale - (decidedScale % 5); // round decimal\n\t\tdecidedScale = decidedScale/100;\n\n\t\tif(decidedScale === 0) {\n\t\t\tconsole.log(\"Unexpected: scaling the container to zero\");\n\t\t\tdecidedScale = 1;\n\t\t}\n\n\t\tRef.scale = decidedScale > 1 ? 1 : decidedScale;\n\n\t\tRef.size.w = offsetWidth / decidedScale;\n\t\tRef.size.h = offsetHeight / decidedScale;\n\n\t\tsf.model('header').info.scale = decidedScale*100;\n\t}\n\n\tMy.importJSON = json => sketch.importJSON(json);\n\tMy.clearNodes = ()=> sketch.clearNodes();\n\n\tMy.cloneContainer = function(){\n\t\tlet title = sketch.parentInterface != null ? `\"${sketch.parentInterface.title}\" Function` : `Main`;\n\n\t\t// Clone into new window\n\t\tnew sf.Window({\n\t\t\ttitle: `Sketch: ${title}`,\n\t\t\ttemplateHTML: sketch.cloneContainer() // Clone 2\n\t\t});\n\t}\n\n\tsketch.on('node.menu', function({ iface, menu }){\n\t\tif(!iface.namespace.startsWith('BPI/F/') && !iface.namespace.startsWith('BP/')){\n\t\t\tmenu.unshift({\n\t\t\t\ttitle: \"View source code\",\n\t\t\t\tasync callback(){\n\t\t\t\t\tlet { code, githubURL, scopeURL } = await utils.openNodeSource(iface);\n\t\t\t\t\tif(!code) return;\n\n\t\t\t\t\tlet editor = sf.model('custom-node-editor');\n\t\t\t\t\teditor.setValue(code);\n\n\t\t\t\t\tlet githubRepoName = githubURL?.match(/\\/\\/cdn.jsdelivr.net\\/gh\\/(.*?)@/)?.[1];\n\t\t\t\t\tif(githubRepoName)\n\t\t\t\t\t\teditor.githubURL = `https://github.com/${githubRepoName}/blob/-/src/${iface.namespace}.js`;\n\t\t\t\t\telse editor.githubURL = '';\n\n\t\t\t\t\tModal.goto('/custom-node-editor');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tmenu.unshift({\n\t\t\ttitle: !iface.id ? \"Add ID\" : \"Modify ID\",\n\t\t\tasync callback(){\n\t\t\t\tlet ref = await Swal.fire({\n\t\t\t\t\ttitle: \"Write the new ID here\",\n\t\t\t\t\ttext: (iface.id ? \"Current ID: \"+iface.id : void 0),\n\t\t\t\t\tinput: \"text\",\n\t\t\t\t});\n\n\t\t\t\tif(ref.isConfirmed === false) return;\n\n\t\t\t\tlet sketch = iface.node.instance;\n\t\t\t\tlet val = ref.value;\n\n\t\t\t\tif(val === ''){\n\t\t\t\t\tiface.node.instance.changeNodeId(iface, val);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(sketch.iface[val] !== void 0)\n\t\t\t\t\tthrow new Error(\"ID already exist\");\n\n\t\t\t\tiface.node.instance.changeNodeId(iface, val);\n\t\t\t}\n\t\t});\n\t});\n});","## html\n<docs-md-tabs>...</docs-md-tabs>\n\n## scss-global\ndocs-md-tabs {\n\tdisplay: block;\n\tbackground: #0000004d;\n\tpadding: 10px;\n\tborder-radius: 10px;\n\tborder: 1px solid black;\n\tbox-shadow: 0 0 17px #00000094;\n\t.tabs {\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t\tjustify-content: space-around;\n\t\tmargin-bottom: -10px;\n\t\tpadding: 5px;\n\t\tbackground: #d0e19d59;\n\t\tborder-radius: 5px;\n\t\t&> div {\n\t\t\tcursor: pointer;\n\t\t}\n\t\t.active-tab {\n\t\t\tcolor: yellow;\n\t\t\ttext-shadow: 0 0 9px #f1ff1e;\n\t\t}\n\t}\n\t[tab]{\n\t\tdisplay: none;\n\t}\n\t.active-tab {\n\t\tdisplay: block;\n\t}\n}\n\n## js-global\nsf.component('docs-md-tabs', My => {\n\tlet components = sf.component('docs-md-tabs');\n\tMy.tabs = [];\n\tMy.active = '';\n\n\tMy.init = function(){\n\t\tlet actives = new Set();\n\t\tcomponents.forEach(v => actives.add(v.active));\n\n\t\tlet firstTab = true;\n\t\tMy.$el('[tab]').each(function(){\n\t\t\tlet tab = $(this).attr('tab');\n\t\t\tMy.tabs.push(tab);\n\n\t\t\tif(firstTab){\n\t\t\t\tfirstTab = false;\n\t\t\t\tMy.changeTab(tab, false);\n\t\t\t}\n\t\t\telse if(actives.has(tab)){\n\t\t\t\tMy.changeTab(tab, false);\n\t\t\t}\n\t\t});\n\n\t\tMy.$el('.tabs').on('click', function(ev){\n\t\t\tlet el = ev.target;\n\t\t\tif(el.firstElementChild != null) return;\n\t\t\tMy.changeTab($(el).text(), true);\n\t\t});\n\t}\n\n\tMy.changeTab = function(text, syncToAll){\n\t\tMy.$el('.active-tab').removeClass('active-tab');\n\t\tMy.$el(`[tab=\"${text}\"]`).addClass('active-tab');\n\t\t$(My.tabs.getElement(My.tabs.indexOf(text))).addClass('active-tab');\n\n\t\tMy.active = text;\n\n\t\t// Also change the other components\n\t\tif(syncToAll){\n\t\t\tsf.component('docs-md-tabs').forEach(v => {\n\t\t\t\tif(v === My) return; // Skip current component\n\n\t\t\t\tif(v.tabs.includes(text)){\n\t\t\t\t\tv.changeTab(text);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});","This component is for vulnerability testing on documentation's best practices.\n\n## scss-global\ndocs-security-test-vuln, docs-security-escape-text {\n\tdisplay: block;\n\tpadding: 10px;\n\tborder-radius: 10px;\n\tbackground: #000000b0;\n\tborder: 1px solid #159eff61;\n\tbox-shadow: 0 0 11px #04a1c5;\n}\n\n## js-global\nsf.component('docs-security-test-vuln', My => {\n\tMy.contentFromUser = '<script>alert(\"hello\")</script>';\n\tMy.user = {\n\t\tloggedIn: true,\n\t\tname: 'Alex <script>alert(\"hello\")</script>'\n\t};\n});","## html\n<sf-m name=\"project-panel-workspace\">\n\t<div class=\"files-list\">\n\t\t<div class=\"title\" @click=\"collapseSubPanel(this, true)\"><i class=\"fa fa-chevron-down collapse-btn\"></i> Explorer</div>\n\t\t<div class=\"button\" @click=\"rescanFiles\"><i class=\"fa fa-sync-alt\" title=\"Rescan files\"></i></div>\n\n\t\t<!-- /src/component/tree-list.sf -->\n\t\t<div class=\"tree-view\" tree-section=\"files\" @dblclick=\"openFile\" @pointerdown=\"checkDragNode\" @pointerover=\"fileListHover\" @pointerleave=\"fileListLeave\" @contextmenu=\"event.preventDefault()\">\n\t\t\t<div class=\"tree-item collapsed\" sf-each=\"key, val in files\"\n\t\t\t\tstyle=\"display: {{ val.hidden ? 'none' : '' }}\">\n\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\treturn new $TreeList({ parentKey: '', key, val });\n\t\t\t\t}}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"bottom-info info-browser-flag {{ needBrowserFlag ? '' : 'hide' }}\">Please enable <b>\"File System Access API\"</b> flags for your browser chrome://flags</div>\n\t<div class=\"bottom-info\">Drag and drop a folder to here to use it for your workspace</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"project-panel-workspace\"] {\n\tbackground: #181818;\n\theight: 100%;\n\t.files-list {\n\t\tcolor: #cbcbcb;\n\t\tposition: relative;\n\t\twidth: 190px;\n\t\tmax-height: -webkit-fill-available;\n\t\t// border-top: 1px solid #787878a3;\n\t\tpadding: 5px 5px;\n\t\t// border-bottom: 1px dashed white;\n\t\t.title, .button{\n\t\t\tdisplay: inline-block;\n\t\t\tcursor: pointer;\n\t\t\twhite-space: nowrap;\n\t\t}\n\t\t& > .title {\n\t\t\tcolor: #e7e7e7;\n    \t\tfont-weight: bold;\n\t\t}\n\t\t.collapse-btn {\n\t\t\tfont-size: 14px;\n\t\t\tpadding: 2px;\n\t\t\twidth: 12px;\n\t\t}\n\t\t.button{\n\t\t\tmargin-right: 10px;\n\t\t\tfloat: right;\n\t\t}\n\t\t.tree-view{\n\t\t\tposition: relative;\n\t\t\tmax-height: calc(100% - 22px);\n\t\t\tmax-width: 185px;\n\t\t\toverflow: auto;\n\t\t\tfont-size: 14px;\n\t\t\t&.collapsed > .tree-group {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t&.collapsed {\n\t\t\t.tree-view {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n\n\t.bottom-info {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\ttext-align: center;\n\t\tfont-size: 12px;\n\t\tpadding: 5px;\n\t\tcolor: gray;\n\t\tuser-select: none;\n\t\t&.hide{\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t.info-browser-flag{\n\t\tbottom: 50px;\n\t\tborder-bottom: 1px solid #a5a5a536;\n\t}\n}\n\n## js-global\nsf.model(\"project-panel-workspace\", My => {\n\tMy._settings = {};\n\tMy.files = {};\n\tMy._utils = {};\n\tMy.needBrowserFlag = DataTransferItem.prototype.getAsFileSystemHandle == null;\n\tObject.setPrototypeOf(My._utils, Blackprint.Engine.CustomEvent.prototype);\n\n\tMy.init = function(){\n\t\tEvents.on('EditorWorkingDirChange', async ()=>{\n\t\t\tawait My.rescanFiles();\n\t\t\tawait My.initAsWorkspace();\n\t\t});\n\n\t\tMy.$el.on(\"dragover\", ev => ev.preventDefault()).on(\"drop\", async function(ev) {\n\t\t\tev.preventDefault();\n\n\t\t\tlet item = ev.dataTransfer.items[0];\n\t\t\tif(item.getAsFileSystemHandle == null) return SmallNotif.add(\"This browser is not supported\", 'red');\n\n\t\t\tlet handle = await item.getAsFileSystemHandle();\n\t\t\tif(handle == null) return;\n\t\t\tif(handle.kind !== \"directory\") alert(\"Working directory must be a directory\");\n\t\t\telse {\n\t\t\t\tif(window.EditorWorkingDir != null)\n\t\t\t\t\tSmallNotif.add(\"Workspace directory was changed\");\n\n\t\t\t\twindow.EditorWorkingDir = new _CustomDirectory(handle);\n\t\t\t\tawait EditorDB.setSettings(\"EditorWorkingDir\", window.EditorWorkingDir);\n\t\t\t\tEvents.EditorWorkingDirReady = true;\n\t\t\t\tEvents.EditorWorkingDirChange();\n\t\t\t}\n\t\t});\n\t}\n\n\tMy.cleanWorkspace = async function(){\n\t\tlet projectList = sf.model(\"project-list\");\n\t\tlet list = projectList.list;\n\t\tfor (let i=0; i < list.length; i++) {\n\t\t\tif(list[i].isUnsaved)\n\t\t\t\treturn \"You must save/close opened tab before changing the workspace\";\n\t\t}\n\n\t\tfor (let i=list.length-1; i >= 0; i--)\n\t\t\tprojectList.closeTab(list[i], true);\n\n\t\t// Create dummy tab\n\t\tawait projectList.createTab();\n\t}\n\n\tMy.initAsWorkspace = async function(){\n\t\t// Check if has workspace settings\n\t\tlet file;\n\t\ttry{\n\t\t\tfile = await EditorWorkingDir.resolveCustomHandle('bp-workspace.json');\n\t\t} catch(e) {}\n\n\t\tif(file){\n\t\t\tlet val = await Swal.fire({\n\t\t\t\ttitle: \"Do you want to load and execute this workspace?\",\n\t\t\t\ttext: \"Make sure you have trusted the author of this workspace because this editor will load and run the opened instance for this workspace\",\n\t\t\t\tshowCancelButton: true,\n\t\t\t\tshowCloseButton: true\n\t\t\t});\n\n\t\t\tlet projectList = sf.model(\"project-list\");\n\t\t\tif(!val.isDismissed) {\n\t\t\t\tawait My.cleanWorkspace();\n\n\t\t\t\t// Load local nodes first\n\t\t\t\tawait My.refreshLocalNodes();\n\n\t\t\t\t// Then load the instances\n\t\t\t\tMy._settings = JSON.parse(await file.readText());\n\t\t\t\tlet dummyTab = projectList.list[0];\n\n\t\t\t\tlet opened = My.getSetting(['opened_instances']) ?? [];\n\t\t\t\tfor (let i=0; i < opened.length; i++) {\n\t\t\t\t\tlet file = await My.resolvePath(EditorWorkingDir.name+`/instances/${opened[i]}`);\n\t\t\t\t\tif(!file) continue;\n\n\t\t\t\t\tlet tab = projectList.createTab();\n\t\t\t\t\ttab.title = opened[i];\n\n\t\t\t\t\tawait new Promise(resolve => setTimeout(async () => {\n\t\t\t\t\t\tawait tab.sketch.importJSON(await file.readText());\n\t\t\t\t\t\ttab.isUnsaved = false;\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}, 200));\n\t\t\t\t}\n\n\t\t\t\tif(opened.length !== 0) projectList.closeTab(dummyTab);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet val = await Swal.fire({\n\t\t\ttitle: \"Do you want to initialize this folder as your workspace?\",\n\t\t\tshowCancelButton: true,\n\t\t\tshowCloseButton: true\n\t\t});\n\n\t\tif(val.isDismissed) return;\n\n\t\tawait EditorWorkingDir.getDirectory('/instances', true);\n\t\tawait EditorWorkingDir.getDirectory('/assets', true);\n\t\tawait EditorWorkingDir.getDirectory('/local_nodes', true);\n\t\tawait My.saveWorkspaceData();\n\t\tawait My.rescanFiles();\n\t}\n\n\tMy.saveWorkspaceData = async function(){\n\t\tlet file;\n\t\ttry {\n\t\t\tfile = await EditorWorkingDir.resolveCustomHandle('bp-workspace.json');\n\t\t} catch(e) {\n\t\t\tfile = await EditorWorkingDir.createFile('bp-workspace.json');\n\t\t}\n\n\t\tawait file.writeData(JSON.stringify(My._settings));\n\t}\n\n\tMy.getSetting = function(name){\n\t\tif(name.constructor === String) name = [name];\n\t\treturn Blackprint._utils.getDeepProperty(My._settings, name);\n\t}\n\n\tMy.setSetting = function(name, val){\n\t\tif(name.constructor === String) name = [name];\n\t\tBlackprint._utils.setDeepProperty(My._settings, name, val);\n\t\tMy.saveWorkspaceData();\n\t}\n\n\tfunction compareDir(old, now, path=''){\n\t\tfor (let key in old) {\n\t\t\tif(now[key] == null) sf.Obj.delete(old, key);\n\t\t}\n\n\t\tfor (let key in now) {\n\t\t\tif(old[key] == null){\n\t\t\t\tsf.Obj.set(old, key, now[key]);\n\t\t\t\treSort(old);\n\t\t\t}\n\t\t\telse if(old[key].constructor === Object && now[key].constructor === Object)\n\t\t\t\tcompareDir(old[key], now[key], `${path}/${key}`);\n\t\t}\n\t}\n\n\tMy.rescanFiles = async function(){\n\t\tMy.directories ??= new WeakMap();\n\t\tlet cwd = await EditorWorkingDir.recursiveGetFileHandles('.', {}, My.directories);\n\t\tlet dirs = { [EditorWorkingDir.name]: cwd };\n\n\t\tcompareDir(My.files, dirs, EditorWorkingDir.name);\n\t\tMy._utils.emit('file.change');\n\n\t\tsetTimeout(() => {\n\t\t\tlet targetEl = My.$el('[tree-section=\"files\"] > .collapsed > .title');\n\t\t\tif(targetEl[0]) My.collapseTree(targetEl[0], true);\n\t\t}, 10);\n\t}\n\n\tMy.resolvePath = My._utils.resolvePath = function(path){\n\t\tlet temp = Blackprint._utils.getDeepProperty(My.files, path.split('/'));\n\t\tif(temp == null) return null;\n\n\t\tif(temp.constructor === Object) return My.directories.get(temp);\n\t\treturn temp;\n\t}\n\n\tMy.getElementInfo = function(el){\n\t\tlet $el = $(el);\n\t\tlet current = $el.parent('.tree-view > .tree-item > tree-list > [tree-item-key]');\n\t\tlet section = current.attr('tree-item-key');\n\t\tlet itemEl = $(el.closest('[tree-item-key]') ?? []);\n\t\tlet key = itemEl.attr('tree-item-key');\n\t\tlet parent = $el.parent(\".tree-item.has-child > tree-list, .tree-view > .tree-item\")[0];\n\t\tlet parentKey = parent.model.parentKey;\n\t\tlet path = !!parentKey ? (parentKey + '/' + key) : key;\n\n\t\treturn { parent, section, itemEl, key, model: itemEl[0]?.model, path, parentKey };\n\t}\n\n\tMy.checkDragNode = ev => {\n\t\tlet focus = ev.target;\n\t\tlet isItem = true;\n\t\tif(focus.nextElementSibling != null) isItem = false;\n\n\t\tlet { parent, section, itemEl, key, path: namespace } = My.getElementInfo(focus);\n\t\tfocus = $(focus);\n\n\t\tif(ev.button === 2){ // If context menu\n\t\t\tMy.fileMenu(ev, focus[0], section);\n\t\t\treturn;\n\t\t}\n\n\t\t// Only handle node creation for assets\n\t\tif(section !== 'assets') return;\n\t\tif(key == null) return;\n\t\tif(parent == null) return;\n\n\t\tlet endEvent = ev.pointerType === 'touch' ? 'touchend' : 'pointerup';\n\n\t\tToolTip.set(\"Create node\");\n\t\t$(sf.Window).once(endEvent, async evUp => {\n\t\t\tToolTip.set();\n\n\t\t\tlet targetEl = evUp.target;\n\t\t\tif(endEvent === 'touchend'){\n\t\t\t\tlet { clientX, clientY } = evUp.changedTouches[0];\n\t\t\t\tevUp.clientX = clientX;\n\t\t\t\tevUp.clientY = clientY;\n\t\t\t\ttargetEl = document.elementFromPoint(clientX, clientY);\n\t\t\t}\n\n\t\t\tif(targetEl.closest('sketch-page') == null) return;\n\t\t\tif(targetEl.closest('sf-m.cables') != null){\n\t\t\t\tawait $.afterRepaint();\n\n\t\t\t\tlet offset = targetEl.getBoundingClientRect();\n\t\t\t\tlet container = CurrentSketch.scope('container');\n\t\t\t\tlet posX = (evUp.clientX - offset.x) / container.scale;\n\t\t\t\tlet posY = (evUp.clientY - offset.y) / container.scale;\n\t\t\t\tlet nodeOptions = { x: posX, y: posY };\n\n\t\t\t\tlet menu = [];\n\t\t\t\tif(section === 'assets'){\n\t\t\t\t\tnodeOptions.data = { path: namespace };\n\t\t\t\t\tmenu = [{\n\t\t\t\t\t\ttitle: \"Get Handle\", callback(){\n\t\t\t\t\t\t\tCurrentSketch.createNode(\n\t\t\t\t\t\t\t\tisItem\n\t\t\t\t\t\t\t\t\t? 'BP_Editor/Workspace/Assets/File'\n\t\t\t\t\t\t\t\t\t: 'BP_Editor/Workspace/Assets/Directory'\n\t\t\t\t\t\t\t, nodeOptions);\n\t\t\t\t\t\t}\n\t\t\t\t\t}];\n\t\t\t\t}\n\t\t\t\telse return;\n\n\t\t\t\tDropDown.show(menu, {x: evUp.clientX, y: evUp.clientY, event: evUp});\n\t\t\t};\n\t\t});\n\t}\n\n\tMy.collapseSubPanel = (el, isMain) => {\n\t\tlet temp = $(el);\n\t\tlet parent = temp.parent();\n\t\tparent.toggleClass(\"collapsed\");\n\n\t\tif(!isMain) return;\n\t\t// My.recalculateMenu();\n\n\t\tlet collapseBtn = temp.find('.collapse-btn').removeClass('fa-chevron-down').removeClass('fa-chevron-right');\n\n\t\tif(parent.hasClass('collapsed'))\n\t\t\tcollapseBtn.addClass('fa-chevron-right');\n\t\telse collapseBtn.addClass('fa-chevron-down');\n\t}\n\n\tfunction reSort(obj){\n\t\tif(obj._list) obj._list.sort(Intl.Collator().compare);\n\n\t\tlet _list = obj._list;\n\t\tlet files = [];\n\t\tfor (let i=_list.length-1; i >= 0; i--) {\n\t\t\tlet temp = _list[i];\n\t\t\tif(obj[temp].constructor === Object) continue;\n\n\t\t\tfiles.unshift(temp);\n\t\t\t_list.splice(i, 1);\n\t\t}\n\n\t\t_list.push(...files);\n\t\tobj.refresh?.();\n\t}\n\tMy.collapseTree = function(el){\n\t\tel = el.nextElementSibling;\n\t\tif(el == null) return;\n\n\t\tlet hidden;\n\t\tlet parent = $(el.parentNode);\n\n\t\tif(parent.hasClass('tree-view') || parent.hasClass('tree-no-model'))\n\t\t\thidden = !parent.hasClass('collapsed');\n\t\telse hidden = el.model.hidden = !el.model.hidden;\n\n\t\tif(hidden)\n\t\t\tparent.addClass(\"collapsed\");\n\t\telse {\n\t\t\tif(el.model != null) reSort(el.parentNode.model);\n\t\t\tparent.removeClass(\"collapsed\");\n\t\t}\n\t}\n\n\tMy.fileMenu = function(ev, el, section){\n\t\tlet $el = $(el);\n\t\tlet tree = $el.parents('[tree-item-key]');\n\t\tlet path = '';\n\n\t\tfor (let i=tree.length-1; i >= 0; i--) {\n\t\t\tif(path !== '') path += '/';\n\t\t\tpath += $(tree[i]).attr('tree-item-key');\n\t\t}\n\n\t\tlet itemEl = el.closest('[tree-item-key]');\n\t\tif(itemEl == null) {\n\t\t\tDropDown.show([{\n\t\t\t\ttitle: \"Close this workspace\",\n\t\t\t\tasync callback(){\n\t\t\t\t\tsf.Obj.delete(My.files, window.EditorWorkingDir.name);\n\t\t\t\t\tMy.files.refresh();\n\n\t\t\t\t\twindow.EditorWorkingDir = null;\n\t\t\t\t\tawait EditorDB.setSettings(\"EditorWorkingDir\", null);\n\t\t\t\t}\n\t\t\t}], {x: ev.clientX, y: ev.clientY, event: ev});\n\t\t\treturn;\n\t\t}\n\n\t\tlet itemName = $(itemEl).attr('tree-item-key');\n\t\tlet model = itemEl.model;\n\n\t\tlet menu = [{\n\t\t\ttitle: \"Rename\", async callback(){\n\t\t\t\tlet _itemName = itemName;\n\t\t\t\tif(section === 'instances'){\n\t\t\t\t\tlet extIndex = itemName.lastIndexOf('.bpi');\n\t\t\t\t\tif(extIndex === -1) extIndex = itemName.length;\n\t\t\t\t\titemName = itemName.slice(0, extIndex);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\ttitle: \"Rename to:\",\n\t\t\t\t\ttext: itemName,\n\t\t\t\t\tinput: \"text\",\n\t\t\t\t});\n\n\t\t\t\tval = val.value;\n\t\t\t\tif(!val) return;\n\n\t\t\t\t// Also rename the tab if exist\n\t\t\t\tif(section === 'instances'){\n\t\t\t\t\tval = val + (val.slice(-4) != '.bpi' ? '.bpi' : '');\n\n\t\t\t\t\tlet list = sf.model(\"project-list\").list;\n\t\t\t\t\tfor (let i=0; i < list.length; i++) {\n\t\t\t\t\t\tif(list[i].title === _itemName){\n\t\t\t\t\t\t\tlist[i].title = val;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tMy.fileRename(path, val);\n\t\t\t}\n\t\t}, {\n\t\t\ttitle: \"Delete\", async callback(){\n\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\ttitle: `Are you sure to delete \"${itemName}\"?`,\n\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\tshowCloseButton: true\n\t\t\t\t});\n\n\t\t\t\tif(val.isDismissed) return;\n\n\t\t\t\tif(model.constructor === Object)\n\t\t\t\t\t(await EditorWorkingDir.getDirectory(path))?.delete();\n\t\t\t\telse (await EditorWorkingDir.getFile(path))?.delete();\n\n\t\t\t\tawait My.rescanFiles();\n\t\t\t}\n\t\t}];\n\n\t\tif(itemName === '') menu = [];\n\n\t\tif(model.constructor === Object){\n\t\t\tmenu.push(...[{\n\t\t\t\ttitle: \"New file\", async callback(){\n\t\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\t\ttitle: \"Create file in:\",\n\t\t\t\t\t\ttext: path,\n\t\t\t\t\t\tinput: \"text\",\n\t\t\t\t\t});\n\n\t\t\t\t\tval = val.value;\n\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\tawait EditorWorkingDir.createFile(path+'/'+val);\n\t\t\t\t\tawait My.rescanFiles();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\ttitle: \"New folder\", async callback(){\n\t\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\t\ttitle: \"Create folder in:\",\n\t\t\t\t\t\ttext: path,\n\t\t\t\t\t\tinput: \"text\",\n\t\t\t\t\t});\n\n\t\t\t\t\tval = val.value;\n\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\tawait EditorWorkingDir.getDirectory(path+'/'+val, true);\n\t\t\t\t\tawait My.rescanFiles();\n\t\t\t\t}\n\t\t\t}]);\n\t\t}\n\n\t\tif(section === 'local_nodes'){\n\t\t\tmenu.unshift({\n\t\t\t\ttitle: \"Rescan and reload\",\n\t\t\t\tcallback(){ My.refreshLocalNodes() }\n\t\t\t}, {\n\t\t\t\ttitle: \"New interface template.sf\",\n\t\t\t\tdescription: \"For browser user interface\",\n\t\t\t\tcallback(){ My.refreshLocalNodes() }\n\t\t\t}, {\n\t\t\t\ttitle: \"New node template.js\",\n\t\t\t\tdescription: \"For Node.js/Deno engine\",\n\t\t\t\tcallback(){ My.refreshLocalNodes() }\n\t\t\t});\n\t\t}\n\n\t\tDropDown.show(menu, {x: ev.clientX, y: ev.clientY, event: ev});\n\t}\n\n\tMy.fileListLeave = ev => { if(ev.pressure === 0) ToolTip.set() };\n\tMy.fileListHover = ev => {\n\t\tif(ev.pressure !== 0) return; // Run on hover only, and no button click\n\n\t\tif(!ev.target.classList.contains('title'))\n\t\t\treturn ToolTip.set(false);\n\n\t\tlet { parentKey, itemEl } = My.getElementInfo(ev.target);\n\t\tif(parentKey == null) return ToolTip.set(\"Current working directory for this workspace\");\n\n\t\tparentKey += '/'+itemEl.attr('tree-item-key');\n\t\tparentKey = parentKey.split('/').slice(1).join('/');\n\n\t\tif(itemEl.hasClass('has-child')){\n\t\t\tif(parentKey === 'assets')\n\t\t\t\treturn ToolTip.set(\"You can store project resource here and reference it to current Blackprint instance\\nAny drag and dropped file will be placed here\");\n\n\t\t\tif(parentKey === 'instances')\n\t\t\t\treturn ToolTip.set(\"Blackprint instances will be saved in this folder\");\n\n\t\t\tif(parentKey === 'local_nodes')\n\t\t\t\treturn ToolTip.set(\"You can create custom node for Blackprint here,\\nand this editor will load it for you on workspace init and rescan (by right click this folder)\");\n\t\t}\n\t\telse { // file\n\t\t\tif(parentKey === 'bp-workspace.json')\n\t\t\t\treturn ToolTip.set(\"Blackprint workspace's settings\");\n\t\t}\n\n\t\tToolTip.set(false);\n\t};\n\n\tMy.openFile = function(ev){\n\t\tlet { path, model, section, key } = My.getElementInfo(ev.target);\n\t\tif(model == null || model.constructor === Object) return;\n\n\t\t// Load instance in new tab if not opened, switch tab if already opened\n\t\tif(section === 'instances'){\n\t\t\tlet projectList = sf.model(\"project-list\");\n\t\t\tlet list = projectList.list;\n\t\t\tfor (let i=0; i < list.length; i++) {\n\t\t\t\tif(list[i].title === key){\n\t\t\t\t\tprojectList.switchTab(list[i]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tab = projectList.createTab();\n\t\t\ttab.title = key;\n\n\t\t\tsetTimeout(async () => {\n\t\t\t\tlet file = await My.resolvePath(path);\n\t\t\t\tawait tab.sketch.importJSON(await file.readText());\n\t\t\t\ttab.isUnsaved = false;\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\tMy.fileRename = async function(name, to){\n\t\tif(name.startsWith(EditorWorkingDir.name+'/'))\n\t\t\tname = name.replace(EditorWorkingDir.name+'/', '');\n\n\t\tlet _path = name.split('/');\n\t\t_path.pop(); _path.push(to);\n\t\tto = _path.join('/');\n\n\t\tlet handle = await EditorWorkingDir.resolveCustomHandle(name);\n\t\tawait handle.move(to);\n\n\t\tawait My.rescanFiles();\n\t}\n\n\t// Do not use this for cryptography/encryption\n\tasync function hashString(str){\n\t\tlet temp = '';\n\t\tlet arr = new Uint8Array(await crypto.subtle.digest('SHA-1', new TextEncoder().encode(str)));\n\t\tfor (let i=0; i < arr.length; i++) temp += arr.toString(36);\n\t\treturn temp;\n\t}\n\n\tMy.refreshLocalNodes = async function(){\n\t\t// This only available on development mode editor (as this have eval, it can be dangerous)\n\t\tif(sf.hotReload == null || location.pathname !== '/dev.html')\n\t\t\treturn SmallNotif.add(\"Refresh local nodes feature only available on development mode editor\");\n\n\t\tlet localNodes = My.files[EditorWorkingDir.name].local_nodes;\n\n\t\t// Skip if not exist\n\t\tif(localNodes == null) return;\n\t\tlet notif = SmallNotif.add(\"Rescanning local nodes...\", \"yellow\", false);\n\n\t\tlet cwd = await EditorWorkingDir.recursiveGetFileHandles('local_nodes', {}, My.directories);\n\t\tcompareDir(localNodes, cwd, EditorWorkingDir.name + '/local_nodes');\n\n\t\tlet count = 0;\n\t\tawait isScriptChanged(localNodes, EditorWorkingDir.name);\n\t\tasync function isScriptChanged(dir, path){\n\t\t\t// Prioritize name with underscore first\n\t\t\tlet loadList = [];\n\t\t\tlet prioritizeList = [];\n\n\t\t\tfor (let key in dir) {\n\t\t\t\tlet target = dir[key];\n\n\t\t\t\tif(target.constructor === Object){\n\t\t\t\t\tawait isScriptChanged(target, path + '/' + key);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Only load file with .js extension\n\t\t\t\tif(!target.name.endsWith('.js') && !target.name.endsWith('.sf')) continue;\n\t\t\t\tif(target.name.startsWith('_')) prioritizeList.push(key);\n\t\t\t\telse loadList.push(key);\n\t\t\t}\n\n\t\t\tloadList.unshift(...prioritizeList);\n\t\t\tfor (let i=0; i < loadList.length; i++) {\n\t\t\t\tlet target = dir[loadList[i]];\n\n\t\t\t\t// is file\n\t\t\t\tlet content = await target.readText();\n\t\t\t\tlet hash = await hashString(content);\n\n\t\t\t\t// Skip if content was unchanged\n\t\t\t\tif(target._hash === hash) continue;\n\t\t\t\ttarget._hash = hash;\n\n\t\t\t\t// Parse .sf template file\n\t\t\t\tif(target.name.endsWith('.sf')){\n\t\t\t\t\tlet temp = sf.parser.parseTemplate(content);\n\t\t\t\t\tsf.parser.load(path + '/' + target.name, temp);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Load node or .js script into the editor\n\t\t\t\ttry{ eval(content); count++; } catch(e) {\n\t\t\t\t\tnotif.change(\"Failed to load node from local_nodes\", \"red\");\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnotif.change(count + \" file was reloaded\", \"green\");\n\t\tawait new Promise(resolve => setTimeout(resolve, 200));\n\t}\n});","## html\n<!-- Filling the default page if haven't being routed -->\n<sf-m name=\"welcome-text\" class=\"welcome-text\">\n\t<h1>Welcome to Blackprint Editor!</h1>\n\t<div class=\"description\">This editor haven't been designed for mobile screen.</div>\n\t<div class=\"content\">\n\t\t<div class=\"item\" @click=\"toWorkspace\">\n\t\t\t<i class=\"fas fa-torii-gate\"></i> Go to sketch page\n\t\t</div>\n\t\t<div class=\"item\" @click=\"openExamples\">\n\t\t\t<i class='fa fa-map-signs'></i> <span>Open examples</span>\n\t\t</div>\n\t\t<div class=\"item\" onclick=\"Modal.goto('/documentation')\">\n\t\t\t<i class='fa fa-book-open'></i> <span>Documentation</span>\n\t\t</div>\n\t</div>\n\n\t<div class=\"vscode-preview\" style=\"margin-top: 20px;\">\n\t\t<a href=\"https://marketplace.visualstudio.com/items?itemName=Blackprint.blackprint-vscode-extension\" class=\"description\" style=\"color: #a3e372;\">\n\t\t\tYou can also grab the VSCode extension here to use Blackprint on your editor\n\t\t</a>\n\t</div>\n\n\t<div class=\"available-engine\">\n\t\t<div class=\"title\">Blackprint Engine also available for:</div>\n\t\t<div class=\"list\">\n\t\t\t<!-- python, csharp, java/kotlin, cplusplus, go, rust, docker -->\n\t\t\t<!-- css3, html5 -->\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\n\t\t\t\t<img src=\"/assets/img/icon/denojs.svg\">\n\t\t\t\t<div class=\"name\">Deno</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/nodejs/nodejs-plain.svg\">\n\t\t\t\t<div class=\"name\">Node.js</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-php\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/php/php-plain.svg\">\n\t\t\t\t<div class=\"name\">PHP</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-go\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/go/go-original-wordmark.svg\">\n\t\t\t\t<div class=\"name\">Golang</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-python\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/python/python-plain.svg\" style=\"max-width: 45px;margin-bottom: 2px;\">\n\t\t\t\t<div class=\"name\">Python</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-lua\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/lua/lua-plain.svg\">\n\t\t\t\t<div class=\"name\">Luau</div>\n\t\t\t</a>\n\t\t\t<!--a class=\"item\" href=\"https://github.com/Blackprint/engine-csharp\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/csharp/csharp-plain.svg\">\n\t\t\t\t<div class=\"name\">C#</div>\n\t\t\t</a-->\n\t\t</div>\n\t</div>\n</sf-m>\n\n<div class=\"welcome-left\">\n\t<!--a target=\"_blank\" href=\"https://ko-fi.com/stefansarya\">\n\t\t<i class=\"fas fa-mug-hot\"></i> Ko-fi\n\t</a-->\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint\">\n\t\t<i class=\"fab fa-github\"></i> GitHub\n\t</a>\n\t<!--a target=\"_blank\" href=\"https://stefansarya.gitbook.io/blackprint\">\n\t<a style=\"cursor: pointer\" onclick=\"Modal.goto('/documentation')\">\n\t\t<i class=\"fa fa-book-open\"></i> Documentation\n\t</a-->\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint/discussions\">\n\t\t<i class=\"fa fa-comments\"></i> Discussions\n\t</a>\n</div>\n\n<div class=\"welcome-right\">\n\t<a target=\"_blank\" style=\"cursor: pointer;\" onclick=\"Modal.goto('/terms-and-privacy')\">\n\t\tTerms and Privacy <i class=\"fas fa-file-alt\"></i>\n\t</a>\n\t<a target=\"_blank\" style=\"cursor: pointer;\" onclick=\"Modal.goto('/npm-packages')\">\n\t\tPackage List <i class=\"fas fa-boxes\"></i>\n\t</a>\n\t<a target=\"_blank\" href=\"https://www.npmjs.com/search?q=keywords:blackprint\">\n\t\tnpm.js <i class=\"fas fa-box\"></i>\n\t</a>\n</div>\n\n## scss-global\n.welcome-text{\n\tcolor: white;\n\ttext-align: center;\n\tpadding: 0 20px;\n\n\t> .description{\n\t\twhite-space: pre-line;\n\t}\n\n\t> .content{\n\t\tmax-width: 750px;\n\t\twidth: 90vw;\n\t\tdisplay: inline-flex;\n\n\t\t.item{\n\t\t\tpadding: 10px;\n\t\t\twidth: 200px;\n\t\t\tmargin: 10px 14px;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 10px;\n\t\t\tbox-shadow: 0px 0px 3px white;\n\t\t\tborder: 1px solid #c5c5c5;\n\t\t\tbackground: #0000008a;\n\t\t}\n\t}\n\n\t.available-engine{\n\t\tbottom: 0;\n\t\twidth: 100vw;\n\t\tleft: 0;\n\t\tposition: absolute;\n\t\t// .title{ }\n\t\t.list .item{\n\t\t\twidth: 50px;\n\t\t\timg{\n\t\t\t\tmax-width: 50px;\n\t\t\t\tfilter: brightness(0) invert(1);\n\t\t\t}\n\n\t\t\tdisplay: inline-block;\n\t\t\tcolor: white;\n\t\t\tmargin: 0 5px;\n\t\t}\n\t\ta:hover {\n\t\t\tfilter: drop-shadow(0 0 5px white);\n\t\t}\n\t}\n}\n\n.welcome-left{\n\tdisplay: grid;\n\tposition: absolute;\n\tcolor: #a0a0a0;\n\tbottom: 0;\n\tleft: 10px;\n\ti{\n\t\tmargin-right: 5px;\n\t}\n\ta:hover {\n\t\tcolor: white;\n\t\ttext-shadow: 0 0 4px white;\n\t}\n}\n\n.welcome-right{\n\tdisplay: grid;\n\tposition: absolute;\n\tcolor: #a0a0a0;\n\tbottom: 0;\n\tright: 10px;\n\ttext-align: right;\n\ti{\n\t\tmargin-left: 5px;\n\t}\n\ta:hover {\n\t\tcolor: white;\n\t\ttext-shadow: 0 0 4px white;\n\t}\n}\n\n## js-global\nsf.model('welcome-text', function(My){\n\tMy.toWorkspace = function(){\n\t\tif(SketchList.length === 0)\n\t\t\tSketchList[0] = new Blackprint.Sketch();\n\n\t\tviews.goto('/sketch/1');\n\t}\n\n\tMy.openExamples = function(){\n\t\tModal.goto('/example-list');\n\t}\n});","## html\n<sf-m name=\"sketch-pages\">\n\t<sf-template path=\"BPEditor/model/project-panel-left.sf\"></sf-template>\n\n\t<!-- /src/routes/+vw-ground/sketch.sf -->\n\t<vw-page></vw-page>\n</sf-m>\n\n## js-global.router\n={\n\ton:{\n\t\tshowed(){\n\t\t\t// Show sketch options\n\t\t\tsf.model('header').showOptions = true;\n\t\t},\n\t\thidden(){\n\t\t\tsf.model('header').showOptions = false;\n\t\t}\n\n\t\t/*\n\t\tshowed: Sketch container have been loaded,\n\t\tcoming: The cable would have wrong position because the DOM still hidden,\n\t\tleaving: Maybe we can uninitialize something,\n\t\thidden: Animate something maybe\n\t\t*/\n\t}\n}\n\n## scss-global\nvw-page{\n\tposition: absolute;\n\theight: 100%;\n\twidth: 100%;\n\n\t&.page-current{\n\t\ttop: 0;\n\t}\n}\n\n## js-global\nsf.model('sketch-pages', function(My){\n\tfunction checkIfHasSelection(ev, skipSelectionCheck){\n\t\t// Skip textbox/input element\n\t\tlet tagName = ev.target.tagName;\n\t\tif(tagName === 'INPUT' || tagName === 'TEXTAREA') return;\n\n\t\tlet sketch = window.CurrentSketch;\n\t\tif(sketch == null) return;\n\n\t\tlet container = sketch.scope('container');\n\n\t\t// Skip if no selected nodes/cables\n\t\tif(!skipSelectionCheck && container.nodeScope.selected.length === 0 && container.cableScope.selected.length === 0)\n\t\t\treturn;\n\n\t\treturn {sketch, container};\n\t}\n\n\tfunction exportAndReduceNodePositions(sketchInstance){\n\t\tlet data = JSON.parse(sketchInstance.exportJSON({\n\t\t\tselectedOnly: true,\n\t\t\tenvironment: false,\n\t\t\texportFunctions: false,\n\t\t\texportVariables: false,\n\t\t}));\n\n\t\t// Find lowest position value\n\t\tlet instance = data.instance;\n\t\tlet x = Infinity, y = Infinity;\n\t\tfor(let key in instance){\n\t\t\tlet val = instance[key];\n\t\t\tfor(let i=0; i < val.length; i++){\n\t\t\t\tlet node = val[i];\n\t\t\t\tif(node.x < x) x = node.x;\n\t\t\t\tif(node.y < y) y = node.y;\n\t\t\t}\n\t\t}\n\n\t\tif(x === Infinity) x = 0;\n\t\tif(y === Infinity) y = 0;\n\n\t\t// Reduce nodes positions\n\t\tfor(let key in instance){\n\t\t\tlet val = instance[key];\n\t\t\tfor(let i=0; i < val.length; i++){\n\t\t\t\tlet node = val[i];\n\t\t\t\tnode.x -= x;\n\t\t\t\tnode.y -= y;\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tfunction reorderMenu(list, prioritizeKey=[]){\n\t\tlet priority = [];\n\t\tlet kv = {};\n\t\tfor (let i=list.length-1; i >= 0; i--) {\n\t\t\tlet temp = list[i];\n\t\t\tif(prioritizeKey.includes(temp.title)){\n\t\t\t\tkv[temp.title] = temp;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tfor (let i=0; i < prioritizeKey.length; i++) {\n\t\t\tlet exist = kv[prioritizeKey[i]];\n\t\t\tif(exist == null) continue;\n\t\t\tpriority.push(exist);\n\t\t\tdelete kv[prioritizeKey[i]];\n\t\t}\n\n\t\tlist.unshift(...priority);\n\t}\n\n\tlet pointerX, pointerY;\n\tMy._onMenuCreateNode = function({ menu, position, options, event, preventDefault }){\n\t\tif(My.skipMenuHandler) return;\n\t\tpreventDefault();\n\n\t\tposition.event = event;\n\n\t\t// Check if doing region select when opening this context menu\n\t\tlet container = CurrentSketch.scope('container');\n\t\tif(container.select.w > 30 || container.select.h > 30){\n\t\t\tlet { x, y, w, h, ix, iy } = container.select;\n\n\t\t\tif(ix) x = x - w;\n\t\t\tif(iy) y = y - h;\n\n\t\t\tposition.title = \"Region Select\";\n\t\t\tDropDown.show([{\n\t\t\t\ttitle: \"Create a group region\",\n\t\t\t\tdescription: \"A region marker where you can move all nodes as a group\",\n\t\t\t\tcallback(){\n\t\t\t\t\tlet iface = CurrentSketch.createNode('Decoration/Group/Default', {\n\t\t\t\t\t\tx, y: y-21, data: {width: w, height: h+21, title: \"No title\"},\n\t\t\t\t\t});\n\n\t\t\t\t\tiface.refreshContent();\n\t\t\t\t\tiface.swapZIndex(); // simulate click\n\t\t\t\t},\n\t\t\t}, {\n\t\t\t\ttitle: \"Create a function node\",\n\t\t\t\tdescription: \"Move the selected region content as a function node\",\n\t\t\t\tasync callback(){\n\t\t\t\t\tif(container.nodeScope.selected.length === 0)\n\t\t\t\t\t\treturn SmallNotif.add(\"Nodes need to be selected before using this feature\", 'red');\n\n\t\t\t\t\tlet val = await Swal.fire({\n\t\t\t\t\t\ttitle: \"Function Name:\",\n\t\t\t\t\t\tinputPlaceholder: \"MyApp/Custom/Function\",\n\t\t\t\t\t\tinput: \"text\",\n\t\t\t\t\t});\n\n\t\t\t\t\tval = val.value;\n\t\t\t\t\tif(!val) return;\n\n\t\t\t\t\t// Reorder index based on x and y position\n\t\t\t\t\tlet selectedNodes = CurrentSketch.scope('nodes').selected;\n\t\t\t\t\tselectedNodes = selectedNodes.sort((a, b) => a.y - b.y || a.x - b.x); // Compare y position first\n\n\t\t\t\t\t// Find cables that connected to unselected nodes, and find middle position\n\t\t\t\t\tlet sx = Infinity, sy = Infinity, mx = 0, my = 0; // Start x/y, Max x/y\n\t\t\t\t\tlet unselectedNodeCables = {};\n\t\t\t\t\tfor (let i=0; i < selectedNodes.length; i++) {\n\t\t\t\t\t\tlet iface = selectedNodes[i];\n\t\t\t\t\t\tlet { input, output } = iface;\n\n\t\t\t\t\t\tif(sx > iface.x) sx = iface.x;\n\t\t\t\t\t\tif(sy > iface.y) sy = iface.y;\n\t\t\t\t\t\tif(mx < iface.x) mx = iface.x;\n\t\t\t\t\t\tif(my < iface.y) my = iface.y;\n\n\t\t\t\t\t\tfor (let key in input) {\n\t\t\t\t\t\t\tlet cables = input[key].cables;\n\t\t\t\t\t\t\tfor (let a=0; a < cables.length; a++) {\n\t\t\t\t\t\t\t\tlet cable = cables[a];\n\t\t\t\t\t\t\t\tlet targetIface = cable.output.iface;\n\t\t\t\t\t\t\t\tif(!selectedNodes.includes(targetIface)){\n\t\t\t\t\t\t\t\t\tunselectedNodeCables[i] ??= [];\n\t\t\t\t\t\t\t\t\tunselectedNodeCables[i].push({\n\t\t\t\t\t\t\t\t\t\ttype: 'input',\n\t\t\t\t\t\t\t\t\t\tname: key,\n\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\ttargetIndex: targetIface.i,\n\t\t\t\t\t\t\t\t\t\tconnectedPort: cable.output,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let key in output) {\n\t\t\t\t\t\t\tlet cables = output[key].cables;\n\t\t\t\t\t\t\tfor (let a=0; a < cables.length; a++) {\n\t\t\t\t\t\t\t\tlet cable = cables[a];\n\t\t\t\t\t\t\t\tlet targetIface = cable.input.iface;\n\t\t\t\t\t\t\t\tif(!selectedNodes.includes(targetIface)){\n\t\t\t\t\t\t\t\t\tunselectedNodeCables[i] ??= [];\n\t\t\t\t\t\t\t\t\tunselectedNodeCables[i].push({\n\t\t\t\t\t\t\t\t\t\ttype: 'output',\n\t\t\t\t\t\t\t\t\t\tname: key,\n\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\ttargetIndex: targetIface.i,\n\t\t\t\t\t\t\t\t\t\tconnectedPort: cable.input,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet instanceCopy = {}; // We need to reset the load order because we add 2 nodes\n\t\t\t\t\tlet inputNode = instanceCopy[\"BP/Fn/Input\"] = [{i: 0, x: 100, y: 100, z: 0, output: {}}];\n\t\t\t\t\tlet outputNode = instanceCopy[\"BP/Fn/Output\"] = [{i: 1, x: 700, y: 100, z: 1}];\n\t\t\t\t\tinputNode = inputNode[0];\n\t\t\t\t\toutputNode = outputNode[0];\n\n\t\t\t\t\tlet usedInputName = {}; // {name: [targetIndex]}\n\t\t\t\t\tlet usedOutputName = {}; // {name: [targetIndex]}\n\n\t\t\t\t\tfunction findUsedIndex(data, targetIndex){\n\t\t\t\t\t\tlet used;\n\t\t\t\t\t\tif(data.type === 'input') used = usedInputName[data.name] ??= [];\n\t\t\t\t\t\telse if(data.type === 'output') used = usedOutputName[data.name] ??= [];\n\t\t\t\t\t\telse throw new Error(\"Port source is not recognized\");\n\n\t\t\t\t\t\tlet usedHasIndex = used.indexOf(targetIndex);\n\t\t\t\t\t\tif(usedHasIndex === -1){\n\t\t\t\t\t\t\tused.push(targetIndex);\n\t\t\t\t\t\t\treturn used.length - 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn usedHasIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet json = exportAndReduceNodePositions(CurrentSketch.rootInstance || CurrentSketch);\n\t\t\t\t\tlet instance = json.instance;\n\t\t\t\t\tfor (let key in instance) {\n\t\t\t\t\t\tlet ifaces = instance[key];\n\t\t\t\t\t\tfor (let i=0; i < ifaces.length; i++) {\n\t\t\t\t\t\t\tlet iface = ifaces[i];\n\t\t\t\t\t\t\tiface.x += 300;\n\t\t\t\t\t\t\tiface.y += 100;\n\t\t\t\t\t\t\tiface.i += 2;\n\t\t\t\t\t\t\tiface.z += 2;\n\n\t\t\t\t\t\t\tlet unconnectedCables = unselectedNodeCables[i];\n\t\t\t\t\t\t\tif(unconnectedCables != null){\n\t\t\t\t\t\t\t\tfor (let a=0; a < unconnectedCables.length; a++) {\n\t\t\t\t\t\t\t\t\tlet temp = unconnectedCables[a];\n\t\t\t\t\t\t\t\t\tif(temp.type === 'input'){\n\t\t\t\t\t\t\t\t\t\tlet usedAt = findUsedIndex(temp, iface.i);\n\t\t\t\t\t\t\t\t\t\tlet output = inputNode.output;\n\t\t\t\t\t\t\t\t\t\tlet newName = temp.name+(usedAt !== 0 ? usedAt : '');\n\t\t\t\t\t\t\t\t\t\tlet ref = output[newName] ??= [];\n\t\t\t\t\t\t\t\t\t\tref.push({\n\t\t\t\t\t\t\t\t\t\t\ti: iface.i,\n\t\t\t\t\t\t\t\t\t\t\tname: temp.name\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\ttemp.newName = newName;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif(temp.type === 'output'){\n\t\t\t\t\t\t\t\t\t\tlet usedAt = findUsedIndex(temp, i);\n\t\t\t\t\t\t\t\t\t\tlet output = iface.output ??= {};\n\t\t\t\t\t\t\t\t\t\tlet ref = output[temp.name] ??= [];\n\t\t\t\t\t\t\t\t\t\tlet newName = temp.name+(usedAt !== 0 ? usedAt : '');\n\t\t\t\t\t\t\t\t\t\tif(ref.length === 0){\n\t\t\t\t\t\t\t\t\t\t\tref.push({\n\t\t\t\t\t\t\t\t\t\t\t\ti: outputNode.i,\n\t\t\t\t\t\t\t\t\t\t\t\tname: newName\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttemp.newName = newName;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinstanceCopy[key] = ifaces;\n\t\t\t\t\t}\n\n\t\t\t\t\tinstance = json.instance = instanceCopy;\n\t\t\t\t\tCurrentSketch.createFunction(val, {structure: json, description: \"No description\"});\n\t\t\t\t\tlet funcIface = CurrentSketch.createNode('BPI/F/'+val, {\n\t\t\t\t\t\tx: sx + (mx - sx)/3,\n\t\t\t\t\t\ty: sy + (my - sy)/3,\n\t\t\t\t\t});\n\n\t\t\t\t\tfuncIface.once('ready', ()=> {\n\t\t\t\t\t\t// Delete old selected nodes that already being copied to function node\n\t\t\t\t\t\tfor (let i=0; i < selectedNodes.length; i++)\n\t\t\t\t\t\t\tCurrentSketch.deleteNode(selectedNodes[i]);\n\n\t\t\t\t\t\tfuncIface.x -= funcIface.w / 2;\n\t\t\t\t\t\tfuncIface.y -= funcIface.h;\n\n\t\t\t\t\t\t// Swap cable connection from old nodes into our function node\n\t\t\t\t\t\tfor (let key in unselectedNodeCables) {\n\t\t\t\t\t\t\tlet list = unselectedNodeCables[key];\n\t\t\t\t\t\t\tfor (let i=0; i < list.length; i++) {\n\t\t\t\t\t\t\t\tlet data = list[i];\n\t\t\t\t\t\t\t\tif(data.type === 'input')\n\t\t\t\t\t\t\t\t\tdata.connectedPort.connectPort(funcIface.input[data.newName]);\n\t\t\t\t\t\t\t\telse if(data.type === 'output')\n\t\t\t\t\t\t\t\t\tdata.connectedPort.connectPort(funcIface.output[data.newName]);\n\t\t\t\t\t\t\t\telse throw new Error(\"Unrecognized port source\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t}], position);\n\t\t\treturn;\n\t\t}\n\n\t\tposition.hasSearch = true;\n\t\tposition.searchObject = Blackprint._docs;\n\t\tposition.title = \"Create Node\";\n\n\t\tsort(menu);\n\t\tfunction sort(obj){\n\t\t\tobj.sort((a, b) => a.title.localeCompare(b.title));\n\t\t\tfor (let i=0; i < obj.length; i++) {\n\t\t\t\tif(obj.deep != null) sort(obj.deep);\n\t\t\t}\n\t\t}\n\n\t\tif(My._cableDropMenu != null){\n\t\t\tlet cable = My._cableDropMenu;\n\t\t\tposition.title = \"Suggested Node\";\n\t\t\tlet ownerContext = cable.owner.iface.namespace.split('/').slice(0, 2);\n\t\t\treorderMenu(menu, [\n\t\t\t\townerContext[0],\n\t\t\t\t'Data',\n\t\t\t\t'Input',\n\t\t\t]);\n\n\t\t\tlet sketch = CurrentSketch;\n\t\t\tfunction createNode(namespace, data){\n\t\t\t\tlet offset = event.target.getBoundingClientRect();\n\t\t\t\tlet iface = sketch.createNode(namespace, {\n\t\t\t\t\tx: event.clientX - offset.x,\n\t\t\t\t\ty: event.clientY - offset.y,\n\t\t\t\t\tdata,\n\t\t\t\t});\n\n\t\t\t\toptions.onCreated?.(iface);\n\t\t\t}\n\n\t\t\tlet Variables = [];\n\t\t\tif(cable.source === 'output'){\n\t\t\t\tasync function promoteToVar(scope){\n\t\t\t\t\tlet ref = await My.panels.left.createVariable(null, scope);\n\t\t\t\t\tlet offset = event.target.getBoundingClientRect();\n\t\t\t\t\tlet iface = sketch.createNode('BP/Var/Set', {\n\t\t\t\t\t\tx: event.clientX - offset.x,\n\t\t\t\t\t\ty: event.clientY - offset.y,\n\t\t\t\t\t\tdata: { name: ref.id, scope }\n\t\t\t\t\t});\n\t\t\t\t\tiface.useType(cable.owner);\n\t\t\t\t\tiface.input.Val.connectCable(cable);\n\t\t\t\t}\n\n\t\t\t\tVariables.push({\n\t\t\t\t\ttitle: \"New Public\",\n\t\t\t\t\ticon: 'fa fa-plus-square',\n\t\t\t\t\tcallback(){promoteToVar(Blackprint.VarScope.Public)}\n\t\t\t\t});\n\n\t\t\t\t// is inside function?\n\t\t\t\tif(sketch.parentInterface){\n\t\t\t\t\tVariables.push({\n\t\t\t\t\t\ttitle: \"New Private\",\n\t\t\t\t\t\ticon: 'fa fa-plus-square',\n\t\t\t\t\t\tcallback(){promoteToVar(Blackprint.VarScope.Private)}\n\t\t\t\t\t}, {\n\t\t\t\t\t\ttitle: \"New Shared\",\n\t\t\t\t\t\ticon: 'fa fa-plus-square',\n\t\t\t\t\t\tcallback(){promoteToVar(Blackprint.VarScope.Shared)}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif(cable.owner.type === String || cable.owner.type.any){\n\t\t\t\t\tif(Blackprint.Environment._list.length !== 0){\n\t\t\t\t\t\tVariables.unshift({\n\t\t\t\t\t\t\ttitle: \"Environment\",\n\t\t\t\t\t\t\tdeep: Blackprint.Environment._list.map(v => ({\n\t\t\t\t\t\t\t\ttitle: v.key,\n\t\t\t\t\t\t\t\tcallback(){createNode('BP/Env/Set', {name: v.key})}\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(cable.source === 'input'){\n\t\t\t\tif(cable.owner.type === String || cable.owner.type.any){\n\t\t\t\t\tif(Blackprint.Environment._list.length !== 0){\n\t\t\t\t\t\tVariables.unshift({\n\t\t\t\t\t\t\ttitle: \"Environment\",\n\t\t\t\t\t\t\tdeep: Blackprint.Environment._list.map(v => ({\n\t\t\t\t\t\t\t\ttitle: v.key,\n\t\t\t\t\t\t\t\tcallback(){createNode('BP/Env/Get', {name: v.key})}\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet port = cable.owner;\n\t\t\tlet funcList = Blackprint.Sketch.suggestNode(port.source === 'input' ? 'output' : 'input', port.type, sketch.functions);\n\n\t\t\tfuncList = Object.keys(funcList).map(v => ({\n\t\t\t\ttitle: v,\n\t\t\t\tcallback(){createNode(`BPI/F/${v}`)}\n\t\t\t}));\n\n\t\t\tif(Variables.length !== 0) menu.push({title: \"Variables\", deep: Variables});\n\t\t\tif(funcList.length !== 0) menu.push({title: \"Functions\", deep: funcList});\n\t\t}\n\n\t\tDropDown.show(menu, position);\n\t}\n\n\tMy._onWindow_keydown = async (ev) => {\n\t\tlet passed = checkIfHasSelection(ev);\n\t\tif(!passed) return;\n\t\tlet {sketch, container} = passed;\n\n\t\t// Currently we only support copy/paste/delete for nodes\n\t\tif(container.nodeScope.selected.length === 0 && container.cableScope.selected.length === 0) return;\n\n\t\tif(ev.key === 'Delete'){\n\t\t\tlet selected = container.nodeScope.selected;\n\t\t\tfor(let i=0; i < selected.length; i++)\n\t\t\t\tsketch.deleteNode(selected[i]);\n\n\t\t\tselected.splice(0);\n\n\t\t\tselected = container.cableScope.selected;\n\t\t\tfor(let i=0; i < selected.length; i++)\n\t\t\t\tselected[i].disconnect();\n\n\t\t\tselected.splice(0);\n\t\t}\n\t}\n\n\tMy._onWindow_pointermove = function(ev){\n\t\tpointerX = ev.clientX;\n\t\tpointerY = ev.clientY;\n\t}\n\n\tMy._onWindow_copy = function(ev){\n\t\tlet passed = checkIfHasSelection(ev);\n\t\tif(!passed) return;\n\t\tlet {sketch, container} = passed;\n\n\t\t// Currently we only support copy/paste/delete for nodes\n\t\tif(container.nodeScope.selected.length === 0) return;\n\n\t\tev.clipboardData.setData('text/plain', JSON.stringify(exportAndReduceNodePositions(CurrentSketch)));\n\t\tev.preventDefault();\n\t}\n\n\tMy._onWindow_paste = async function(ev){\n\t\tlet passed = checkIfHasSelection(ev, true);\n\t\tif(!passed) return;\n\t\tlet {sketch, container} = passed;\n\n\t\tlet data = ev.clipboardData.getData('text/plain').trim();\n\n\t\ttry {\n\t\t\tdata = JSON.parse(data);\n\t\t} catch(e){\n\t\t\treturn; // not valid JSON\n\t\t}\n\n\t\tif(data.instance == null) return; // Not Blackprint Instance\n\n\t\tlet {x, y} = container.pos; // Negative value\n\t\tlet {x: oX, y: oY} = container.offset; // Negative value\n\t\tlet scale = container.scale; // Negative value\n\n\t\t// Reposition the nodes near the pointer or current container\n\t\tlet instance = data.instance;\n\t\tfor(let key in instance){\n\t\t\tlet val = instance[key];\n\t\t\tfor(let i=0; i < val.length; i++){\n\t\t\t\tlet node = val[i];\n\t\t\t\tnode.x += (-x - oX + pointerX) / scale;\n\t\t\t\tnode.y += (-y - oY + pointerY) / scale;\n\t\t\t}\n\t\t}\n\n\t\tlet lastIndex = container.nodeScope.list.length;\n\t\tawait sketch.importJSON(data, {appendMode: true});\n\n\t\tlet { cableScope, nodeScope } = container;\n\t\tcableScope.selected.forEach(v => v.selected = false);\n\t\tcableScope.selected.splice(0);\n\n\t\tnodeScope.selected.forEach(v => v._nodeSelected = false);\n\t\tnodeScope.selected.splice(0);\n\t\tnodeScope.selected.push(...nodeScope.list.slice(lastIndex));\n\t\tnodeScope.selected.forEach(v => v._nodeSelected = true);\n\t}\n\n\tif(My._eventOnce == null){\n\t\tMy._eventOnce = true;\n\t\tMy._cableDropMenu = null;\n\t\tMy.skipMenuHandler = false;\n\t\tBlackprint.on('menu.create.node', data => My._onMenuCreateNode(data));\n\n\t\t$(window).on('keydown', ev => My._onWindow_keydown(ev))\n\t\t.on('pointermove', ev => My._onWindow_pointermove(ev))\n\t\t.on('copy', ev => My._onWindow_copy(ev))\n\t\t.on('paste', ev => My._onWindow_paste(ev))\n\t}\n});","## html\n<sf-m name=\"code-generator\">\n\t<div class=\"title\">Code Generator <div title=\"This feature may have many changes in the future\">(<i class=\"fa fa-flask\"></i> Experimental)</div></div>\n\t<div class=\"section\">Target language: <i class=\"fa fa-question-circle\" title=\"Nodes need to register their code generation for using this feature, and some nodes may not support the target languages.\"></i></div>\n\t<select class=\"list\" sf-bind=\"target\">\n\t\t<option class=\"item\" :value=\"{{ x.languageId }}\" sf-each=\"x in list\">\n\t\t\t{{ x.languageName }}\n\t\t</option>\n\t</select>\n\n\t<div class=\"button\" @click=\"refresh()\">Generate</div>\n\n\t<div class=\"section {{ !error.length && 'hide' }}\">Error:</div>\n\t<div class=\"error-list {{ !error.length && 'hide' }}\">\n\t\t<div class=\"item {{ x.type }}\" sf-each=\"x in error\" title=\"{{ x.help || '' }}\">\n\t\t\t{{ x.message }}\n\t\t</div>\n\t</div>\n\n\t<div class=\"section\">Code Result:</div>\n\t<div style=\"display: {{ target !== 'js' ? 'none' : ''}}\" class=\"code-result-minify\" title=\"Minify code\" @click=\"minifyCode()\">\n\t\t<i class=\"fa fa-compress-arrows-alt\"></i>\n\t</div>\n\t<div class=\"code-result-copy\" title=\"Copy to clipboard\" @click=\"copyToClipboard()\">\n\t\t<i class=\"fa fa-copy\"></i>\n\t</div>\n\t<div class=\"code-result\"><pre><code>...</code></pre></div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"code-generator\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\twidth: 500px;\n\t.hide{\n\t\tdisplay: none;\n\t}\n\t.title{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\tbackground: #121212;\n   \t\tbox-shadow: 0 0 4px black;\n\t\tdiv {\n\t\t\tfont-size: 12px;\n\t\t\tcolor: #bf7a7a;\n\t\t\tfont-weight: bold;\n\t\t\tdisplay: inline-block;\n\t\t\tletter-spacing: 1px;\n\t\t}\n\t}\n\t.section{\n\t\tpadding: 10px 0 0 10px;\n\t\tcolor: #b5b5b5;\n\t\tfont-size: 14px;\n\t}\n\ttextarea{\n\t\tmargin: 5px 10px;\n\t\twidth: calc(100% - 40px);\n\t\theight: 100px;\n\t\tcolor: white;\n\t\tbackground: #121212;\n\t\tborder: none;\n\t\toutline: none;\n\t\tborder-radius: 5px;\n\t\tpadding: 10px;\n\t\ttab-size: 4;\n\t\twhite-space: nowrap;\n\t}\n\t.error-list{\n\t\tpadding: 10px;\n\t\t.item{\n\t\t\tbackground: black;\n\t\t\tpadding: 3px 7px;\n\t\t\tborder-radius: 10px;\n\t\t\tcolor: white;\n\t\t\t&.error {\n\t\t\t\tbox-shadow: 0 0 6px #8f4141;\n\t\t\t}\n\t\t}\n\t}\n\tselect.list {\n\t\tbackground: black;\n\t\tcolor: white;\n\t\tpadding: 5px;\n\t\tmargin-left: 10px;\n\t\tborder: 1px solid #444444;\n\t\toutline: none;\n\t}\n\t.code-result pre {\n\t\tmargin-top: 3px;\n\t\tbackground: #000000a1;\n\t\tpadding: 10px;\n\t\toverflow: auto;\n\t\tmax-width: 100%;\n\t\tmax-height: 200px;\n\t}\n\t.code-result-copy, .code-result-minify {\n\t\tposition: absolute;\n\t\tright: 20px;\n\t\tpadding: 6px 9px 4px 9px;\n\t\tbackground: #1e1e1e;\n\t\tborder-radius: 35px;\n\t\tborder: 1px solid #000000;\n\t\tcursor: pointer;\n\t\tbox-shadow: 0 0 2px white;\n\t\t&:hover {\n\t\t\tbackground: #323232;\n\t\t}\n\t}\n\t.code-result-minify {\n\t\tright: 62px;\n\t}\n\n\t.button{\n\t\tdisplay: inline-block;\n\t\tcolor: #fff;\n\t\tbackground: #0000009e;\n\t\tcursor: pointer;\n\t\tborder-radius: 4px;\n\t\tpadding: 5px;\n\t\tmargin: 5px;\n\t\tborder: 1px solid #000;\n\t\t&:hover{\n\t\t\tbackground: #2c2b229e;\n\t\t\tbox-shadow: 0 0 7px #cbaf25;\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('code-generator', function(My){\n\tMy.list = Blackprint.Code.handlers;\n\n\tMy.target = localStorage.codeGeneratorLanguage || 'js';\n\tMy.error = [];\n\tMy.code = '';\n\n\tMy.init = function(){\n\t\tlet el = My.$el(`.list option[value=\"${My.target}\"]`);\n\t\tel.attr('selected', '');\n\n\t\t// If the last handler is not registered, let's use first language as default\n\t\tif(el[0] == null){\n\t\t\tlet first;\n\t\t\tfor (let key in My.list) {\n\t\t\t\tfirst = My.list[key];\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tMy.target = localStorage.codeGeneratorLanguage = first.languageId;\n\t\t}\n\t}\n\n\tMy.refresh = async function(){\n\t\tMy.code = '';\n\t\tMy.error.splice(0);\n\n\t\tlocalStorage.codeGeneratorLanguage = My.target;\n\n\t\ttry{\n\t\t\tMy.code = await Blackprint.Code.generateFrom(CurrentSketch, My.target, 'MyApp');\n\t\t\tMy.refreshCodeResult();\n\t\t} catch(e) {\n\t\t\tMy.error.push({type: 'error', message: e.message});\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\n\tMy.refreshCodeResult = function(){\n\t\tlet html = hljs.highlight(My.code, {language: My.target}).value;\n\t\tlet el = $('<pre><code></code></pre>');\n\t\tel.find('code').append(html);\n\t\t$('.code-result').text('').append(el);\n\t}\n\n\tMy.copyToClipboard = function(){\n\t\tnavigator.clipboard.writeText(My.code);\n\t\tSmallNotif.add(\"Copied to clipboard!\", 'green');\n\t}\n\n\tMy.minifyCode = async function(){\n\t\tif(!window.Terser){\n\t\t\tsf.loader.js(['https://cdn.jsdelivr.net/npm/terser@5.17.3/dist/bundle.min.min.js']);\n\t\t\tawait sf.loader.task;\n\t\t}\n\n\t\t// Keep comment\n\t\tlet temp = My.code;\n\t\tlet comment = temp.slice(0, temp.indexOf('*/') + 2);\n\t\tlet code = temp.slice(temp.indexOf('*/') + 2);\n\n\t\tMy.code = comment + '\\n\\n' + (await Terser.minify(code, { mangle: true })).code;\n\t\tMy.refreshCodeResult();\n\t}\n});","## html\n<sf-m name=\"custom-node-editor\">\n\t<div class=\"editor\" @keydown.ctrl.Enter.prevent=\"run\">\n\t\t<div class=\"bp-loading-status\" style=\"color: white; padding: 20px\">Loading Monaco Editor...</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item\" @click=\"run\" title=\"Execute (Ctrl + Enter)\"><i class=\"fa fa-play\"></i></div>\n\t\t<!-- <div class=\"item\" @click=\"Modal.hide()\" title=\"Minimize\"><i class=\"fa fa-window-minimize\"></i></div> -->\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\n\t\t<div class=\"item\" style=\"display: {{ githubURL ? 'block' : 'none' }}\" @click=\"openGitHub\" title=\"Open file on GitHub\"><i class=\"fab fa-github\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"custom-node-editor\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\n\t.editor{\n\t\twidth: 80vw;\n\t\tmax-width: 900px;\n\t\theight: 90vh;\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: 0px;\n\t\ttop: 0;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tshowed(){\n\t\t\tlet model = sf.model('custom-node-editor');\n\t\t\tmodel.recreate();\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('custom-node-editor', function(My){\n\tMy.githubURL = '';\n\tMy.content = '// After execute this, you can test it by connecting\\n// Input -> Slider and Logger to this node\\n\\nlet EventSlot = {slot: \\'my-unique\\'}; // To avoid duplicate listener\\n\\nBlackprint.registerNode(\\'Test/Hello\\',\\nclass extends Blackprint.Node {\\n\\tstatic input = { // Port\\n\\t\\tGiveInput: Number\\n\\t}\\n\\t\\n\\tstatic output = { // Port\\n\\t\\tOut: Number\\n\\t}\\n\\n\\tconstructor(instance){\\n\\t\\tsuper(instance);\\n\\n\\t\\t// You can remove this if you want to use default node interface/HTML\\n\\t\\tlet iface = this.setInterface(\\'BPIC/Test/Hello\\');\\n\\n\\t\\tiface.title = \\'Add +5\\';\\n\\t\\tiface.description = \\'Add 5 to any number\\';\\n\\t}\\n});\\n\\n// You can remove this if you\\'re using default node interface/HTML\\nBlackprint.Sketch.registerInterface(\\'BPIC/Test/Hello\\', {\\n\\thtml: `\\n<div class=\"node {{ type || \\'general\\' }}\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\\n\\n  <div class=\"content\">\\n\\t<div class=\"left-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\\n\\t</div>\\n\\t\\n\\t<div style=\"display: inline-block; color: yellow\">\\n\\t\\t{{ log }}\\n\\t</div>\\n    \\n\\t<div class=\"right-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\\n\\t</div>\\n  </div>\\n</div>`\\n}, class extends Blackprint.Interface {\\n\\tconstructor(node){\\n\\t\\tsuper(node);\\n\\n\\t\\tthis.log = 0;\\n\\t}\\n\\n\\t// HTML/Interface Init\\n\\tinit(el){\\n\\t\\tlet iface = this;\\n\\t\\t\\n\\t\\tconst {\\n\\t\\t\\tIInput, IOutput, // Port interface (event, utils, etc)\\n\\t\\t\\tInput, Output, // Node Port (get/set value)\\n\\t\\t} = iface.ref;\\n\\n\\t\\tIInput.GiveInput.on(\\'value\\', EventSlot, function({ cable }){\\n\\t\\t\\tlet val = cable.value;\\n\\n\\t\\t\\tiface.log = val + 5; // GiveInput -> {{ log }}\\n\\t\\t\\tOutput.Out = val + 5; // GiveInput -> Out\\n\\t\\t});\\n\\t}\\n\\n\\t// Run init again to hot reload this node\\n\\thotReloaded(){\\n\\t\\tthis.init();\\n\\t}\\n\\n\\t// When this node UI was cloned somewhere\\n\\t// You can reinit some HTML element if needed\\n\\tinitClone(el){}\\n});';\n\n\tMy.init = async function(){\n\t\tif(window.monaco === void 0){\n\t\t\tsf.loader.js([\n\t\t\t\t'https://cdn.jsdelivr.net/npm/@monaco-editor/loader@1.2.0/lib/umd/monaco-loader.min.js',\n\t\t\t\t// 'https://cdn.jsdelivr.net/npm/typescript@latest/lib/typescriptServices.min.js'\n\t\t\t]);\n\t\t\tawait sf.loader.task;\n\t\t\tawait monaco_loader.init();\n\t\t}\n\n\t\tMy.container = My.$el('.editor');\n\t\tMy.recreate();\n\t}\n\n\tMy.recreate = function(){\n\t\tif(window.monaco === void 0) return;\n\t\tif(My.editor) return;\n\n\t\tMy.editor && My.editor.dispose();\n\t\trefreshTypes();\n\n\t\tsetTimeout(()=> {\n\t\t\tlet statusEl = My.container.find('.bp-loading-status');\n\n\t\t\tMy.editor = monaco.editor.create(My.container[0], {\n\t\t\t\tvalue: My.content,\n\t\t\t\tlanguage: 'javascript',\n\t\t\t\ttheme: 'vs-dark',\n\t\t\t\tminimap: { enabled: false }\n\t\t\t});\n\n\t\t\tstatusEl.css('display', 'none');\n\t\t}, 1000);\n\t}\n\n\tlet typeRefreshed = false;\n\tasync function refreshTypes(){\n\t\tif(typeRefreshed) return;\n\t\ttypeRefreshed = true;\n\n\t\tlet library = [];\n\t\tlibrary.push([\n\t\t\t\"declare module 'scarletsframe' { \" + await $.get('https://cdn.jsdelivr.net/gh/ScarletsFiction/ScarletsFrame@b3c4a8cf3a8036558a7bc96eeaede2f4f84feb49/src/index.d.ts')+' }',\n\t\t\t'file:///node_modules/scarletsframe/index.d.ts'\n\t\t]);\n\t\tlibrary.push([\n\t\t\t\"declare module '@blackprint/engine' { \" + await $.get('https://cdn.jsdelivr.net/gh/Blackprint/engine-js@7a4d820a58019a4c256276d4841723cd35a3660c/src/index.d.ts')+' }',\n\t\t\t'file:///node_modules/@blackprint/engine/index.d.ts'\n\t\t]);\n\t\tlibrary.push([\n\t\t\t\"declare module '@blackprint/engine/skeleton' { \" + await $.get('https://cdn.jsdelivr.net/gh/Blackprint/engine-js@7a4d820a58019a4c256276d4841723cd35a3660c/src/skeleton/index.d.ts')+' }',\n\t\t\t'file:///node_modules/@blackprint/engine/skeleton/index.d.ts'\n\t\t]);\n\t\tlibrary.push([\n\t\t\t\"declare module '@blackprint/sketch' { \" + await $.get('https://cdn.jsdelivr.net/gh/Blackprint/Blackprint@db21218ba05533ff1d5e2f2d6ea8075fd31c1f8a/src/index.d.ts')+' }',\n\t\t\t'file:///node_modules/@blackprint/sketch/index.d.ts'\n\t\t]);\n\t\tlibrary.push([`\n\t\t\timport * as BP from \"@blackprint/sketch\";\n\t\t\timport * as SF from \"scarletsframe\";\n\t\t\tdeclare global {\n\t\t\t\tconst Blackprint = BP;\n\t\t\t\tconst sf = SF;\n\n\t\t\t\t/** This can be obtained with Blackprint.getContext(\"YourModuleContext\") */\n\t\t\t\tconst Context = {};\n\t\t\t}\n\t\t`, 'global.d.ts']);\n\n\t\tfor(let i=0; i<library.length; i++){\n\t\t\tlet lib = library[i];\n\t\t\tmonaco.languages.typescript.javascriptDefaults.addExtraLib(lib[0], lib[1]);\n\t\t\t// monaco.languages.typescript.typescriptDefaults.addExtraLib(lib[0], lib[1]);\n\t\t}\n\t}\n\n\t// This only runnable on development mode editor\n\tMy.run = function(){\n\t\t// Return if not in development mode as eval is dangerous\n\t\tif(sf.hotReload == null || location.pathname !== '/dev.html')\n\t\t\treturn SmallNotif.add(\"This feature only available on development mode editor\");\n\n\t\tlet code = My.editor.getValue();\n\t\tlet contextName = code.match(/\\bregisterNode\\(['\"](\\w+)\\//)?.[1];\n\t\tlet begin = `var Context = Blackprint.getContext._context['${contextName}']`, ends = ``;\n\n\t\teval(`${begin}\\n${code}\\n${ends}`);\n\n\t\tBlackprint.emit('bp_editorNodeAvailability');\n\t}\n\n\tMy.setValue = function(code){\n\t\tif(My.editor != null)\n\t\t\tMy.editor.setValue(code);\n\n\t\tMy.content = code;\n\t}\n\n\tMy.openGitHub = function(){\n\t\twindow.open(My.githubURL, '_blank');\n\t}\n\n\tMy.close = function(){\n\t\tModal.hide();\n\n\t\t// My.editor.dispose();\n\t\t// My.editor = null;\n\t\t// modal.goto('/');\n\n\t\t// My.container.find('.bp-loading-status').css('display', '');\n\t}\n});","## html\n<sf-m name=\"documentation\">\n\t<div class=\"title\">Documentation</div>\n\t<div class=\"close\" @click=\"Modal.hide()\">x</div>\n\t<div class=\"container\">\n\t\t<div class=\"left-panel\">\n\t\t\t<!-- /src/component/tree-list2.sf -->\n\t\t\t<div class=\"tree-view\" @pointerdown=\"checkClick\">\n\t\t\t\t<div class=\"tree-item collapsed\" sf-each=\"key, val in docs\" tree-item-key=\"{{ key.replace(/\\W/g, '_') }}\">\n\t\t\t\t\t<div class=\"title\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\n\n\t\t\t\t\t{{@if val.constructor === Object:\n\t\t\t\t\t\treturn new $TreeList2({parentKey: '', key, val: val.branch});\n\t\t\t\t\t}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"content\" @click=\"changeHeaderFocus\">\n\t\t\t<sf-slot for=\"content\"></sf-slot>\n\t\t\t<div class=\"edit-button\" title=\"Edit this documentation on GitHub\" @click=\"editDocs\"><i class=\"fa fa-pen\"></i></div>\n\t\t</div>\n\t\t<div class=\"right-panel\" @click=\"changeHeaderFocus\">\n\t\t\t<sf-slot for=\"section\"></sf-slot>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"documentation\"] {\n\tbackground: #292929;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px black;\n\twidth: 95vw;\n\theight: 95vh;\n\toverflow: hidden;\n\t.title{\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t\tfont-size: 20px;\n\t\ttext-align: center;\n\t\tvertical-align: middle;\n\t\twidth: 100%;\n\t\tbackground: black;\n\t\tbox-shadow: 0 0 7px black;\n\t\tz-index: 1;\n\t}\n\t.close{\n\t\tposition: absolute;\n\t\tright: 0;\n\t\ttop: 0;\n\t\twidth: 20px;\n\t\ttext-align: center;\n\t\tbackground: #3e3e3e;\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t\tfont-weight: bold;\n\t}\n\t.container{\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t}\n\t.left-panel, .right-panel{\n\t\theight: 100%;\n\t\tpadding-top: 5px;\n\t\t.title{\n\t\t\tfont-size: 14px;\n\t\t\ttext-align: left;\n\t\t}\n\t\twidth: 15%;\n\t\tmax-width: 300px;\n\t\tbackground: #161616;\n\t\tbox-shadow: 0 0 7px black;\n\t}\n\t.left-panel{\n\t\toverflow: hidden auto;\n    \theight: calc(95vh - 33px);\n\t}\n\t.content{\n\t\tposition: relative;\n\t\tpadding: 5px 20px;\n\t\twidth: 70%;\n\t\tcolor: #d7d7d7;\n\t\toverflow: scroll;\n\t\theight: 96%;\n\t\th1, h2, h3, h4, h5, h6 {\n\t\t\tcursor: pointer;\n\t\t\t&:hover {\n\t\t\t\tcolor: white;\n\t\t\t\tfilter: drop-shadow(0 0 10px white);\n\t\t\t\t&:after{\n\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\tfont-family: \"Font Awesome 5 Free\";\n\t\t\t\t\tfont-weight: 900;\n\t\t\t\t\t// content: '\\f0c1';\n\t\t\t\t\tcontent: '\\f292';\n\t\t\t\t\tvertical-align: middle;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t\ttext-decoration: underline;\n\t\t}\n\t\t.active {\n\t\t\tcolor: #ffff70;\n\t\t\t// filter: drop-shadow(0 0 10px #ffff00bb);\n\t\t\tborder-bottom: 1px dashed;\n\t\t}\n\t\t.edit-button {\n\t\t\tposition: absolute;\n\t\t\ttop: 15px;\n\t\t\tright: 15px;\n\t\t\tbackground: #583c47;\n\t\t\tpadding: 5px 8px;\n\t\t\tborder-radius: 30px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\t.tree-item {\n\t\t// background: black;\n\t\tmargin-top: 1px;\n\t\ti {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.title{\n\t\t\tbackground: none;\n\t\t\tbox-shadow: none;\n\t\t\tfont-weight: normal;\n\t\t}\n\n\t\t.tree-item .title {\n\t\t\tcolor: #adadad;\n\t\t}\n\t}\n\t.tree-item.active > .title, .right-panel .active {\n\t\tcolor: #ffff70;\n\t\tfilter: drop-shadow(0 0 10px #ffff00bb);\n\t\tborder-bottom: 1px dashed;\n\t}\n\t.right-panel > div > div {\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tfont-size: 12px;\n\t}\n\t.sc-H2{ margin-left: 10px; }\n\t.sc-H3{ margin-left: 20px; }\n\t.sc-H4{ margin-left: 30px; }\n\t.sc-H5{ margin-left: 40px; }\n\t.sc-H6{ margin-left: 50px; }\n\n\timg {\n\t\tborder-radius: 10px;\n\t}\n\n\t@media(max-width: 800px){\n\t\t.right-panel {\n\t\t\tdisplay: none;\n\t\t}\n\t\t.left-panel {\n\t\t\twidth: 30%\n\t\t}\n\t}\n\n\tblockquote {\n\t\tbackground: #00ff89;\n\t\tcolor: black;\n\t\tmargin: 5px 0;\n\t\tpadding: 5px 10px;\n\t\tborder-radius: 5px;\n\t\tp {\n\t\t\tmargin: 0;\n\t\t\tcode {\n\t\t\t\tbackground: #00000055;\n\t\t\t}\n\t\t\tstrong {\n\t\t\t\tcolor: black;\n\t\t\t}\n\t\t}\n\t}\n\n\tstrong {\n\t\tcolor: white;\n\t\twhite-space: break-spaces;\n\t}\n\n\ttable {\n\t\tmargin-top: -5px;\n\t\tborder: 1px solid #ffffff7a;\n\t\tborder-radius: 5px;\n\t\tpadding: 5px;\n\t\ttd {\n\t\t\tpadding: 3px 13px 3px 2px;\n\t\t}\n\t}\n\n\tpre {\n\t\tbackground: #00000045;\n\t\tborder: 1px solid black;\n\t\tpadding: 7px;\n\t\tborder-radius: 5px;\n\t\toverflow: auto;\n\t}\n\n\timg {\n\t\tmax-width: 100%;\n\t}\n\n\tvideo {\n\t\tmax-width: 100%;\n\t    border-radius: 10px;\n\t}\n\n\tp, li, td {\n\t\tcode{\n\t\t\tbackground: #00000099;\n\t\t\tpadding: 1px 5px 4px 5px;\n\t\t\tborder-radius: 5px;\n\t\t\twhite-space: nowrap;\n\t\t}\n\t}\n\n\ttable {\n\t\tmax-width: 100%;\n\t\toverflow: auto;\n\t\tdisplay: block;\n\t}\n\n\tx-code2 {\n\t\tbackground: #00000099;\n\t\tpadding: 1px 5px 4px 5px;\n\t\tborder-radius: 5px;\n\t\twhite-space: nowrap;\n\t\tdisplay: block;\n\t\tfont-family: monospace;\n\t\tx-t {\n\t\t\tpadding-left: 10px;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n\nsf-m[name=\"docs-editor-tutorial\"] {\n\tul {\n\t\tlist-style: none;\n\t}\n\tli {\n\t\tcursor: pointer;\n\t\tmargin-bottom: 5px;\n\t\t&:before {\n\t\t\tcontent: \"\\f04b\";\n\t\t\tfont-family: \"Font Awesome 5 Free\";\n\t\t\tdisplay: inline-block;\n\t\t\tmargin-left: -1.3em;\n\t\t\twidth: 1.3em;\n\t\t\tvertical-align: middle;\n\t\t}\n\t\t&:hover {\n\t\t\tfilter: drop-shadow(0 0 6px white);\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('documentation', function(My){\n\tMy.docs = window.bpEditorDocs;\n\tMy.cache = new WeakMap();\n\tMy.content = null;\n\tMy.section = null;\n\tMy.treePath = '';\n\tMy.sectionPath = '';\n\n\tMy.init = async function(){\n\t\twindow.___browserSync___?.socket.on('bp-editor-docs', function(data){\n\t\t\tObject.assign(My.docs, data.contents);\n\n\t\t\t// Reload the active section\n\t\t\tif(My.treePath){\n\t\t\t\tlet obj = deepDive(window.bpEditorDocs, My.treePath.split('/'));\n\t\t\t\tif(obj == null) return SmallNotif.add(\"Document for the specified path was not found\", 'red');\n\n\t\t\t\tchangeContent(obj);\n\n\t\t\t\t// Wait first load\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tif(My.sectionPath) My.changeHeaderFocusById(My.sectionPath);\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t});\n\n\t\tchangeContent(My.docs.Home);\n\n\t\tModal.onHide('/documentation', function(){\n\t\t\tdelete sf.URI.data.bpdocs;\n\t\t\tsf.URI.replace();\n\t\t});\n\n\t\tMy.reorderListLv1();\n\t}\n\n\tMy.reorderListLv1 = function(){\n\t\tlet order = ['Home', 'Getting Started', 'Editor', 'Engine', 'Sketch', 'Custom Nodes'];\n\t\tlet ref = My.docs._list;\n\n\t\tfor(let i=0; i < order.length; i++){\n\t\t\tlet index = ref.indexOf(order[i]);\n\t\t\tif(index === -1) continue;\n\n\t\t\tref.splice(index, 1);\n\t\t}\n\n\t\tref.unshift(...order);\n\t\tMy.docs.refresh();\n\t}\n\n\tMy.checkClick = function(ev){\n\t\tlet el = ev.target;\n\t\tif(!el.classList.contains('title')) return;\n\n\t\tMy.treePath = '';\n\t\tMy.sectionPath = '';\n\t\t$(event.target).parents('.tree-item').each(function(){\n\t\t\tlet temp = My.treePath;\n\t\t\tMy.treePath = this.getAttribute('tree-item-key');\n\n\t\t\tif(temp) My.treePath += '/'+temp;\n\t\t});\n\n\t\tchangeContent(el.parentNode.model);\n\t}\n\n\tlet currentContent;\n\tfunction changeContent(obj){\n\t\tif(currentContent === obj) return;\n\t\tcurrentContent = obj;\n\n\t\t// obj is object content from window.bpEditorDocs which is loaded from auto generated docs from\n\t\t// https://github.com/Blackprint/blackprint.github.io/tree/master/docs\n\n\t\tMy.$el('.content')[0].scrollTop = 0;\n\n\t\tlet cache = My.cache.get(obj);\n\t\tif(cache == null){\n\t\t\t// ToDo: improve security because we're going to use eval to execute <script> from the markdown\n\t\t\t// currently we just check if the $ is actually from ScarletsFrame function\n\t\t\tif($.escapeText.constructor !== Function || $.fn.addClass.constructor !== Function)\n\t\t\t\tthrow new Error(\"Unexpected '$' function\");\n\n\t\t\tlet content = $(`<div>${marked.parse(obj.content)}</div>`);\n\n\t\t\t// Allow script evaluation in the markdown\n\t\t\tcontent.find('script').each(function(){\n\t\t\t\teval(this.textContent);\n\t\t\t});\n\n\t\t\tlet section = '<div>';\n\t\t\tcontent.find('h1, h2, h3, h4, h5, h6').each(function(){\n\t\t\t\tif(this.closest('docs-md-tabs')) return; // Skip 'docs-md-tabs' tag\n\n\t\t\t\tlet id = this.textContent.toLowerCase().replace(/\\W/g, '-');\n\t\t\t\tsection += `<div class=\"sc-${this.tagName}\" section-id=\"${id}\">${this.textContent}</div>`;\n\t\t\t});\n\n\t\t\tMy.cache.set(obj, cache = {\n\t\t\t\tcontent,\n\t\t\t\tsection: $(section+'</div>'),\n\t\t\t});\n\t\t}\n\n\t\tMy.content = cache.content[0];\n\t\tMy.section = cache.section[0];\n\n\t\trefreshURL();\n\t}\n\n\tMy.changeHeaderFocus = function(event){\n\t\tlet el = event.target;\n\t\tlet parentClass = el.parentNode.parentNode.classList;\n\t\tif(!parentClass.contains('right-panel') && !parentClass.contains('content'))\n\t\t\treturn;\n\n\t\tif(el.tagName !== 'DIV' && !el.tagName.startsWith('H'))\n\t\t\treturn;\n\n\t\tlet text = el.textContent;\n\t\tif(!text) return;\n\n\t\tMy.changeHeaderFocusById(text);\n\t}\n\n\tMy.changeHeaderFocusById = function(id){\n\t\tid = id.toLowerCase().replace(/\\W/g, '-');\n\t\tMy.sectionPath = id;\n\n\t\tlet target = My.content.querySelector(`#${id}`);\n\t\tif(target == null) return;\n\n\t\tMy.$el('.content')[0].scrollTop = target.offsetTop - 40;\n\t\trefreshURL();\n\t}\n\n\tMy.editDocs = function(){\n\t\tlet path = (My.treePath || 'Home').split('_').join(' ');\n\t\tlet url = `https://github.com/Blackprint/blackprint.github.io/tree/master/docs/${path}.md`;\n\t\twindow.open(url, '_blank');\n\t}\n\n\tfunction refreshURL(){\n\t\tsf.URI.data.bpdocs = `${My.treePath}${My.sectionPath ? '+'+My.sectionPath : ''}`;\n\t\tsf.URI.replace();\n\n\t\tMy.$el('.active').removeClass('active');\n\n\t\tif(My.sectionPath !== ''){\n\t\t\tMy.$el(`[section-id=\"${My.sectionPath}\"]`).addClass('active');\n\t\t\tMy.$el(`.container > .content #${My.sectionPath}`).addClass('active');\n\t\t}\n\n\t\tif(My.treePath !== ''){\n\t\t\tlet selector = `[tree-item-key=\"${My.treePath.split('/').join('\"] [tree-item-key=\"')}\"]`;\n\t\t\tMy.$el(selector).addClass('active');\n\t\t}\n\t}\n\n\tfunction deepDive(obj, paths){\n\t\tlet path = paths.shift();\n\t\tfor(let key in obj){\n\t\t\tif(key.replace(/\\W/g, '_') !== path) continue;\n\t\t\tif(paths.length === 0) return obj[key];\n\t\t\treturn deepDive(obj[key].branch, paths);\n\t\t}\n\t}\n\n\t$(function(){\n\t\tmarked.setOptions({\n\t\t\thighlight(code, language){\n\t\t\t\treturn hljs.highlight(code, { language }).value;\n\t\t\t}\n\t\t});\n\n\t\tlet bpdocs = sf.URI.data.bpdocs?.[0];\n\t\tif(bpdocs == null || My.initialized) return;\n\n\t\tMy.initialized = true;\n\n\t\tlet [path, section] = bpdocs.split('+');\n\t\tlet obj = deepDive(window.bpEditorDocs, path.split('/'));\n\t\tif(obj == null) return SmallNotif.add(\"Document for the specified path was not found\", 'red');\n\n\t\tModal.goto('/documentation');\n\t\tchangeContent(obj);\n\n\t\tMy.treePath = path;\n\t\tMy.sectionPath = section;\n\t\trefreshURL();\n\n\t\t// Wait first load\n\t\tsetTimeout(function(){\n\t\t\tif(section) My.changeHeaderFocusById(section);\n\t\t}, 1000);\n\t});\n\n\t$(async function(){\n\t\tif(localStorage.firstTimeEditorVisit !== \"1\"){\n\t\t\tlet noURIData = true;\n\t\t\tfor(let key in sf.URI.data){\n\t\t\t\tnoURIData = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif(noURIData){\n\t\t\t\tlocalStorage.firstTimeEditorVisit = \"1\";\n\n\t\t\t\tlet confirm = await Swal.fire({\n\t\t\t\t\ttitle:\"Welcome!\",\n\t\t\t\t\thtml:\"<br>It's seems you're new here 🎉<br>Do you want to see small tutorial to use this editor?\",\n\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t});\n\n\t\t\t\tif(confirm.isConfirmed){\n\t\t\t\t\tModal.goto('/documentation');\n\n\t\t\t\t\t// Wait first load\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tchangeContent(My.docs.Editor.branch.Tutorial);\n\t\t\t\t\t}, 700);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});","## html\n<sf-m name=\"modal-dev-mode\">\n\t<div class=\"description\">Please set the Blackprint module server URL</div>\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default server)</div>\n\t<div class=\"text-input\">\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\n\t</div>\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"modal-dev-mode\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t}\n\t.note{\n\t\ttext-align: center;\n\t\tfont-size: 12px;\n\t\tpadding: 0;\n\t\tcolor: gray;\n\t\tmargin-top: -10px;\n\t\tcursor: pointer;\n\t}\n\t.text-input{\n\t\tpadding: 10px;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\n\t\tinput{\n\t\t\twidth: 100%;\n\t\t\tborder: 1px solid black;\n\t\t\tbackground: #161616;\n\t\t\tpadding: 5px;\n\t\t\tcolor: white;\n\t\t\toutline: none;\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\tcolor: white;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\n\t\t\t}, 500);\n\t\t},\n\t\tshowed(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\n\t\t\t}, 100);\n\t\t},\n\t}\n}\n\n## js-global\nsf.model('modal-dev-mode', function(My){\n\tMy.url = localStorage.BPModuleServer ??= \"\";\n\tMy.placeholder = location.origin;\n\n\tMy.connectDefault = function(){\n\t\tlocalStorage.BPModuleServer = My.url = \"\";\n\t\tMy.changeServer();\n\t}\n\n\tMy.changeServer = async function(clearOnFail){\n\t\tlet url = My.url;\n\t\tif(!url) url = My.placeholder;\n\t\t// url = 'http://localhost:6791';\n\n\t\tif(url.slice(-1) === '/')\n\t\t\turl = url.slice(0, -1);\n\n\t\tlet _url = url;\n\t\turl += '/browser-sync';\n\n\t\tif(window.___browserSync___ === void 0){\n\t\t\ttry{\n\t\t\t\tsf.loader.js([url+'/browser-sync-client.js?v=2']);\n\t\t\t\tawait sf.loader.task;\n\t\t\t} catch(e) {\n\t\t\t\tSmallNotif.add(\"Failed to load client\", \"red\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t___browserSync___.socketUrl = url;\n\n\t\tlet socket = ___browserSync___.socket;\n\t\tsocket.disconnect();\n\n\t\tsetTimeout(()=> {\n\t\t\tif(socket.connected) return;\n\t\t\tconsole.log(\"Failed to connect to Blackprint module server:\", url);\n\t\t\tSmallNotif.add(\"Failed to connect to Blackprint module server\", \"red\");\n\t\t\tsocket.disconnect();\n\t\t\tsocket.off('connect', onConnected);\n\n\t\t\t// Unset the value if this was failing on startup time\n\t\t\tif(clearOnFail)\n\t\t\t\tlocalStorage.BPModuleServer = \"\";\n\t\t}, 8000);\n\n\t\tfunction onConnected(){\n\t\t\tconsole.log(\"Connected to Blackprint module server:\", url);\n\t\t\tSmallNotif.add(\"Connected to Blackprint module server\", \"green\");\n\t\t\tlocalStorage.BPModuleServer = My.url;\n\t\t}\n\n\t\tsocket.once('connect', onConnected);\n\n\t\tsocket.nsp = '/browser-sync';\n\t\tsocket.io.uri = url;\n\t\tsocket.connect();\n\n\t\tsocket.on('bp-docs-append', function(data){\n\t\t\tBlackprint.Sketch.registerDocs(data);\n\t\t});\n\n\t\tlet newModuleLoaded = false;\n\t\ttry{\n\t\t\tlet moduleList = Object.values(await $.getJSON(_url+'/api/module-list'));\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t\tmoduleList[i] = _url+moduleList[i];\n\n\t\t\tif(moduleList.length !== 0){\n\t\t\t\tSmallNotif.add(`Loading ${moduleList.length} new modules`, \"yellow\");\n\n\t\t\t\tawait Blackprint.loadModuleFromURL(moduleList, {\n\t\t\t\t\tloadBrowserInterface: true\n\t\t\t\t});\n\n\t\t\t\tSmallNotif.add(`New modules have been loaded`, \"green\");\n\t\t\t}\n\n\t\t\tnewModuleLoaded = true;\n\t\t} catch(e) {\n\t\t\tSmallNotif.add(`Failed to load new modules`, \"red\");\n\t\t\tthrow e;\n\t\t}\n\n\t\tsetTimeout(()=> {\n\t\t\tif(newModuleLoaded) return;\n\t\t\tSmallNotif.add(`Loading modules was taking longer than 10s`, \"red\");\n\n\t\t\tif(sf.loader.pendingResources.size !== 0)\n\t\t\t\tconsole.log(\"Pending resources:\", sf.loader.pendingResources);\n\t\t}, 10000);\n\n\t\tif(Modal.showed && Modal.views.currentPath === '/dev-mode')\n\t\t\tModal.hide();\n\t}\n\n\tif(My.url !== '' && sf.hotReload !== void 0){\n\t\t$(() => setTimeout(()=> My.changeServer(true), 200));\n\t}\n});","## html\n<sf-m name=\"environment-variables\">\n\t<div class=\"title\" title=\"Environment variables will be stored on your browser's localStorage\">Environment Variables</div>\n\t<div class=\"head\">\n\t\t<div class=\"row\">Key</div>\n\t\t<div class=\"row\">Value</div>\n\t</div>\n\t<div class=\"content\">\n\t\t<div>\n\t\t\t<div class=\"row\" sf-each=\"x in list\" @keyup=\"itemChanged(x, event)\">\n\t\t\t\t<input class=\"column key\" type=\"text\" @input=\"renameEnv(x, this)\" value=\"{{ x.key }}\" placeholder=\"...\">\n\t\t\t\t<input class=\"column bpe-value\" type=\"{{ showValue ? 'text' : 'password' }}\" value=\"{{ x.value }}\" placeholder=\"...\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row\">\n\t\t\t<input class=\"column key\" type=\"text\" @input=\"this.value = newKey = validateKey(this.value)\" sf-bind=\"newKey\" placeholder=\"Add new key...\">\n\t\t\t<input class=\"column\" type=\"text\" sf-bind=\"newValue\" placeholder=\"...\">\n\t\t</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item {{ showValue && 'hide'}}\" @click=\"showValue = true\" title=\"Show value\"><i class=\"fa fa-eye-slash\"></i></div>\n\t\t<div class=\"item {{ !showValue && 'hide'}}\" @click=\"showValue = false\" title=\"Hide value\"><i class=\"fa fa-eye\"></i></div>\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"environment-variables\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\n\t.title{\n\t\ttext-align: center;\n\t\tmin-width: 300px;\n\t\tpadding: 5px;\n\t\tcolor: #fff;\n\t\tfont-weight: bold;\n\t\tletter-spacing: 1px;\n\t\tborder-bottom: 1px solid #000;\n\t\tbackground: #0009;\n\t\tcursor: default;\n\t}\n\n\t.head{\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\tbackground: #00000070;\n\t\t.row{\n\t\t\tcolor: #fff;\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 50%;\n\t\t\toutline: 1px solid #000;\n\t\t\tcursor: default;\n\t\t}\n\t}\n\n\t.content{\n\t\t.row{\n\t\t\tdisplay: flex;\n\t\t\t.column{\n\t\t\t\tcolor: #fff;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 50%;\n\t\t\t\tpadding: 8px;\n\t\t\t\toutline: 1px solid #000;\n\t\t\t}\n\n\t\t\tinput{\n\t\t\t\tcolor: gray;\n\t\t\t\tbackground: #00000094;\n\t\t\t\tborder: none;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: 0;\n\t\ttop: 0;\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #585858a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t\t&.hide{\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('environment-variables', function(My){\n\tMy.list = Blackprint.Environment._list;\n\tMy.newValue = '';\n\tMy.newKey = '';\n\tMy.showValue = false;\n\n\tMy.v2m$newKey = function(now){\n\t\tnow = My.validateKey(now);\n\n\t\tif(now.length !== 0){\n\t\t\tBlackprint.Environment.set(now, My.newValue);\n\t\t\tMy.newKey = My.newValue = '';\n\t\t\tcaretFocusOnLastItem();\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t// Init\n\tlet data = localStorage.bpEnvData;\n\tif(data){\n\t\tdata = JSON.parse(data);\n\t\tBlackprint.Environment.import(data);\n\t}\n\n\t// Always hide when being closed\n\tModal.onHide('/environment-variables', function(){\n\t\tMy.showValue = false;\n\t\trefreshEnvironment();\n\t});\n\n\tfunction caretFocusOnLastItem(){\n\t\t$('input', My.list.getElements(My.list.length-1))[0]?.focus();\n\t}\n\n\tMy.itemChanged = function(item, ev){\n\t\tif(ev.target.classList.contains('bpe-value'))\n\t\t\trefreshEnvironment();\n\n\t\tif(item.key.length === 0 && (Number.isNaN(item.value) || !item.value)){\n\t\t\tMy.list.splice(My.list.indexOf(item), 1);\n\t\t\tcaretFocusOnLastItem();\n\t\t\treturn;\n\t\t}\n\t}\n\n\tlet _refreshEnvironment = 0;\n\tfunction refreshEnvironment(){\n\t\tclearTimeout(_refreshEnvironment);\n\t\t_refreshEnvironment = setTimeout(function(){\n\t\t\tlet { map, _list } =  Blackprint.Environment;\n\t\t\tlet uniq = new Set();\n\n\t\t\t// Assign the value of each list on the map\n\t\t\tfor (var i = 0; i < _list.length; i++) {\n\t\t\t\tlet item = _list[i];\n\t\t\t\tuniq.add(item.key);\n\n\t\t\t\tlet value = _list.$el('.bpe-value', i)[0].value;\n\t\t\t\tif(map[item.key] !== value)\n\t\t\t\t\tBlackprint.Environment.set(item.key, value);\n\t\t\t}\n\n\t\t\t// Remove key that not exist on the list\n\t\t\tfor(let key in map){\n\t\t\t\tif(!uniq.has(key))\n\t\t\t\t\tBlackprint.Environment.delete(key);\n\t\t\t}\n\n\t\t\tMy.saveToLocalStorage();\n\t\t}, 1000);\n\t}\n\n\tMy.saveToLocalStorage = function(){\n\t\tlocalStorage.bpEnvData = JSON.stringify(Blackprint.Environment.map);\n\t\tSmallNotif.add(\"Environment data was saved\", 'green');\n\t}\n\n\tMy.validateKey = function(value){\n\t\treturn value.replace(/[ \\-]+/gm, '_').replace(/\\W+/gm, '').replace(/^[0-9]+/gm, '').toUpperCase();\n\t}\n\n\tlet _renameEnv = 0;\n\tMy.renameEnv = function(item, element){\n\t\tclearTimeout(_renameEnv);\n\t\t_renameEnv = setTimeout(function(){\n\t\t\tlet temp = My.validateKey(element.value);\n\n\t\t\tif(temp == '' && item.value === ''){\n\t\t\t\tBlackprint.Environment.delete(item.key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tBlackprint.Environment._rename(item.key, temp);\n\t\t}, 1000);\n\t}\n\n\tMy.close = function(){\n\t\tModal.hide();\n\t\tmodal.goto('/');\n\t}\n});","## html\n<sf-m name=\"example-list\">\n\t<div class=\"description\">Please select one of these example (<a href=\"https://github.com/Blackprint/blackprint.github.io/blob/develop/src/global/sampleList.js\">source</a>)</div>\n\t<div class=\"list\">\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\n\t\t\t{{ x }}\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"example-list\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){\n\t\t\tsf.model('example-list').list = Object.keys(sampleList);\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('example-list', function(My){\n\tMy.list = [];\n\n\tMy.open = function(key){\n\t\tlet obj = sampleList[key];\n\t\tfor (var i = 0; i < SketchList.length; i++){\n\t\t\tif(SketchList[i] == null) continue;\n\t\t\tSketchList[i].clearNodes();\n\t\t}\n\n\t\tModal.hide();\n\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\n\t\tsketch.__importing = true;\n\n\t\tSketchImporter.pendingLoad = obj;\n\t\tSketchImporter.importNow();\n\t}\n});","## html\n<div style=\"height: 70vh;\">\n\t<sf-m name=\"module-example-list-deep\">\n\t\t<div class=\"description\">Examples for: <b>{{ packageName }}</b></div>\n\t\t<div class=\"refresh-button\" @click=\"refreshCache()\">Click here to refresh cache ({{ cacheDate ? (new Date(cacheDate)).toLocaleString() : '?' }})</div>\n\t\t<div class=\"source-menu\">\n\t\t\t<div class=\"item {{ currentSource === 'gh' ? 'selected' : '' }}\" @click=\"selectSource('gh')\" title=\"Example from repository's main branch\"><i class=\"fab fa-github\"></i> GitHub ({{ ghCommitHash }})</div>\n\t\t\t<div class=\"item {{ currentSource === 'npm' ? 'selected' : '' }}\" @click=\"selectSource('npm')\"><i class=\"fab fa-npm\"></i> NPM (v{{ packageVersion }})</div>\n\t\t</div>\n\t\t<div class=\"list\">\n\t\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"openExample(x)\">\n\t\t\t\t{{ x.name }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"menu\">\n\t\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\n\t\t</div>\n\t</sf-m>\n</div>\n\n## scss-global\nsf-m[name=\"module-example-list-deep\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.source-menu{\n\t\tdisplay: flex;\n\t\tbackground: black;\n\t\tpadding: 5px;\n\t\tjustify-content: space-evenly;\n\t\t.item {\n\t\t\tpadding: 5px;\n\t\t\tcolor: white;\n\t\t\twidth: 100%;\n\t\t\tcursor: pointer;\n\t\t\ttext-align: center;\n\t\t\t&.selected {\n\t\t\t\tcolor: #fdabab;\n\t\t\t}\n\t\t}\n\t}\n\n\t.refresh-button{\n\t\ttext-align: center;\n\t\tbackground: black;\n\t\tfont-size: 12px;\n\t\tmargin-top: -10px;\n\t\tcursor: pointer;\n\t}\n\t.description{\n\t\tbackground: black;\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\tmargin-right: 40px;\n\t\twidth: calc(100% - 20px);\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: -5px;\n\t\ttop: -10px;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 10px white;\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('module-example-list-deep', function(My){\n\tMy.packageName = '';\n\tMy.packageURL = ''; // https://cdn.jsdelivr.net/npm/@blackprint/package@version\n\tMy.githubURL = ''; // https://github.com/Blackprint/repository\n\tMy.packageVersion = '0.?';\n\tMy.pkg = null;\n\tMy.npmBaseUrl = '';\n\tMy.ghBaseUrl = '';\n\tMy.ghCommitHash = 'main';\n\tMy.currentSource = 'npm';\n\tMy.cacheDate = '?';\n\tMy.list = [];\n\n\tMy.openModal = function(pkg){\n\t\tMy.pkg = pkg;\n\t\tMy.packageName = pkg.packageName ?? '';\n\n\t\tif(pkg.packageURL.slice(-1) === '/')\n\t\t\tpkg.packageURL = pkg.packageURL.slice(0, -1);\n\n\t\tif(pkg.githubURL?.slice(-1) === '/')\n\t\t\tpkg.githubURL = pkg.githubURL.slice(0, -1);\n\n\t\tMy.packageURL = pkg.packageURL ?? '';\n\t\tMy.githubURL = pkg.githubURL ?? '';\n\t\tMy.cacheDate = pkg.cacheDate ?? false;\n\t\tMy.packageVersion = pkg.packageURL.match(/(?<=\\w@)[\\w.\\-_]+/)?.[0] ?? '';\n\n\t\tlet list = pkg.npmExamples;\n\t\tif(list == null && pkg.examples != null){\n\t\t\tlist = pkg.npmExamples = pkg.examples;\n\t\t\tdelete pkg.examples;\n\t\t}\n\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlet temp = list[i];\n\n\t\t\tif(!temp.name){\n\t\t\t\ttemp.name = temp.url\n\t\t\t\t\t.replace('example/', '')\n\t\t\t\t\t.replace(/^\\//, '')\n\t\t\t\t\t.replace('.json', '')\n\t\t\t\t\t.replace(/\\-/g, ' ');\n\t\t\t}\n\t\t}\n\n\t\tMy.list = list.slice(0); // copy list\n\t\tMy.npmBaseUrl = pkg.packageURL;\n\t\tMy.ghBaseUrl = pkg.ghPackageURL;\n\n\t\tif(My.ghBaseUrl){\n\t\t\tlet found = My.ghBaseUrl.match(/@[a-z0-9]+(\\/|$)/m)?.[0];\n\t\t\tMy.ghCommitHash = found.slice(1, 7);\n\t\t}\n\n\t\tif(!!My.ghBaseUrl) My.selectSource('gh');\n\n\t\tif(!!My.githubURL && !My.ghBaseUrl){\n\t\t\tlet repoName = My.githubURL.match(/(?<=github\\.com\\/).*?\\/.*?($|\\?|\\/)/m)[0];\n\t\t\tMy.ghBaseUrl = `https://cdn.jsdelivr.net/gh/${repoName}@main`;\n\t\t}\n\t}\n\n\tMy.openExample = async function(item){\n\t\tSmallNotif.add(\"Loading information..\");\n\n\t\tlet url = item.url;\n\t\tif(url.slice(0, 1) !== '/')\n\t\t\turl = `/${url}`;\n\n\t\tlet baseURL;\n\t\tif(My.currentSource === 'npm')\n\t\t\tbaseURL = My.npmBaseUrl;\n\t\telse if(My.currentSource === 'gh')\n\t\t\tbaseURL = My.ghBaseUrl;\n\t\telse throw new Error(\"Unknown source\");\n\n\t\tlet obj = await $.getJSON(baseURL+url);\n\t\tSketchImporter.loadJSON(obj);\n\t}\n\n\t// Selecting the source again will refresh the cache\n\tMy.selectSource = function(which){\n\t\tMy.currentSource = which;\n\n\t\tif(which === 'npm')\n\t\t\tMy.list = My.pkg.npmExamples;\n\t\telse My.list = My.pkg.ghExamples ?? [];\n\n\t\tlet list = My.list;\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlet temp = list[i];\n\n\t\t\tif(!temp.name){\n\t\t\t\ttemp.name = temp.url\n\t\t\t\t\t.replace('example/', '')\n\t\t\t\t\t.replace(/^\\//, '')\n\t\t\t\t\t.replace('.json', '')\n\t\t\t\t\t.replace(/\\-/g, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\tMy.back = function(){\n\t\tModal.goto('/module-example-list');\n\t}\n\n\tMy.refreshCache = async function(packageJSON){\n\t\tif(packageJSON == null){\n\t\t\tlet packageURL = My.packageURL;\n\t\t\tif(!packageURL.includes('@latest')){\n\t\t\t\tpackageURL = packageURL.match(/.*?(?=@[0-9])/)?.[0];\n\t\t\t\tif(packageURL != null) packageURL += '@latest';\n\t\t\t}\n\n\t\t\tif(!packageURL) throw new Error(\"Saved package URL was not found\");\n\n\t\t\tSmallNotif.add(\"Obtaining package.json\");\n\t\t\tpackageJSON = await $.getJSON(`${packageURL}/package.json`);\n\t\t\tMy.packageVersion = packageJSON.version;\n\t\t}\n\n\t\tlet npmName = packageJSON.name;\n\t\tlet ghName = (packageJSON.repository?.url ?? '').replace(/\\.git$/m, '').replace(/^.*?github.com\\//m, '');\n\n\t\tSmallNotif.add(\"Obtaining NPM file list\");\n\n\t\ttry{\n\t\t\tvar npmData = await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${npmName}@${packageJSON.version}`);\n\t\t} catch(e){\n\t\t\tSmallNotif.add(\"Failed to obtain example from NPM\", 'red');\n\t\t\tconsole.error(e);\n\t\t}\n\n\t\tlet npmExamples = npmData ? getPackageExamples(npmData) : [];\n\n\t\tlet ghExamples = [], ghPackageTag;\n\t\tif(!!ghName){\n\t\t\tSmallNotif.add(\"Obtaining repository's file list\");\n\n\t\t\ttry{\n\t\t\t\tvar commitHash = await $.getJSON(`https://api.github.com/repos/${ghName}/commits?per_page=1`);\n\t\t\t\tvar ghData = await $.getJSON(`https://data.jsdelivr.com/v1/package/gh/${ghName}@${commitHash[0].sha}`);\n\t\t\t\tghPackageTag = `${ghName}@${commitHash[0].sha}`;\n\t\t\t} catch(e){\n\t\t\t\tSmallNotif.add(\"Failed to obtain example from GitHub\", 'red');\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\n\t\t\tghExamples = ghData ? getPackageExamples(ghData) : [];\n\t\t}\n\n\t\tif(npmExamples.length === 0 && ghExamples.length === 0)\n\t\t\tthrow new Error(\"Examples was not found\");\n\n\t\tlet info = ModuleExampleList.replacePackageExample(packageJSON, npmExamples, ghExamples, ghPackageTag);\n\t\tMy.npmBaseUrl = info.packageURL;\n\t\tMy.ghBaseUrl = info.ghPackageURL;\n\t\tMy.cacheDate = info.cacheDate;\n\n\t\tif(My.pkg != null && My.packageName === npmName){\n\t\t\tMy.pkg.npmExamples = npmExamples;\n\t\t\tMy.pkg.ghExamples = ghExamples;\n\t\t\tMy.selectSource(My.currentSource);\n\t\t}\n\t}\n\n\tfunction getPackageExamples(jsdelivrData){\n\t\tlet files = jsdelivrData.files;\n\t\tlet examples = [];\n\n\t\tfor (var i = 0; i < files.length; i++) {\n\t\t\tlet dir = files[i];\n\t\t\tif(dir.name === 'example'){\n\t\t\t\tlet temp = dir.files;\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\n\t\t\t\t\tlet file = temp[a];\n\t\t\t\t\tif(file.type !== 'file') continue;\n\t\t\t\t\texamples.push({url: `/example/${file.name}`});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn examples;\n\t}\n});","## html\n<div style=\"height: 70vh;\">\n\t<sf-m name=\"module-example-list\">\n\t\t<div class=\"description\">Please select one of the module to load the example list</div>\n\t\t<div class=\"url-input\">\n\t\t\t<input class=\"column {{ urlValidity }}\" type=\"text\" @keyup.Enter=\"addExampleFromURL()\" sf-bind=\"urlInput\" placeholder=\"Paste URL of GitHub repository or NPM registry here and press enter\">\n\t\t</div>\n\t\t<div class=\"list\">\n\t\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\n\t\t\t\t{{ x.packageName }}\n\t\t\t</div>\n\t\t</div>\n\t</sf-m>\n</div>\n\n## scss-global\nsf-m[name=\"module-example-list\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\theight: 400px;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\ttext-align: center;\n\t\tbackground: #00000040;\n\t\tborder-bottom: 1px solid black;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.url-input{\n\t\tdisplay: flex;\n\t\t.column{\n\t\t\twidth: 100%;\n\t\t\tcolor: gray;\n\t\t\tbackground: #00000094;\n\t\t\tborder: none;\n\t\t\tpadding: 7px;\n\t\t\toutline: none;\n\t\t\t&.invalid{\n\t\t\t\toutline: 1px solid red;\n\t\t\t}\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #00000052;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 17px;\n\t\t\tpadding: 5px 8px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #8b6d0099;\n\t\t\t&:hover{\n\t\t\t\tbackground: #ffffff12;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){ }\n\t}\n}\n\n## js-global\nvar ModuleExampleList = sf.model('module-example-list', function(My){\n\tMy.list = window._moduleExampleList ??= [];\n\tMy.urlInput = '';\n\tMy.urlValidity = 'valid';\n\n\tMy.on$urlInput = function(now){\n\t\tif(now && !/(?<=github\\.com\\/).*?\\/./.test(now) && !/npmjs\\.com\\/package\\//.test(now))\n\t\t\tMy.urlValidity = 'invalid';\n\t\telse My.urlValidity = 'valid';\n\t}\n\n\tinit();\n\tfunction init() {\n\t\tlet cache = localStorage.bpModuleExampleList;\n\t\tif(!cache) return;\n\n\t\tMy.list.push(...JSON.parse(cache));\n\t}\n\n\tMy.open = function(x) {\n\t\tsf.model('module-example-list-deep').openModal(x);\n\t\tModal.goto('/module-example-list-deep');\n\t}\n\n\tMy.add = function(packageName, list, packageURL){\n\t\tlet ref = My.list;\n\t\tfor (var i = 0; i < ref.length; i++) {\n\t\t\tif(ref[i].packageName === packageName) break;\n\t\t}\n\n\t\t// new example\n\t\tif(i === ref.length){\n\t\t\tref.push({\n\t\t\t\tpackageName,\n\t\t\t\tpackageURL,\n\t\t\t\tnpmExamples: list,\n\t\t\t\tghExamples: [],\n\t\t\t});\n\n\t\t\tMy.list = ref = ref.sort((a, b) => a.packageName.localeCompare(b.packageName));\n\n\t\t\ttry{\n\t\t\t\t// This may give error if this modal was never been opened since startup\n\t\t\t\tref.refresh();\n\t\t\t} catch(e){}\n\n\t\t\tSmallNotif.add(`\"${packageName}\" example has been added`, 'green');\n\t\t}\n\t\telse ref[i].npmExamples = list;\n\n\t\tlocalStorage.bpModuleExampleList = JSON.stringify(My.list);\n\t}\n\n\tMy.replacePackageExample = function(packageJSON, npmExample, ghExample, ghPackageTag){\n\t\tlet packageName = packageJSON.name;\n\t\tlet packageURL = `https://cdn.jsdelivr.net/npm/${packageName}@${packageJSON.version}`;\n\t\tlet githubURL = (packageJSON.repository?.url ?? '').replace(/\\.git$/m, '');\n\t\tlet ghPackageURL = `https://cdn.jsdelivr.net/gh/${ghPackageTag}`;\n\n\t\tlet list = My.list;\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlet ref = list[i];\n\t\t\tif(ref.packageName === packageName){\n\t\t\t\tref.npmExamples = npmExample;\n\t\t\t\tref.ghExamples = ghExample;\n\t\t\t\tref.packageURL = packageURL;\n\t\t\t\tref.githubURL = githubURL;\n\t\t\t\tref.ghPackageURL = ghPackageURL;\n\t\t\t\tref.cacheDate = Date.now();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(list.length === i){\n\t\t\tlist.push({\n\t\t\t\tpackageName,\n\t\t\t\tpackageURL,\n\t\t\t\tgithubURL,\n\t\t\t\tghPackageURL,\n\t\t\t\tcacheDate: Date.now(),\n\t\t\t\tnpmExamples: npmExample,\n\t\t\t\tghExamples: ghExample,\n\t\t\t});\n\t\t}\n\n\t\tlocalStorage.bpModuleExampleList = JSON.stringify(My.list);\n\t\tSmallNotif.add(\"Example data updated\", 'green');\n\n\t\treturn list[i];\n\t}\n\n\tMy.addExampleFromURL = async function(url){\n\t\tif(!url) url = My.urlInput;\n\t\tif(!url) throw new Error(\"URL mustn't be empty\");\n\t\tlet packageJSON;\n\n\t\t// Check for recognized GitHub/NPM URL pattern\n\t\tif(/github\\.com\\//.test(url)){\n\t\t\tlet name = url.match(/(?<=github\\.com\\/).*?\\/.*?(?=$|.git|\\/|\\?)/m)[0];\n\t\t\tpackageJSON = await $.getJSON(`https://cdn.jsdelivr.net/gh/${name}@main/package.json`);\n\t\t}\n\t\telse if(/npmjs\\.com\\/package\\//.test(url)){\n\t\t\tlet name = url.match(/(?<=npmjs\\.com\\/package\\/).*?(?=$|\\?)/m)[0];\n\t\t\tpackageJSON = await $.getJSON(`https://cdn.jsdelivr.net/npm/${name}@latest/package.json`);\n\t\t}\n\t\telse{\n\t\t\tSmallNotif.add(\"URL is not recognized as GitHub repository or NPM registry\");\n\t\t\tthrow new Error(\"URL is not recognized as GitHub repository or NPM registry\");\n\t\t}\n\n\t\tif(navigateIfExist(packageJSON.name)) return;\n\n\t\tif(packageJSON.dependencies?.['@blackprint/engine'] == null && packageJSON.devDependencies?.['@blackprint/engine'] == null){\n\t\t\tSmallNotif.add(\"Package is not recognized as Blackprint module, as @blackprint/engine was not exist in dependencies or devDependencies\");\n\t\t\tthrow new Error(\"Package is not recognized as Blackprint module, as @blackprint/engine was not exist in dependencies or devDependencies\");\n\t\t}\n\n\t\tawait sf.model('module-example-list-deep').refreshCache(packageJSON);\n\t\tMy.urlInput = '';\n\n\t\tnavigateIfExist(packageJSON.name);\n\t}\n\n\tfunction navigateIfExist(packageName){\n\t\tlet list = My.list;\n\t\tfor (let i=0; i < list.length; i++) {\n\t\t\tlet temp = list[i];\n\t\t\tif(temp.packageName === packageName){\n\t\t\t\tsf.model('module-example-list-deep').openModal(temp);\n\t\t\t\tModal.goto('/module-example-list-deep');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});","## html\n<sf-m name=\"npm-package-info\">\n\t<div class=\"title\">{{ title }} (v{{ version }})</div>\n\t<div class=\"info\"><span>{{ author }}</span> <a style=\"display: {{ repository ? '' : 'none' }}\" href=\"{{ repository }}\" target=\"_blank\">(Repository)</a></div>\n\t<div class=\"description\">{{ description }}</div>\n\n\t<div class=\"list-info\">Please select module to import:</div>\n\t<div class=\"list\">\n\t\t<div class=\"item {{ x.active || '' }}\" sf-each=\"x in list\" @click=\"load(x)\">\n\t\t\t{{ x.url }} <i class=\"{{ x.active === 'loading' ? 'fa fa-spinner fa-spin' : '' }}\"></i>\n\t\t</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"npm-package-info\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t> .info{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tmargin-top: -20px;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t> .description {\n\t\tcolor: white;\n\t\tpadding: 0 10px;\n\t}\n\t> .list-info {\n\t\tmargin-top: 10px;\n\t\tborder-top: 1px dashed white;\n\t\tpadding: 5px 10px 0 10px;\n\t}\n\t> .title{\n\t\tpadding: 10px;\n\t\tmargin-right: 40px;\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t\ttext-decoration: underline;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\n\t> .list-info{\n\t\tcolor: white;\n\t}\n\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\n\t\t\t&.active{\n\t\t\t\tcolor: gray;\n\t\t\t}\n\t\t\t&.loading{\n\t\t\t\tcolor: burlywood;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: -5px;\n\t\ttop: -10px;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('npm-package-info', function(My){\n\tMy.list = [];\n\tMy.title = '';\n\tMy.description = '';\n\tMy.version = '';\n\tMy.author = '';\n\tMy.date = '';\n\tMy.repository = '';\n\tMy.packageURL = '';\n\tMy.package = 0;\n\n\tMy.open = function(pkg, moduleList, exampleList){\n\t\tMy.list = moduleList;\n\t\tMy.exampleList = exampleList;\n\t\tMy.package = pkg;\n\t\tMy.title = pkg.name;\n\t\tMy.description = pkg.description || '';\n\t\tMy.version = pkg.version;\n\t\tMy.date = pkg.date.split('T')[0];\n\t\tMy.author = pkg.publisher.username || '';\n\t\tMy.repository = pkg.links.repository || '';\n\n\t\tMy.packageURL = `https://cdn.jsdelivr.net/npm/${pkg.name}@${pkg.version}`;\n\n\t\tlet temp = Blackprint.modulesURL;\n\t\tlet list = My.list;\n\t\tfor (var i = list.length-1; i >= 0; i--) {\n\t\t\tif(list[i].url.endsWith('.json')){ // remove .docs.json or other .json\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tfor(let key in temp){\n\t\t\tfor (var i = list.length-1; i >= 0; i--) {\n\t\t\t\tlet item = list[i];\n\t\t\t\tif(key.includes(item.url))\n\t\t\t\t\titem.active = 'active';\n\t\t\t}\n\t\t}\n\n\t\tModal.goto('/npm-package-info');\n\t}\n\n\tMy.load = async function(item){\n\t\titem.active = 'loading';\n\n\t\ttry{\n\t\t\tawait Blackprint.loadModuleFromURL([My.packageURL + item.url], {\n\t\t\t\tloadBrowserInterface: true // set to \"false\" for Node.js/Deno\n\t\t\t});\n\t\t} finally { }\n\n\t\tif(My.exampleList.length !== 0)\n\t\t\tModuleExampleList.add(My.title, My.exampleList, My.packageURL);\n\n\t\titem.active = 'active';\n\t\tMy.package._active = true;\n\t}\n\n\tMy.back = function(){\n\t\tModal.goto('/npm-packages');\n\t}\n});","## html\n<div style=\"height:70vh\">\n\t<sf-m name=\"module-url\">\n\t\t<div class=\"head\">\n\t\t\t<div class=\"row url\">Shortened Module URL</div>\n\t\t\t<div class=\"row nodes\">Nodes</div>\n\t\t\t<div class=\"row actions\">Actions</div>\n\t\t</div>\n\t\t<div class=\"content\">\n\t\t\t<div>\n\t\t\t\t<div class=\"row\" sf-each=\"x in list\">\n\t\t\t\t\t<div class=\"column url\"><div>\n\t\t\t\t\t\t<b>{{ shortenLink(x._url, 'host') }}</b>\n\t\t\t\t\t\t{{ shortenLink(x._url, 'path') }}\n\t\t\t\t\t\t<b>{{ shortenLink(x._url, 'search') }}</b>\n\t\t\t\t\t\t<a title=\"Right click to copy link address, click to open on new tab\" target=\"_blank\" href=\"{{x._url}}\"><i class=\"fa fa-link\"></i></a>\n\t\t\t\t\t</div></div>\n\t\t\t\t\t<div class=\"column nodes\">\n\t\t\t\t\t\t{{ x._nodeLength }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"column actions\">\n\t\t\t\t\t\t<button title=\"Show this module on dropdown/module list\" @click=\"hideFromURL(x)\">\n\t\t\t\t\t\t\t <i class=\"fa fa-list\"></i>\n\t\t\t\t\t\t\t <i class=\"fa fa-slash\" style=\"\n\t\t\t\t\t\t\t    position: absolute;\n\t\t\t\t\t\t\t    margin-left: -15px;\n\t\t\t\t\t\t\t    display: {{ x._hidden ? 'inline-block' : 'none' }}\n\t\t\t\t\t\t\t\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button title=\"Reload this module again from URL\" @click=\"reloadURL(x)\">\n\t\t\t\t\t\t\t<i class=\"fa fa-sync\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button title=\"Remove any related nodes and also remove this module\" @click=\"deleteFromURL(x)\">\n\t\t\t\t\t\t\t<i class=\"fa fa-trash\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<input class=\"column url-input\" type=\"text\" @keyup.Enter=\"addURL()\" sf-bind=\"newURL\" placeholder=\"Add module from URL here... (Then press enter)\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"menu\">\n\t\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\n\t\t\t<div class=\"item\" @click=\"npmList\" title=\"Search from NPM\"><i class=\"fa fa-book-open\"></i></div>\n\t\t\t<div class=\"item\" @click=\"loadCachedList\" style=\"{{ firstInit ? '' : 'display: none' }}\" title=\"Load cached list\"><i class=\"fa fa-boxes\"></i></div>\n\t\t</div>\n\t</sf-m>\n</div>\n\n## scss-global\nsf-m[name=\"module-url\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tmin-width: 700px;\n\n\t.head{\n\t\tletter-spacing: 1px;\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\tbackground: #00000040;\n\t\t.row{\n\t\t\tcolor: #fff;\n\t\t\tdisplay: inline-block;\n\t\t\toutline: 1px solid #000;\n\t\t\tcursor: default;\n\t\t\t&.url{\n\t\t\t\twidth: 58%;\n\t\t\t}\n\t\t\t&.nodes{\n\t\t\t\twidth: 19%;\n\t\t\t}\n\t\t\t&.actions{\n\t\t\t\twidth: 22%;\n\t\t\t}\n\t\t}\n\t}\n\n\t.content{\n\t\t.row{\n\t\t\tbackground: #00000094;\n\t\t\tdisplay: flex;\n\t\t\t.column{\n\t\t\t\tcolor: #dbdbdb;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 50%;\n\t\t\t\tpadding: 8px;\n\t\t\t\toutline: 1px solid #000;\n\t\t\t\t&.url{\n\t\t\t\t\twidth: 60%;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\tmargin-bottom: -10px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\tb{\n\t\t\t\t\t\tmargin-right: 4px;\n\t\t\t\t\t\tcolor: #696969;\n\t\t\t\t\t}\n\t\t\t\t\tdiv{\n\t\t\t\t\t\toverflow-x: scroll;\n\t\t\t\t\t\tpadding-bottom: 10px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t&.nodes{\n\t\t\t\t\twidth: 17.5%;\n\t\t\t\t}\n\t\t\t\t&.actions{\n\t\t\t\t\twidth: 22%;\n\t\t\t\t}\n\t\t\t\t&.url-input{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tcolor: gray;\n\t\t\t\t\tbackground: #00000094;\n\t\t\t\t\tborder: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.actions{\n\t\t\tbutton{\n\t\t\t\tborder: 0;\n\t\t\t\tbackground: none;\n\t\t\t\tcolor: #dbdbdb;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.cross{\n\t\t\t\ttext-decoration: line-through;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: -50px;\n\t\ttop: -10px;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 2px solid #456357;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton: {\n\t\tcoming(){ _editorModuleURL.sortURL() }\n\t}\n}\n\n## js-global\nlet _editorModuleURL = sf.model('module-url', function(My){\n\tMy.list = Blackprint._modulesURL;\n\tMy.firstInit = false && !!localStorage.bpModuleURLList; // disable it for now\n\tMy.newURL = '';\n\n\tlet lastModuleList = localStorage.bpModuleURLList;\n\n\tMy.init = async function(){\n\t\t// First initialization cycle\n\t}\n\n\tMy.sortURL = function() {\n\t\tMy.list.sort((a, b) => a._url.localeCompare(b._url));\n\t\tMy.list.refresh();\n\n\t\tif(My.list.length === 0) return;\n\n\t\tlocalStorage.bpModuleURLList = JSON.stringify(My.list.map(v => v._url));\n\t}\n\n\tMy.shortenLink = function(url, which){\n\t\turl = new URL(url);\n\n\t\tif(which === 'search')\n\t\t\treturn url.search;\n\n\t\tif(which === 'host')\n\t\t\treturn url.host || location.host;\n\n\t\t// which === 'path'\n\t\tlet path = url.pathname;\n\t\tif(path.includes('@dist'))\n\t\t\treturn path.replace(/(cjs|mjs)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\n\n\t\treturn path.replace(/(cjs|mjs|dist)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\n\t}\n\n\tasync function loadModuleURL(url, options){\n\t\tlet temp = My.newURL;\n\t\tMy.newURL = '';\n\n\t\tlet progressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\ttry {\n\t\t\tawait Blackprint.loadModuleFromURL(url, options);\n\t\t\tawait sf.loader.task;\n\t\t\tSmallNotif.add(\"Module sucessfully loaded\", 'green');\n\t\t} catch(e) {\n\t\t\tSmallNotif.add(\"Failed to load module\", 'red');\n\t\t\tconsole.error(e);\n\t\t\tMy.newURL = temp;\n\t\t}\n\n\t\t// Clear toast\n\t\tlet list = SmallNotif.list;\n\t\tlist.splice(list.indexOf(progressToast), 1);\n\n\t\tMy.sortURL();\n\t}\n\n\tMy.addURL = function(){\n\t\tlet list = My.list;\n\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlet temp = list[i];\n\t\t\tif(My.newURL === temp._url)\n\t\t\t\treturn;\n\n\t\t\tif(My.newURL.replace(/\\?.*?$/m, '') === temp._url.replace(/\\?.*?$/m, '')){\n\t\t\t\ttemp._url = My.newURL.replace(/\\?.*?$/m, '');\n\t\t\t\tloadModuleURL(temp._url, {\n\t\t\t\t\tloadBrowserInterface: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet url = My.newURL.replace(/\\?.*?$/m, '') + '?'+ (Date.now()/1000|0);\n\t\tloadModuleURL(url, {\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\n\t\t});\n\t}\n\n\tMy.reloadURL = function(item){\n\t\tif(/\\?[0-9]/.test(item._url))\n\t\t\titem._url = item._url.replace(/\\?([0-9]+)/, (full, num) => '?'+(1+Number(num)));\n\t\telse if(item._url.includes('?'))\n\t\t\titem._url = item._url.replace(/\\?.*?$/m, '')+'?1';\n\t\telse item._url += '?1';\n\n\t\tfor (var i = 0; i < SketchList.length; i++){\n\t\t\tif(SketchList[i] == null) continue;\n\t\t\tSketchList[i]._remote?.syncModuleList();\n\t\t}\n\n\t\tBlackprint.loadModuleFromURL(item._url);\n\t}\n\n\tlet { diveModuleURL } = Blackprint.utils;\n\tMy.hideFromURL = function(item){\n\t\tlet url = item._url.replace(/\\?.*?$/m, '');\n\t\tlet hidden = item._hidden = !item._hidden;\n\n\t\tdiveModuleURL(Blackprint.modulesURL[url], function(deepObject, deepProp, keys, bubble){\n\t\t\tdeepObject[deepProp].hidden = hidden;\n\n\t\t\t// Bubbling check if the parent has no child anymore\n\t\t\tfor (var i = bubble.length-1; i >= 0; i--) {\n\t\t\t\tlet ref = bubble[i];\n\n\t\t\t\tif(--ref.val._visibleNode <= 0){\n\t\t\t\t\tif(i === 0){\n\t\t\t\t\t\tBlackprint.nodes[keys[0]].hidden = hidden;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet parent = bubble[i-1];\n\t\t\t\t\tparent.val[ref.key].hidden = hidden;\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t});\n\n\t\tBlackprint.emit('bp_editorNodeAvailability');\n\t}\n\n\tMy.deleteFromURL = function(item){\n\t\tlet list = My.list;\n\t\tvar index = list.indexOf(item);\n\n\t\tif(index === -1) return;\n\t\tlet url = item._url.replace(/[?#].*?$/m, '');\n\n\t\tBlackprint.deleteModuleFromURL(url);\n\t}\n\n\tBlackprint.on('module.delete', { slot: 'bp-editor' }, function({ url }) {\n\t\tlet styles = document.styleSheets;\n\t\tlet simplifiedURL = url.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tlet style = styles[i];\n\t\t\tif(style.href == null) continue;\n\n\t\t\tlet temp = style.href.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\n\t\t\tif(temp === simplifiedURL){\n\t\t\t\tstyle.ownerNode.remove();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet list = My.list;\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tif(list[i]._url.includes(simplifiedURL)){\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\n\tMy.npmList = function(){\n\t\tmodal.goto('/npm-packages');\n\t}\n\n\tMy.loadCachedList = function(){\n\t\tlet list = lastModuleList;\n\t\tif(!list) return;\n\n\t\tlist = JSON.parse(list);\n\t\tif(list.length === 0) return;\n\n\t\tMy.firstInit = false;\n\n\t\tloadModuleURL(list, {\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\n\t\t});\n\t}\n\n\tMy.close = function(){\n\t\tModal.hide();\n\t\tmodal.goto('/');\n\t}\n});","## html\n<sf-m name=\"npm-packages\">\n\t<div class=\"description\">\n\t\tSearch package on NPM registry\n\t\t<i class=\"{{ loading ? 'fa fa-spinner fa-spin' : '' }}\"></i>\n\t</div>\n\t<div class=\"mini-description\" title=\"Please verify the author trustworthiness before using their module. If you're not a developer, always becareful if someone ask you to do something with Blackprint, like inputting password or private key.\">These modules is contributed by the community <a @click=\"reportClick\">(click here to report)</a></div>\n\t<div class=\"search\">\n\t\t<input type=\"text\" sf-bind=\"search\" @keyup.Enter=\"refreshList\" placeholder=\"Search...\">\n\t</div>\n\t<div class=\"list\">\n\t\t<div class=\"item {{ x.package._active ? 'active' : '' }} {{ x.package._update ? 'update' : '' }}\" sf-each=\"x in list\" @click=\"open(x.package)\">\n\t\t\t<div>\n\t\t\t\t<div class=\"title\">{{ x.package.name }} <span>(v{{ x.package.version }})</span></div>\n\t\t\t\t<div class=\"author\">{{ x.package.publisher.username }}</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div class=\"description\">{{ x.package.description }}</div>\n\t\t\t\t<div class=\"date\">{{ x.package.date.split('T')[0] }}</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"npm-packages\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\twidth: 420px;\n\tbox-shadow: 0 0 20px 0px white;\n\t.search-info{\n\t\tcolor: white;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tmargin-bottom: 10px;\n\t}\n\t> .mini-description{\n\t\tpadding: 10px;\n\t\tcolor: grey;\n\t\tfont-size: 12px;\n\t\tmargin-top: -20px;\n\t\ttext-align: center;\n\t\ta{\n\t\t\tcolor: grey;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\t> .description{\n\t\ttext-align: center;\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.search{\n\t\tpadding: 0 5px;\n\t\tinput{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\twidth: calc(100% - 22px);\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\tmax-height: 60vh;\n\t\toverflow: hidden scroll;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\n\t\t\t&.active{\n\t\t\t\tcolor: gray;\n\t\t\t}\n\n\t\t\t.title{\n\t\t\t\tfont-weight: bold;\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t\t.description{\n\t\t\t\tfont-weight: normal;\n\t\t\t    overflow: hidden;\n\t\t\t    width: calc(100% - 100px);\n\t\t\t    white-space: nowrap;\n\t\t\t    text-overflow: ellipsis;\n\t\t\t}\n\t\t\t.author{\n\t\t\t\tfloat: right;\n\t\t\t\tmargin-top: -24px;\n\t\t\t}\n\t\t\t.date{\n\t\t\t\tfloat: right;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tmargin-top: -20px;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('npm-packages', function(My){\n\tlet query = 'https://registry.npmjs.org/-/v1/search?text=blackprint%20nodes';\n\tMy.list = [];\n\tMy.search = '';\n\tMy.loading = false;\n\n\tlet blacklist = [\n\t\t'blackprint',\n\t\t'@blackprint/engine',\n\t\t'@blackprint/sketch',\n\t\t'@blackprint/code-generation',\n\t\t'@blackprint/remote-control',\n\t\t'@blackprint/cli-tools',\n\t];\n\n\tMy.init = function(){\n\t\tMy.refreshList();\n\t}\n\n\tMy.refreshList = async function(){\n\t\tlet _query = query;\n\t\tif(My.search !== '')\n\t\t\t_query += '%20'+My.search;\n\n\t\tMy.loading = true;\n\t\tlet list = (await $.getJSON(_query)).objects;\n\t\tMy.loading = false;\n\n\t\t// Filter out unrelated modules\n\t\tfor (let i=list.length-1; i >= 0; i--) {\n\t\t\tlet item = list[i].package;\n\n\t\t\tif(blacklist.includes(item.name)) {\n\t\t\t\tlist.splice(i, 1); // delete\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(/blackprint/.test(item.name)) continue;\n\t\t\tif(item.description && /blackprint/.test(item.description)) continue;\n\t\t\tif(item.keywords?.includes('blackprint')) continue;\n\t\t\tlist.splice(i, 1); // delete\n\t\t}\n\n\t\t// ToDo: check if version was different with current loaded module\n\t\tlet temp = Blackprint.modulesURL;\n\t\tfor(let key in temp){\n\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\tlet item = list[i].package;\n\t\t\t\titem.description = item.description?.replace(/&#39;/g, \"'\");\n\n\t\t\t\tif(key.includes(item.name)){\n\t\t\t\t\titem._active = true;\n\t\t\t\t\titem._update = Blackprint.utils.packageIsNewer(key, item.name+'@'+item.version);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tMy.list = list;\n\t}\n\n\tMy.open = async function(pkg){\n\t\tMy.loading = true;\n\n\t\t// ToDo: do we need to sanitize URL? '-'\n\t\tlet dirs = await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${pkg.name}@${pkg.version}`);\n\t\tdirs = dirs.files;\n\n\t\tlet dist = [];\n\t\tlet example = [];\n\n\t\tfor (var i = 0; i < dirs.length; i++) {\n\t\t\tlet dir = dirs[i];\n\t\t\tif(dir.type !== 'directory') continue;\n\n\t\t\tif(dir.name === 'dist'){\n\t\t\t\tlet temp = dir.files;\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\n\t\t\t\t\tlet file = temp[a];\n\t\t\t\t\tif(file.type !== 'file') continue;\n\n\t\t\t\t\tlet name = file.name;\n\t\t\t\t\tif(/\\.(map|sf\\.mjs|sf\\.js|css)$/.test(name))\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdist.push({url: `/dist/${name}`});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dir.name === 'example'){\n\t\t\t\tlet temp = dir.files;\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\n\t\t\t\t\tlet file = temp[a];\n\t\t\t\t\tif(file.type !== 'file') continue;\n\n\t\t\t\t\texample.push({url: `/example/${file.name}`});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tMy.loading = false;\n\t\tsf.model('npm-package-info').open(pkg, dist, example);\n\t}\n\n\tMy.reportClick = function(){\n\t\t// ToDo: for now we will redirect to GitHub issue instead\n\t\twindow.open('https://github.com/Blackprint/blackprint.github.io/issues/new', '_blank');\n\t}\n});","## html\n<sf-m name=\"modal-remote-engine-connect\">\n\t<div class=\"description\">Please set the remote engine URL</div>\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default localhost server)</div>\n\t<div class=\"text-input\">\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer(false, true)\">\n\t</div>\n\t<div class=\"button-import\" @click=\"changeServer(false, true)\">Connect</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"modal-remote-engine-connect\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t}\n\t.note{\n\t\ttext-align: center;\n\t\tfont-size: 12px;\n\t\tpadding: 0;\n\t\tcolor: gray;\n\t\tmargin-top: -10px;\n\t\tcursor: pointer;\n\t}\n\t.text-input{\n\t\tpadding: 10px;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\n\t\tinput{\n\t\t\twidth: 100%;\n\t\t\tborder: 1px solid black;\n\t\t\tbackground: #161616;\n\t\t\tpadding: 5px;\n\t\t\tcolor: white;\n\t\t\toutline: none;\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\tcolor: white;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-remote-engine-connect').$el('input').focus();\n\t\t\t}, 500);\n\t\t},\n\t\tshowed(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-remote-engine-connect').$el('input').focus();\n\t\t\t}, 100);\n\t\t},\n\t}\n}\n\n## js-global\nsf.model('modal-remote-engine-connect', function(My){\n\tMy.which = 'engine'; // constant\n\tMy.url = localStorage.BPRemoteEngine ??= \"\";\n\tMy.placeholder = 'http://localhost:2345';\n\tMy.allowModuleSync = true;\n\tMy.allowRemoteImport = true;\n\tMy.allowDataOutSync = true;\n\tMy.client = null;\n\tMy.socket = null;\n\n\tMy.connectDefault = function(){\n\t\tlocalStorage.BPRemoteEngine = My.url = \"\";\n\t\tMy.changeServer();\n\t}\n\n\tlet isConnectOnStartup = false;\n\tMy.changeServer = async function(clearOnFail, isStartupConnect){\n\t\tlet url = My.url;\n\t\tif(!url) url = My.placeholder;\n\n\t\tif(window.io == null){\n\t\t\tsf.loader.js(['https://cdn.socket.io/4.6.1/socket.io.min.js']);\n\t\t\tawait sf.loader.task;\n\t\t}\n\n\t\tlet instance = window.SketchList[0];\n\t\tlet client = My.client ??= new Blackprint.RemoteControl(instance);\n\t\tMy.client.enable?.();\n\t\tMy.socket?.destroy();\n\n\t\tlet parsedURL = new URL(url);\n\t\tlet socket = My.socket = io(parsedURL.origin, {\n\t\t\ttransports: ['websocket'],\n\t\t\tpath: parsedURL.pathname === \"/\" ? '/socket.io' : parsedURL.pathname,\n\t\t\tparser: window._SocketIOParser,\n\t\t});\n\n\t\tSmallNotif.add(\"Connecting to remote engine\");\n\t\tsocket.on('startup-time', time => {\n\t\t\tif((Date.now() - time) < 10e3) // younger than 10 sec\n\t\t\t\tclient.sendSketchToRemote();\n\t\t\telse {\n\t\t\t\tclient.requestRemoteJSON();\n\t\t\t\tclient.once('empty.json.import', function(){\n\t\t\t\t\tclient.sendSketchToRemote();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tclient.on('disabled', ()=> SmallNotif.add(\"Remote sync was disabled\", 'red'));\n\t\tclient.on('remote-save.begin', function(){\n\t\t\tSmallNotif.add('Sketch saved on remote');\n\t\t});\n\n\t\t// instance.syncDataOut = false;\n\t\tinstance.disablePorts = true;\n\n\t\t// Allow import/module sync\n\t\tclient.onImport = v=> My.allowRemoteImport;\n\t\tclient.onModule = v=> My.allowModuleSync;\n\n\t\tsocket.on('relay', v => client.onSyncIn(v));\n\t\tclient.onSyncOut = v => socket.emit('relay', v);\n\n\t\tif(Modal.showed && Modal.views.currentPath === '/remote-engine-connect')\n\t\t\tModal.hide();\n\n\t\tsetTimeout(()=> {\n\t\t\tif(socket.connected) return;\n\t\t\tconsole.log(\"Failed to connect to remote engine:\", url);\n\t\t\tSmallNotif.add(\"Failed to connect to remote engine\", \"red\");\n\t\t\tsocket.destroy();\n\n\t\t\t// Unset the value if this was failing on startup time\n\t\t\tif(clearOnFail)\n\t\t\t\tlocalStorage.BPRemoteEngine = \"\";\n\t\t}, 8000);\n\n\t\tsocket.on('disconnect', ()=> SmallNotif.add(\"Disconnected from remote engine\"));\n\t\tsocket.on('connect', function(){\n\t\t\tconsole.log(\"Connected to remote engine:\", url);\n\t\t\tSmallNotif.add(\"Connected to remote engine\", \"green\");\n\t\t\tlocalStorage.BPRemoteEngine = url;\n\n\t\t\tif(isStartupConnect === true){\n\t\t\t\tisStartupConnect = false;\n\t\t\t\tModal.goto('/remote-sync');\n\t\t\t}\n\t\t});\n\t}\n\n\tif(My.url !== '' && Blackprint.RemoteControl != null){\n\t\t$(() => setTimeout(()=> My.changeServer(true, true), 200));\n\t}\n});","## html\n<sf-m name=\"modal-remote-sketch-connect\">\n\t<div class=\"description\">Please set the remote sketch's relay URL</div>\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default localhost server)</div>\n\t<div class=\"text-input\">\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer(false, true)\">\n\t</div>\n\t<div class=\"button-import\" @click=\"changeServer(false, true)\">Connect</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"modal-remote-sketch-connect\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t}\n\t.note{\n\t\ttext-align: center;\n\t\tfont-size: 12px;\n\t\tpadding: 0;\n\t\tcolor: gray;\n\t\tmargin-top: -10px;\n\t\tcursor: pointer;\n\t}\n\t.text-input{\n\t\tpadding: 10px;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\n\t\tinput{\n\t\t\twidth: 100%;\n\t\t\tborder: 1px solid black;\n\t\t\tbackground: #161616;\n\t\t\tpadding: 5px;\n\t\t\tcolor: white;\n\t\t\toutline: none;\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\tcolor: white;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-remote-sketch-connect').$el('input').focus();\n\t\t\t}, 500);\n\t\t},\n\t\tshowed(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-remote-sketch-connect').$el('input').focus();\n\t\t\t}, 100);\n\t\t},\n\t}\n}\n\n## js-global\nsf.model('modal-remote-sketch-connect', function(My){\n\tMy.which = 'sketch'; // constant\n\tMy.url = localStorage.BPSketchRelayServer ??= \"\";\n\tMy.placeholder = 'http://localhost:2345';\n\tMy.allowModuleSync = true;\n\tMy.allowRemoteImport = true;\n\tMy.allowDataOutSync = true;\n\tMy.client = null;\n\tMy.socket = null;\n\tMy.event = new Blackprint.Engine.CustomEvent();\n\n\tMy.connectDefault = function(){\n\t\tlocalStorage.BPSketchRelayServer = My.url = \"\";\n\t\tMy.changeServer();\n\t}\n\n\tMy.changeServer = async function(clearOnFail, isStartupConnect){\n\t\tlet url = My.url;\n\n\t\tif(window.io == null){\n\t\t\tsf.loader.js(['https://cdn.socket.io/4.6.1/socket.io.min.js']);\n\t\t\tawait sf.loader.task;\n\t\t}\n\n\t\tlet instance = window.SketchList[0];\n\t\tlet client = My.client ??= new Blackprint.RemoteSketch(instance);\n\t\tMy.client.enable?.();\n\n\t\t// Allow import/module sync\n\t\tclient.onImport = v=> My.allowRemoteImport;\n\t\tclient.onModule = v=> My.allowModuleSync;\n\t\tclient.on('disabled', ()=> SmallNotif.add(\"Remote sync was disabled\", 'red'));\n\n\t\tMy.socket?.destroy();\n\n\t\tlet parsedURL = new URL(url);\n\t\tlet socket = My.socket = io(parsedURL.origin, {\n\t\t\ttransports: ['websocket'],\n\t\t\tpath: parsedURL.pathname === \"/\" ? '/socket.io' : parsedURL.pathname,\n\t\t\tparser: window._SocketIOParser,\n\t\t});\n\n\t\tSmallNotif.add(\"Connecting to remote sketch\");\n\t\tsocket.on('relay', v => client.onSyncIn(v));\n\t\tclient.onSyncOut = v => socket.emit('relay', v);\n\n\t\tMy.event.emit('init');\n\t\tsetTimeout(()=> {\n\t\t\tlet socket = My.socket; // Re-obtain the reference, in case it get changed\n\n\t\t\tif(socket.connected) return;\n\t\t\tconsole.log(\"Failed to connect to sketch's relay server:\", url);\n\t\t\tSmallNotif.add(\"Failed to connect to sketch's relay server\", \"red\");\n\t\t\tsocket.destroy();\n\n\t\t\tMy.event.emit('disconnected');\n\n\t\t\t// Unset the value if this was failing on startup time\n\t\t\tif(clearOnFail)\n\t\t\t\tlocalStorage.BPSketchRelayServer = '';\n\t\t}, 8000);\n\n\t\tsocket.on('disconnect', ()=> SmallNotif.add(\"Disconnected from relay server\"));\n\t\tsocket.on('connect', function(){\n\t\t\tconsole.log(\"Connected to sketch's relay server:\", url);\n\t\t\tSmallNotif.add(\"Connected to sketch's relay server\", \"green\");\n\t\t\tlocalStorage.BPSketchRelayServer = url;\n\t\t\tMy.event.emit('connected');\n\n\t\t\tif(isStartupConnect === true){\n\t\t\t\tisStartupConnect = false;\n\t\t\t\tModal.goto('/remote-sync');\n\t\t\t}\n\t\t});\n\n\t\tif(Modal.showed && Modal.views.currentPath === '/remote-sketch-connect')\n\t\t\tModal.hide();\n\t}\n\n\tif(My.url !== '' && Blackprint.RemoteSketch != null){\n\t\t$(() => setTimeout(()=> My.changeServer(true, true), 200))\n\t}\n});","## html\n<sf-m name=\"remote-sync\">\n\t<div class=\"description\">Sync this Editor with Remote Blackprint</div>\n\t<div class=\"list\">\n\t\t<!--div class=\"item\" @click=\"puppetNodeList()\" title=\"Use this if the remote module doesn't have nodes for Browser, or if you don't want to execute external module into this editor\">\n\t\t\t<div class=\"icon\"><i class=\"fa fa-sync-alt\"></i></div>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"title\">Puppet Node List</div>\n\t\t\t\t<div class=\"description\">Replace this editor's node list with remote puppet node</div>\n\t\t\t</div>\n\t\t</div-->\n\t\t<div class=\"item\" @click=\"sendInstance()\" title=\"Remote instance will import the schema from this editor\">\n\t\t\t<div class=\"icon\"><i class=\"fa fa-upload\"></i></div>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"title\">Send remote instance schema</div>\n\t\t\t\t<div class=\"description\">Export Blackprint schema to remote</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"item\" @click=\"receiveInstance()\" title=\"Your current schema will be cleared and replaced with remote schema, in case the remote module can't be loaded in this browser you will need to import nodes with Puppet Nodes\">\n\t\t\t<div class=\"icon\"><i class=\"fa fa-download\"></i></div>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"title\">Receive remote instance schema</div>\n\t\t\t\t<div class=\"description\">Import Blackprint schema from remote</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"item\" @click=\"sendModuleList()\" title=\"Use this if the remote is also using JavaScript, and the modules have support for target environment\">\n\t\t\t<div class=\"icon\"><i class=\"fa fa-upload\"></i></div>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"title\">Send current module list to remote</div>\n\t\t\t\t<div class=\"description\">Ask remote Blackprint to load module from this editor's loaded module list</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"item\" @click=\"disconnect()\">\n\t\t\t<div class=\"icon\"><i class=\"fa fa-power-off\"></i></div>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"title\">Disconnect</div>\n\t\t\t\t<div class=\"description\">Disconnect this editor with remote instance</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"remote-sync\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t& > .description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\n\t\t\t.icon{\n\t\t\t\tfloat: left;\n\t\t\t    margin: 10px 10px 0 5px;\n\t\t\t}\n\t\t\t.content{\n\t\t\t\tdisplay: inline-block;\n\t\t\t}\n\n\t\t\t.description{\n\t\t\t\tfont-size: 12px;\n   \t\t\t\tcolor: #999999;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('remote-sync', function(My){\n\tfunction getHandler(){\n\t\tlet socket = sf.model('modal-remote-sketch-connect').socket;\n\t\tif(socket) return sf.model('modal-remote-sketch-connect');\n\n\t\tsocket = sf.model('modal-remote-engine-connect').socket;\n\t\tif(socket) return sf.model('modal-remote-engine-connect');\n\t}\n\n\tMy.puppetNodeList = function(){\n\t\t// ToDo: below was removed, but it is still here for reference\n\t\tlet socket = getHandler().socket;\n\n\t\tsocket.emit('puppetnode.ask');\n\t\tsocket.once('puppetnode.answer', async (data) => {\n\t\t\tlet tab = sf.model(\"project-list\").getActiveTab();\n\t\t\tlet rootInstance = (tab.sketch.rootInstance || tab.sketch);\n\t\t\tlet temp = rootInstance.exportJSON({environment: false});\n\t\t\trootInstance.clearNodes();\n\t\t\tawait rootInstance.importJSON(temp);\n\t\t});\n\t};\n\n\tMy.sendModuleList = function(){\n\t\tgetHandler().client.syncModuleList();\n\t};\n\n\tMy.receiveInstance = async function(){\n\t\tlet data = await getHandler().client.requestRemoteJSON();\n\t\tlet tab = sf.model(\"project-list\").getActiveTab();\n\t\tlet rootInstance = (tab.sketch.rootInstance || tab.sketch);\n\t\trootInstance.clearNodes();\n\t\tawait rootInstance.importJSON(data);\n\t};\n\n\tMy.sendInstance = function(){\n\t\tgetHandler().client.sendSketchToRemote();\n\t\tgetHandler().client.saveSketchToRemote(true);\n\t};\n\n\tMy.disconnect = function(){\n\t\tlet handler = getHandler();\n\t\thandler.socket.disconnect();\n\n\t\tif(handler.which === 'sketch') Modal.goto('/remote-sketch-connect');\n\t\tif(handler.which === 'engine') Modal.goto('/remote-engine-connect');\n\t};\n});","## html\n<sf-m name=\"sketch-importer\">\n\t<div class=\"description\" title=\"To avoid any risks if you have stored sensitive data on this editor, make sure you have verify the author of the nodes and the JSON to be imported.\">Please verify the author before importing</div>\n\t<div class=\"info-modules\">\n\t\t<div class=\"title\">These modules will be imported: <span @click=\"removeModuleList\" class=\"remove-module\"><i class=\"fa fa-trash\"></i></span></div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in modules\">\n\t\t\t\t{{ x }}\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-nodes\">\n\t\t<div class=\"title\">These nodes will be used:</div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in nodes\">\n\t\t\t\t{{ x.name }} ({{ x.count }})\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-clear\">\n\t\t<div class=\"title\">Please be careful if you saved sensitive data on this editor<br>You can click below to clear the saved data:</div>\n\t\t<!-- Hi! can you contribute for clearing browser data like WebSQL or IndexedDB? -->\n\t\t<div class=\"button-clear\">\n\t\t\t<div @click=\"clear.localStorage\">\n\t\t\t\tLocal Storage ({{ savedKeys.localStorage.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sessionStorage\">\n\t\t\t\tSession Storage ({{ savedKeys.sessionStorage.length }})\n\t\t\t</div><br>\n\t\t\t<div @click=\"clear.environmentVariables\">\n\t\t\t\tEnvironment Variables ({{ savedKeys.environmentVariables.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sketchPages\">\n\t\t\t\tSketch Pages ({{ savedKeys.sketchPages.length }})\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"button-import\" @click=\"importNow\">\n\t\tImport Sketch\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"sketch-importer\"] {\n\tbackground: #1e1e1eab;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\tcolor: white;\n\tmax-width: 80vw;\n\t.description{\n\t\tpadding: 10px;\n\t\tmin-width: 500px;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tmargin-bottom: 10px;\n\t\ttext-decoration: underline;\n\t\tletter-spacing: 1px;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.info-modules, .info-nodes{\n\t\tbackground: #000000ab;\n\t\tpadding: 7px;\n\t\tborder-radius: 10px;\n\t\tmargin: 5px 2px;\n\t\t.title{\n\t\t\tcolor: gray;\n\t\t}\n\t}\n\t.remove-module{\n\t\tcursor: pointer;\n\t\t&:hover{\n\t\t\tcolor: white;\n\t\t}\n\t}\n\t.info-clear{\n\t\tmargin-top: 10px;\n\t\t.title{\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t.list{\n\t\tlist-style-type: decimal;\n\t\tmargin: 5px 0;\n\t\tpadding: 0 30px;\n\t\tmax-height: 15vh;\n\t\toverflow: hidden auto;\n\t}\n\t.button-clear{\n\t\ttext-align: center;\n\t\tdiv{\n\t\t\tdisplay: inline-block;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px dashed #000;\n\t\t\tpadding: 7px;\n\t\t\tbackground: #000000ad;\n\t\t\tborder-radius: 20px;\n\t\t\tcursor: pointer;\n\t\t\t&:hover{\n\t\t\t\tbackground: #181818ad;\n\t\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t\t}\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global\nvar SketchImporter = sf.model('sketch-importer', function(My){\n\tMy.modules = [];\n\tMy.nodes = [];\n\tMy.pendingLoad = void 0;\n\tMy.savedKeys = {\n\t\tlocalStorage:[],\n\t\tsessionStorage:[],\n\t\tenvironmentVariables:[],\n\t\tsketchPages:[],\n\t};\n\n\tlet progressToast = false;\n\tlet progressTriggered = true;\n\n\tMy.loadJSON = async function(json){\n\t\tModal.goto('/sketch-importer');\n\n\t\tif(json.constructor === String)\n\t\t\tjson = JSON.parse(json);\n\n\t\tMy.pendingLoad = json;\n\t\tMy.modules = json.moduleJS || [];\n\n\t\tMy.nodes = [];\n\t\tlet instance = json.instance;\n\t\tfor(let key in instance)\n\t\t\tMy.nodes.push({name: key, count: instance[key].length});\n\n\t\tMy.checkSavedData();\n\t}\n\n\tMy.removeModuleList = function(){\n\t\tMy.modules = [];\n\t\tMy.pendingLoad.moduleJS = [];\n\t}\n\n\tMy.importNow = function(){\n\t\tif(My.pendingLoad === void 0){\n\t\t\tlet msg = \"Please call 'SketchImport.loadJSON' first\";\n\t\t\tconsole.error(msg);\n\n\t\t\tSmallNotif.add(msg, 'yellow');\n\t\t\treturn false;\n\t\t}\n\n\t\tModal.hide();\n\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\n\t\tsketch.__importing = true;\n\n\t\tasync function pageShowed(){\n\t\t\t// Import from JSON, and also load required modules if exist\n\t\t\ttry{\n\t\t\t\tlet Ref = CurrentSketch.scope('container');\n\t\t\t\tRef.scale = 1; // Reset scale to fix cable bug\n\t\t\t\tRef.size.w = Ref.origSize.w;\n\t\t\t\tRef.size.h = Ref.origSize.h;\n\n\t\t\t\tawait sketch.importJSON(My.pendingLoad);\n\t\t\t} catch(e) {\n\t\t\t\tSmallNotif.add(\"Failed to import instance from JSON, please do a clean import again\", 'red');\n\n\t\t\t\twindow.editor_lastFailedImport = My.pendingLoad;\n\t\t\t\tconsole.log(\"%cIf you want to debug/modify your last failed import please copy value from 'window.editor_lastFailedImport' and modify it from your text editor, then reimport it to Blackprint Editor\", 'color: yellow');\n\n\t\t\t\t// Clear toast\n\t\t\t\tlet list = SmallNotif.list;\n\t\t\t\tlist.splice(list.indexOf(progressToast), 1);\n\n\t\t\t\tthrow e;\n\t\t\t} finally {\n\t\t\t\tdelete sketch.__importing;\n\t\t\t\tMy.pendingLoad = void 0;\n\t\t\t}\n\n\t\t\t// Clear toast\n\t\t\tlet list = SmallNotif.list;\n\t\t\tlist.splice(list.indexOf(progressToast), 1);\n\n\t\t\t// Fit all node to view\n\t\t\tlet currentSketchPage = $('.page-current > sketch-page')[0].model;\n\t\t\tcurrentSketchPage.fitToView();\n\t\t}\n\n\t\tif(views.currentPath === '/sketch/1'){\n\t\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\t\treturn setTimeout(pageShowed, 400);\n\t\t}\n\n\t\tviews.goto('/sketch/1');\n\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\tsetTimeout(pageShowed, 1000); // Wait page animation\n\t}\n\n\tMy.checkSavedData = function(){\n\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\tMy.savedKeys.sketchPages = SketchList;\n\t}\n\n\tMy.clear = {\n\t\tlocalStorage(){\n\t\t\tlet keys = Object.keys(localStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete localStorage[keys[i]];\n\n\t\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\t},\n\t\tsessionStorage(){\n\t\t\tlet keys = Object.keys(sessionStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete sessionStorage[keys[i]];\n\n\t\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\t},\n\t\tenvironmentVariables(){\n\t\t\tlet ref = Blackprint.Environment;\n\t\t\tlet keys = Object.keys(ref.map);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tref.delete(keys[i]);\n\n\t\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\t},\n\t\tsketchPages(){\n\t\t\tfor (var i = 0; i < SketchList.length; i++){\n\t\t\t\tif(SketchList[i] == null) continue;\n\t\t\t\tSketchList[i].destroy();\n\t\t\t}\n\n\t\t\tSketchList.splice(1);\n\t\t\tviews.goto('/sketch/1');\n\t\t}\n\t};\n});","## html\n<sf-m name=\"terms-and-privacy\">\n\t<h1>Terms and Privacy</h1>\n\t<h3>Terms of use:</h3>\n\t<ul>\n\t\t<li>May you do good and not evil.</li>\n\t\t<li>May you find forgiveness for yourself and forgive others.</li>\n\t\t<li>May you share freely, never taking more than you give.</li>\n\t</ul>\n\t<div class=\"small-note\">Adapted from: SQLite's License</div>\n\t<h3>When you're using this editor:</h3>\n\t<ul>\n\t\t<li>There are no information collected and transmitted from this editor to the maintainer of this editor. There are no telemetry, user registration, or ads created/served by the maintainer.</li>\n\t\t<li>This editor is using some third party like GitHub, Algolia, JSDelivr which serve the editor's assets. These services may count the traffic for analytics purposes.</li>\n\t\t<li>This editor may store information in your browser's storage like IndexedDB or LocalStorage.</li>\n\t\t<li>Environment variables that you input on this editor will be stored on your browser's storage.</li>\n\t\t<li>If you're using remote control or remote module, Socket.io may store cookies.</li>\n\t\t<li>When you're using workspace feature, this editor may have access to your files for the provided directory.</li>\n\t</ul>\n\t<h3>When you're using external modules or custom script:</h3>\n\t<ul>\n\t\t<li>Depends on which CDN you use, the CDN may record the downloaded module for their analytics purpose (like JSDelivr).</li>\n\t\t<li>Depends on what module you loaded, the module may can collect information and send to third party, depends on their purposes (like Telegram or Discord module that connect to their datacenter server to send message in their services).</li>\n\t\t<li>Be careful if you're didn't recognize and unable to trust/verify the module author as this feature can execute code from the module, just like \"npm install\".</li>\n\t</ul>\n\t<h3>When you're using remote control feature:</h3>\n\t<i>This feature is not enabled by default.</i>\n\t<ul>\n\t\t<li>Node structure, data (may include input/output/environment), cables, loaded modules, name, messages, will be transmitted and synced to the third party. The third party can be the server for collaborating with your friend, or your own server to handle remote control.</li>\n\t\t<li>Becareful if you're using this feature with someone you're not recognize and trust, as this is a remote control. You will need to control which data that can be synced to increase security.</li>\n\t</ul>\n\n\tIf you think some information was misleading/outdated or need clarification, feel free to contact the maintainer or do pull request.\n\n\tLast updated: 27 June 2023\n</sf-m>\n\n## scss-global\nsf-m[name=\"terms-and-privacy\"] {\n\tbackground: #ffffff;\n    color: black;\n\tpadding: 20px;\n\tborder-radius: 10px;\n\tmax-width: 700px;\n\tborder: 2px solid black;\n\tposition: relative;\n\t// white-space: pre-line;\n\tbox-shadow: 0 0 20px 0px white;\n\th1{\n\t\tmargin: 0;\n\t\tborder-bottom: 1px dashed;\n\t}\n\tul{\n\t\tlist-style: decimal;\n\t}\n\t.small-note {\n\t\tfont-size: 12px;\n\t\tcolor: #bfbfbf;\n\t}\n}\n\n## js-global\nsf.model('terms-and-privacy', function(My){\n\tMy.open = function(key){}\n});","## html\n<sf-m name=\"sketch-settings\">\n\t<div class=\"description\">Settings</div>\n\t<div class=\"list\">\n\t\t<div class=\"item\">\n\t\t\t<div class=\"title\">Theme:</div>\n\t\t\t<select sf-bind=\"theme\">\n\t\t\t\t<option value=\"default\">Default</option>\n\t\t\t\t<option value=\"darker\">Darker</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<div class=\"title\">Background:</div>\n\t\t\t<input type=\"text\" sf-bind=\"background\" placeholder=\"https://...\">\n\t\t</div>\n\t\t<div class=\"item\" style=\"display: {{ isDevMode ? 'block' : 'none' }}\">\n\t\t\t<div class=\"title\">Custom script:</div>\n\t\t\t<input type=\"text\" sf-bind=\"customScript\" placeholder=\"https://...\">\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<div class=\"title\">Hide unused port</div>\n\t\t\t<input type=\"checkbox\" sf-bind=\"hideUnusedPort\">\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<div class=\"title\">Show sketch minimap</div>\n\t\t\t<input type=\"checkbox\" sf-bind=\"showSketchMinimap\">\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<div class=\"title\">Single node execution loop limit</div>\n\t\t\t<input type=\"number\" sf-bind=\"singleNodeExecutionLoopLimit\">\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"sketch-settings\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 5px;\n\t\tcolor: white;\n\t\tborder-bottom: 1px solid black;\n\t\tbackground: #111;\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tborder: 1px solid #000;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\t.title{\n\t\t\t\tdisplay: inline;\n\t\t\t\tmargin-right: 10px;\n\t\t\t}\n\t\t\tselect, input{\n\t\t\t\tbackground: black;\n\t\t\t\tborder: none;\n\t\t\t\tcolor: white;\n\t\t\t\toutline: none;\n\t\t\t\tpadding: 5px;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global\nvar SketchSettings = sf.model('sketch-settings', function(My){\n\tMy.theme = 'default';\n\tMy.isDevMode = sf.hotReload !== void 0;\n\n\tMy.on$theme = function(now){\n\t\t$('body')\n\t\t\t.removeClass('node-ui-'+My.theme)\n\t\t\t.addClass('node-ui-'+now);\n\t}\n\n\tMy.background = localStorage.bpBackgroundURL || '';\n\tMy.on$background = function(now){\n\t\t$('body > .background > .img')\n\t\t\t.css('background-image', \"url('\"+(now || '/assets/img/background/black3.jpg')+\"')\")\n\t\t\t.css('background-size', \"cover\");\n\n\t\tlocalStorage.bpBackgroundURL = now;\n\t}\n\tif(My.background) My.on$background(My.background);\n\n\tMy.hideUnusedPort = localStorage.bpHideUnusedPort == 'true' || false;\n\tMy.on$hideUnusedPort = function(now){\n\t\tfor (var i = 0; i < SketchList.length; i++) {\n\t\t\tif(SketchList[i] == null) continue;\n\n\t\t\tlet container = SketchList[i].scope('container');\n\t\t\tcontainer.hideUnusedPort = now;\n\n\t\t\tlet nodes = container.nodeScope.list;\n\t\t\tfor (var a = 0; a < nodes.length; a++)\n\t\t\t\tnodes[a].hideUnusedPort = now;\n\t\t}\n\n\t\tlocalStorage.bpHideUnusedPort = now;\n\t}\n\n\tMy.showSketchMinimap = localStorage.bpShowSketchMinimap == 'true' || false;\n\tMy.on$showSketchMinimap = function(now){\n\t\tfor (var i = 0; i < SketchList.length; i++) {\n\t\t\tif(SketchList[i] == null) continue;\n\n\t\t\tlet sketch = SketchList[i];\n\t\t\tlet ref = sketch.page.miniViewer;\n\n\t\t\tif(now === true && ref.topRight == null){\n\t\t\t\tref.topRight = sketch.cloneContainer(true); // Clone and get the MiniMap\n\n\t\t\t\t// Remove the dropdown from minimap\n\t\t\t\t$('sf-m[name=\"dropdown\"]', ref.topRight).remove();\n\n\t\t\t\t// Reset current container view\n\t\t\t\tvar container = sketch.scope('container');\n\t\t\t\tcontainer.pos.x = 0;\n\t\t\t\tcontainer.pos.y = 0;\n\t\t\t\tcontainer.scale = 1; // 100% scale\n\n\t\t\t\t// Refresh mini viewport size\n\t\t\t\trefreshViewport();\n\t\t\t\tfunction refreshViewport(){\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tcontainer.pos.x = -0.1;\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\tcontainer.pos.x = 0;\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}, 1000);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tref.topRightHidden = !now; // hide on false, show on true\n\t\t}\n\n\t\tlocalStorage.bpShowSketchMinimap = now;\n\t}\n\n\t// Custom script is only available on development mode\n\tlet _customScript; \n\tMy.customScript = localStorage.bpCustomScript || '';\n\tMy.on$customScript = function(now, isInit){\n\t\tif(!sf.hotReload) return;\n\t\tif(!/^http.*?js$/m.test(now)){\n\t\t\tlocalStorage.bpCustomScript = '';\n\t\t\tSmallNotif.add(\"Invalid custom script URL\");\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout(_customScript);\n\t\t_customScript = setTimeout(async ()=> {\n\t\t\tsf.loader.js([now]);\n\t\t\tawait sf.loader.task;\n\t\t\tif(!isInit) SmallNotif.add(\"Custom script URL was saved\");\n\t\t\tlocalStorage.bpCustomScript = now;\n\t\t}, 1000);\n\t}\n\tif(My.customScript) My.on$customScript(My.customScript, true);\n\n\tBlackprint.settings('singleNodeExecutionLoopLimit', +(localStorage.singleNodeExecutionLoopLimit ??= 10_000));\n\tMy.singleNodeExecutionLoopLimit = Blackprint.settings.singleNodeExecutionLoopLimit;\n\tMy.on$singleNodeExecutionLoopLimit = function(now){\n\t\tBlackprint.settings.singleNodeExecutionLoopLimit = +now;\n\t\tlocalStorage.singleNodeExecutionLoopLimit = +now;\n\t};\n});"]}