{"version":3,"sources":["custom.sf.css","component/dropdown.sf","model/modal.sf","component/sketch-panel-bottom.sf","component/sketch-panel-left.sf","component/sketch-panel-right.sf","component/SmallNotif.sf","model/Loading.sf","routes/body.sf","model/tooltip.sf","routes/+vw-ground/sketch+vw-page/_page.sf","routes/+vw-ground/index.sf","routes/+vw-ground/sketch.sf","routes/+vw-modal/custom-node-editor.sf","routes/+vw-modal/dev-mode.sf","routes/+vw-modal/environment-variables.sf","routes/+vw-modal/example-list.sf","routes/+vw-modal/module-example-list-deep.sf","routes/+vw-modal/module-example-list.sf","routes/+vw-modal/npm-package-info.sf","routes/+vw-modal/npm-packages.sf","routes/+vw-modal/sketch-importer.sf","routes/+vw-modal/module-url.sf","routes/+vw-modal/remote-engine-connect.sf","routes/+vw-modal/remote-sketch-connect.sf","routes/+vw-modal/sketch-settings.sf"],"names":[],"mappings":"AAAA,c,CCoCA,a,CACC,U,CACA,c,CAEA,sC,CACA,gC,CACA,c,CACG,c,CACA,K,CACA,M,CACA,S,CACA,iB,CACA,e,CACA,qB,CDXJ,gB,CCFA,iB,CAkBE,S,CDtCA,iB,CCoBF,iB,CAsBK,e,CACA,gB,CDvCH,iB,CCgBF,iB,CA4BE,uB,CACA,yB,CACA,wB,CACA,e,CACA,gC,CACA,c,CACA,c,CAUA,U,CACG,mB,CDsOL,kB,CCnRA,mB,CDJI,uB,CCIJ,kB,CDDA,iC,CEzBA,6B,CD2EA,S,CD/CA,gB,CCmDA,iB,CACC,M,CACA,K,CACA,U,CACA,W,CACA,yB,CACA,a,CAGA,uB,CACA,qB,CAVD,S,CAaE,kB,CDjDF,e,CCsDE,Q,CACD,iB,CACA,S,CDnDD,gB,CCuDA,a,CAEE,gB,CACA,iB,CACA,e,CACA,c,CACA,yB,CACA,kB,CACA,U,CACA,kB,CACA,0B,CDrDF,Y,CC2CA,Q,CAcE,S,CACA,iB,CAfF,Y,CAkBG,qB,CAlBH,gB,CDpCE,2B,CCoCF,iB,CAyBG,U,CACA,iB,CD1DD,wB,CAAA,8B,CCgCF,wB,CA+BG,e,CD1DH,4C,CA0CA,0C,CGlHA,iC,CAAA,yB,CH2EA,uC,CGtEI,Q,CACA,uC,CACH,iB,CACA,Q,CACA,8B,CAEA,Y,CAGA,gD,CAVD,iB,CAYE,sB,CACA,iB,CACA,W,CACA,U,CACA,Y,CACA,e,CHyEA,+C,CG1FF,c,CAqBE,W,CACA,Y,CACA,U,CACA,sB,CACA,iB,CACA,K,CACA,iD,CA3BF,e,CA6BG,iB,CACA,K,CACA,c,CACA,a,CHwED,8C,CGxGF,2B,CAqCE,uD,CCVA,qD,CD3BF,kB,CHuEA,uC,CA0CA,qC,CAmCA,sC,CKtIA,iB,CAOC,iC,CAEA,oB,CAEA,kB,CLwFD,qC,CIrHC,Y,CACA,M,CAEA,W,CACA,W,CACA,6B,CAKA,8C,CAXD,iB,CJkIE,6C,CIlIF,c,CAgBE,W,CACA,Y,CACA,kB,CACA,wB,CACA,iB,CACA,O,CACA,+C,CAtBF,e,CAwBG,iB,CACA,O,CACA,c,CACA,a,CJqHD,4C,CIhJF,wB,CJsJA,2C,CKvIA,iC,CAAA,yB,CL0IA,sC,CKrIC,Q,CAEA,O,CACA,W,CACA,yB,CACA,4B,CAEA,Y,CAIA,+C,CAZD,iB,CAcE,qB,CACA,U,CACA,K,CACA,iB,CACA,a,CACA,e,CACA,4D,CApBF,U,CAsBG,c,CACA,e,CACA,iB,CLsIC,8D,CK9JJ,kC,CLgKI,sD,CKhKJ,+B,CAgCG,c,CACA,e,CACA,gB,CL+ZK,iD,CA5RJ,4D,CKrKJ,U,CLuKI,qD,CAAA,wD,CKvKJ,0B,CAyCG,U,CACA,Q,CACA,S,CACA,W,CACA,uB,CACA,kB,CLiID,8C,CK/KF,c,CAmDE,W,CACA,Y,CACA,kB,CACA,wB,CACA,iB,CACA,M,CACA,gD,CAzDF,e,CA2DG,iB,CACA,M,CACA,c,CACA,a,CL+HD,2C,CK7LF,Y,CL+LE,6C,CK/LF,wB,CAsEE,sD,CAtEF,kB,CLqMA,Y,CM1KA,e,CACE,yB,CACA,U,CACA,sC,CAEA,gB,CACA,kC,CACA,0C,CACA,iB,CACA,a,CACA,kB,CACA,iB,CACA,c,CACA,kB,CACA,Y,CACA,kB,CACA,iB,CAhBF,oB,CAmBI,gB,CN0KF,mB,CM7LF,S,CAwBI,yB,CAxBJ,uB,CAAA,oB,CAAA,e,CA0BQ,S,CACA,c,CACA,c,CACA,Q,CACA,a,CNwKN,mB,CMtMF,W,CAoCI,c,CACA,e,CACA,c,CACA,S,CACA,iB,CACA,U,CACA,uB,CACA,U,CNsKJ,iB,CMjKA,a,CACE,c,CACA,Y,CACA,Y,CACA,2B,CAJF,U,CAOI,K,CACA,wC,CARJ,W,CAWM,e,CNiKJ,0B,CM5KF,M,CAgBI,K,CACA,uC,CAjBJ,U,CAoBM,oB,CN+JN,W,CMxJE,a,CACE,sC,CACA,oB,CACA,2B,CN2JJ,c,CM9JE,a,CACE,sC,CACA,oB,CACA,2B,CNiKJ,Y,CMpKE,a,CACE,sC,CACA,oB,CACA,2B,CNuKJ,a,CM1KE,a,CACE,sC,CACA,oB,CACA,2B,CN8KJ,kB,CO9SA,Y,CACC,oB,CAEA,gB,CACA,kB,CACA,wB,CACA,c,CACA,Q,CACA,U,CACA,U,CACA,W,CPgfD,mD,CQ1aA,wD,CDrEC,uB,CP8YD,S,COzZA,a,CP4TE,wB,CO5TF,iB,CPgUA,U,CE/TA,6C,CACC,Y,CACA,c,CACA,Y,CACA,K,CACA,O,CACA,Q,CACA,M,CACA,qB,CACA,+H,CAQA,wC,CACA,W,CACA,uB,CACA,iB,CFkUC,oB,CACA,+B,CACA,e,CACE,Y,CAJF,oB,CAQA,wB,CE5TA,Y,CACA,kB,CACA,S,CACA,a,CACA,U,CACA,iB,CACA,mB,CF8TE,iB,CACA,qB,CAJJ,c,CAQA,kB,CSzWC,iB,CACA,oB,CACA,mB,CACA,e,CACA,iB,CACA,uB,CACA,c,CACA,Q,CACA,S,CACA,U,CACA,S,CT2WC,S,CAJA,8B,CAMA,wB,CSrWA,oB,CTkWA,uB,CSvXF,kB,CT8XI,S,CACF,wB,CAJF,iB,CAQA,gB,CQlVC,c,CRoVC,K,CACA,M,CACA,qB,CQlVA,c,CACA,U,CACA,wB,CACA,mB,CR+UA,gC,CQzVF,U,CAcE,W,CRmVA,sB,CA6yBF,yC,CUrpCE,+C,CVupCA,qB,CAKA,U,CACA,W,CArzBA,sB,CQjVA,U,CACA,c,CAEA,wB,CRqVE,gC,CQ9UJ,sB,CRkVA,S,CQ/UC,iB,CACA,e,CRkVC,Q,CAJF,yB,CQzUA,W,CRiVA,Y,CQ/UC,S,CACA,iC,CACA,yB,CACA,iB,CACA,oB,CACA,kB,CACA,4B,CRiVC,Y,CACA,wB,CACA,yB,CQ9UA,sB,CACA,c,CACA,qB,CRgVE,iB,CACA,a,CACA,6B,CQ9UD,W,CACA,gC,CAIA,gB,CRyUC,6B,CAAA,6B,CQjWJ,qB,CA6BG,oB,CR6UC,2C,CQ3UD,Y,CRuUC,iB,CQtWJ,W,CRwWE,U,CQxWF,iD,CA0CC,mC,CACC,a,CRsUA,2B,CQpUA,c,CRgUA,iB,CQ7WF,Y,CAmDG,W,CRmUD,qC,CALA,c,CASA,qC,CQ5TA,e,CR8TA,yB,CACE,Y,CACA,oC,CQ5TD,Y,CACA,iB,CACA,O,CR8TG,Q,CACA,c,CACA,0C,CQ5TF,c,CR8TI,c,CALA,iB,CASA,0D,CQzTH,iB,CACA,Q,CACA,O,CACA,c,CACA,U,CACA,oB,CACA,uB,CACA,kB,CACA,uB,CACA,iB,CRqTD,e,CQ/YJ,W,CAgGG,c,CRwTC,sC,CQtTD,iB,CACA,U,CACA,U,CRkTD,U,CQtZF,Q,CA2GG,c,CRoTD,sC,CQlTC,Y,CACA,iB,CRoTC,Q,CACA,c,CACA,4C,CACE,c,CALJ,c,CQtSD,mD,CA1HD,U,CRyaE,yBACE,+B,CALF,Y,CQraF,6B,CRuaE,iBAOA,oC,CACE,yB,CAIJ,mC,CALA,e,CASA,a,CWzcC,U,CX2cC,iB,CALA,c,CAOA,0B,CWtcA,oB,CXwcA,sB,CWtcA,e,CXwcE,U,CACA,mB,CACA,4B,CWrcD,Y,CACA,W,CACA,gB,CACA,c,CACA,kB,CXicD,uB,CWtdF,wB,CA2BE,oB,CXocA,+B,CWlcA,Q,CACA,W,CXocE,M,CACA,iB,CACA,2C,CW1bD,U,CACA,oB,CX4bG,U,CACA,Y,CACA,+C,CALN,c,CWpbA,8B,CX6bA,a,CASA,c,CWxbC,Y,CACA,iB,CACA,a,CACA,Q,CX4aD,a,CAKE,S,CALF,e,CWlbA,gB,CX2bA,c,CAKE,U,CACA,gB,CACA,gB,CALF,e,CAgBA,gB,CAPA,O,CYjiBC,iB,CZmiBC,W,CACA,U,CALF,oB,CYzhBA,K,CZkiBA,gB,CY/hBC,W,CACA,Y,CAEA,O,CACA,O,CACA,e,CACA,4B,CACA,oB,CZiiBC,kB,CACA,mB,CACA,uB,CALF,Y,CASA,6B,Ca1kBC,kB,CACA,kB,Cb4kBC,qB,CACA,iB,CACA,qC,CALA,U,Ca7kBF,e,CAaE,W,CbykBA,mC,CavkBA,iB,CACA,O,CbykBE,K,CACA,iB,CACA,yC,CavkBD,c,CACA,W,CACA,U,CACA,W,CACA,W,CACA,qB,CACA,kB,CbykBG,oB,CACA,U,CALN,uB,CASA,yB,CAKE,yB,CALA,sC,Cc1mBF,Y,CAWE,U,CdwmBA,+B,CctmBA,iB,CACA,c,CACA,S,CdkmBA,U,CcjnBF,gB,CAmBE,c,CdumBA,qC,CcrmBA,Y,CdumBE,iB,CACA,Y,CACA,2C,CcpmBD,U,CACA,qB,CACA,kB,CdgmBD,W,Cc5nBF,U,CAiCE,S,CdomBA,wC,CclmBA,iB,CACA,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CACA,iB,CdomBE,c,CACA,U,CACA,8C,CACE,kB,CALN,0B,CASA,gC,CA3CA,yB,CezlBC,kB,CACA,kB,CfsoBC,qB,CACA,iB,CACA,uC,CenoBA,iB,CACA,e,CACA,W,CACA,U,CACA,e,CACA,kB,Cf+nBA,4B,Ce7oBF,gB,CAmBE,c,CfmoBA,sC,CejoBA,iB,CfmoBE,Y,CACA,oB,CACA,2C,CejoBD,U,CACA,oB,Cf6nBD,S,CevpBF,sB,CAiCG,c,Cf+nBD,8C,CACE,Y,CACA,sD,Ce7nBA,U,CACA,oB,CfynBA,S,Ce/pBJ,W,CA2CI,sB,Cf6nBA,oD,CALF,U,CenqBF,oB,CAmDE,Q,CfynBA,sC,CevnBA,iB,CACA,U,CfynBE,S,CACA,iB,CACA,4C,CevnBD,c,CACA,W,CACA,U,CACA,W,CACA,W,CACA,qB,CACA,kB,CfynBG,oB,CACA,U,CALN,uB,CASA,uB,CAyBA,mC,CA0CA,8B,CgB5wBC,kB,CACA,kB,CACA,qB,ChB2sBC,iB,CACA,yB,CACA,oC,CACE,Y,CALF,U,CgB9sBF,sC,CCGA,kD,CCHA,6C,CCOA,mC,CAAA,oC,CCOA,sC,CCkBA,yC,CLlBE,a,ChBysBA,6B,CACE,W,CACA,mC,CA0BA,+C,CgBjuBD,U,CACA,oB,CACA,c,CACA,iB,CACA,W,ChBysBG,U,CACA,qB,CACA,yC,CiB9tBN,qD,CjBiyBM,gD,CAxEN,oB,CAeE,gD,CiB/tBA,Y,CjBiuBE,U,CALF,iB,CASA,yC,CACE,W,CAWF,yC,CiBztBA,iB,CACA,U,CjB2tBE,S,CACA,iB,CACA,+C,CiBztBD,c,CACA,W,CACA,U,CACA,W,CACA,W,CACA,qB,CACA,kB,CjB2tBG,oB,CACA,U,CALN,uB,CAeE,2C,CACE,Y,CALF,U,CASA,oC,CACE,W,CACA,0C,CkB1wBD,U,CACA,oB,CACA,c,CACA,iB,CACA,W,ClB4wBG,U,CACA,qB,CAKN,qB,CsB7vBC,kB,CACA,kB,CACA,qB,CtB+vBC,iB,CACA,e,CACA,2B,CsB5vBA,kB,CACA,iB,CtB8vBE,Y,CACA,oB,CACA,gC,CsB5vBD,U,CACA,oB,CtB8vBG,sB,CALA,c,CAOA,oC,CALA,S,CAOA,sC,CALJ,S,CsB7wBF,wC,CA+BG,S,CtBuvBD,mC,CACE,oB,CACA,Y,CACA,2C,CsBrvBA,U,CACA,oB,CACA,S,CtBuvBE,W,CACA,sB,CACA,+C,CsBrvBD,S,CACA,e,CACA,kB,CACA,mB,CtBuvBG,W,CACA,c,CALA,iD,CsBhyBR,gB,CAmDM,a,CtBgvBA,mD,CsBnyBN,iB,CtBqyBM,mB,CAOA,iD,CALA,W,CAOA,mD,CsBhvBD,S,CtBkvBC,qD,CsBhvBD,U,CtB4uBH,U,CsB5yBF,oB,CAuEI,Q,CtB8uBF,8C,CsB5uBE,Q,CACA,c,CtBwuBF,U,CsBlzBF,oB,CtBozBE,c,CAOA,8C,CsBvuBA,4B,CtByuBA,2B,CsBvuBA,iB,CACA,W,CtByuBE,S,CACA,iB,CACA,iC,CsBvuBD,c,CACA,W,CACA,U,CACA,W,CACA,W,CACA,wB,CACA,kB,CtByuBG,oB,CACA,U,CALN,uB,CAqIA,sC,CA2CA,sC,CAvKA,2B,CAgEA,uB,CmB76BC,kB,CACA,kB,CACA,qB,CnB+2BC,iB,CACA,yB,CACA,iC,CmB72BA,Y,CACA,U,CnB+2BE,c,CALF,gB,CAGA,wC,CmBv3BF,U,CAoBE,c,CnB42BA,sC,CALA,e,CmB33BF,0B,CAyBE,kB,CnB22BA,kC,CmBz2BA,Y,CACA,iB,CACA,U,CnB22BE,e,CALF,yB,CASA,sC,CmBp2BA,U,CnBs2BA,iC,CACE,W,CACA,uC,CmBp2BD,U,CACA,oB,CACA,c,CACA,iB,CACA,W,CnBs2BG,U,CALA,qB,CAOA,6C,CALA,oB,CAOA,8C,CALJ,U,CmBr5BF,+C,CA+DE,a,CnB+1BA,iC,CmB71BA,iB,CACA,U,CnB+1BE,S,CACA,iB,CACA,uC,CmB71BD,c,CACA,W,CACA,U,CACA,W,CACA,W,CACA,qB,CACA,kB,CnB+1BG,oB,CACA,U,CALN,uB,CAeE,oC,CoBt6BA,U,CpBk6BA,iB,CoB36BF,U,CAaE,kB,CpBu6BA,yC,CoBr6BA,Y,CpBi6BA,U,CoBh7BF,c,CAmBE,gB,CpBs6BA,oC,CACE,Y,CALF,U,CASA,+B,CACE,a,CAWA,mC,CAVA,qC,CoBt5BD,U,CACA,oB,CAEA,iB,CACA,W,CpBk6BG,U,CALA,qB,CAXF,qC,CoB15BF,uB,CpBk6BA,6B,CACE,W,CACA,mC,CoB95BD,c,CpBs6BG,yC,CALA,oB,CAOA,0C,CoB55BF,U,CpBw5BE,0C,CoBh9BN,e,CA4DI,yB,CpBu5BE,gD,CoBn9BN,e,CAgEI,kB,CpBs5BE,2C,CoBt9BN,W,CAoEI,gB,CpB25BE,yC,CACE,W,CACA,qB,CALR,gB,CASE,mD,CuBn/BF,Y,CAWE,U,CvBi/BA,4C,CuB/+BA,iB,CACA,c,CACA,S,CvB2+BA,U,CuB1/BF,gB,CAmBE,c,CvBg/BA,kD,CuB9+BA,Y,CvBg/BE,iB,CACA,Y,CACA,wD,CA2CA,wD,CuBxhCD,U,CACA,qB,CACA,kB,CvBy+BD,W,CuBrgCF,U,CAiCE,S,CvB6+BA,qD,CuB3+BA,iB,CACA,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CACA,iB,CvB6+BE,c,CACA,U,CACA,2D,CA2CA,2D,CA1CE,kB,CALN,0B,CASE,mD,CwB9hCF,Y,CAWE,U,CxB4hCA,4C,CwB1hCA,iB,CACA,c,CACA,S,CxBshCA,U,CwBriCF,gB,CAmBE,c,CxB2hCA,kD,CwBzhCA,Y,CxB2hCE,iB,CACA,Y,CAQF,qD,CwBthCA,iB,CACA,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CACA,iB,CxBwhCE,c,CACA,U,CAMJ,0B,CA+DA,0B,CyBxnCC,kB,CACA,qB,CzB2nCC,iB,CACA,yB,CApEF,0B,CqBtiCC,oB,CrB4iCC,U,CACA,c,CACA,uC,CqBtiCA,Y,CACA,e,CACA,U,CACA,iB,CACA,kB,CrBwiCE,yB,CALF,kB,CASA,wC,CqBriCY,sC,CACZ,oB,CACA,W,CrBsiCE,kB,CALF,c,CqBzjCF,+C,CAAU,6C,CA8BR,U,CrBoiCA,sC,CALA,e,CASA,gC,CqBhiCA,uB,CACA,Y,CrB4hCA,c,CqBnkCF,e,CA2CE,oB,CrBiiCA,wC,CqB5kCF,6C,CrB6kCI,iB,CACA,4C,CqB/hCD,oB,CACA,U,CACA,sB,CACA,W,CACA,oB,CrBiiCG,kB,CACA,c,CALJ,kD,CqBhlCF,oB,CA2DE,0B,CrB8hCA,yC,CqB5hCA,iB,CACA,kB,CACA,kB,CACA,wB,CACA,iB,CACA,W,CACA,gB,CrB8hCE,iB,CACA,c,CACA,+C,CACE,kB,CALN,0B,CASA,0B,CyBznCC,kB,CzB+nCC,uC,CyBznCA,W,CzBqnCA,U,CyB9nCF,4B,CAaE,e,CzB0nCA,gC,CACE,W,CACA,sC,CyBxnCD,U,CACA,oB,CACA,qB,CzB0nCG,W,CACA,U,CALA,6C,CyBzoCN,c,CAyBI,iB,CACY,4C,CzBwnCV,6C,CyBvnCF,e,CACA,Q,CzBynCI,U,CACA,S,CALR,W,CASA,2B,CU1pCE,iB,CACA,Q,CACA,a,CV4pCA,U,CALF,Y,CU7pCA,iB,CAYa,uC,CV0pCb,qC,CU1pCa,sC,CACV,S,CV2pCD,iC,CANF,yB,CUhpCC,wB,CV0pCD,yBANA,2B,CUtqCA,cVgrCA,yC,CUppCE,sB,CACA,kC,CACA,0B,CACA,U,CV0pCA,iB","file":"custom.sf.css","sourcesContent":[".dropdown-menu {\n  z-index: 10000;\n  opacity: 0.9;\n  margin-top: 7px;\n  background-color: rgba(255, 255, 255, 0.96);\n  box-shadow: 1px 1px 11px 3px black;\n  border: inherit;\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding: 0;\n  border-radius: 3px;\n  background: white; }\n  .dropdown-menu.hidden {\n    visibility: hidden;\n    opacity: 0; }\n  .dropdown-menu ul {\n    overflow-x: hidden;\n    overflow-y: auto;\n    max-height: 300px; }\n  .dropdown-menu li {\n    position: relative;\n    vertical-align: baseline;\n    display: inherit !important;\n    padding: 8px 16px 8px 8px;\n    min-width: 110px;\n    border-bottom: 1px dashed darkgray;\n    font-size: 16px;\n    cursor: pointer;\n    color: black; }\n    .dropdown-menu li > * {\n      pointer-events: none; }\n    .dropdown-menu li:hover {\n      background: lightgray; }\n\ndrop-down.dropdown-menu drop-down {\n  opacity: 1; }\n\n.ground-backdrop {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.4);\n  z-index: 10000;\n  visibility: hidden;\n  opacity: 0;\n  transition-duration: .2s; }\n  .ground-backdrop.show {\n    opacity: 1;\n    visibility: visible; }\n\nul li .has-deep {\n  top: 11px;\n  position: absolute;\n  right: 5px; }\n\ndrop-down > .first {\n  display: block;\n  padding: 5px 10px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 16px;\n  text-transform: capitalize;\n  letter-spacing: 1px;\n  color: white;\n  background: #ba2f63;\n  box-shadow: 0 0 5px #d12867; }\n\ndrop-down ul {\n  margin: 0;\n  padding: 0; }\n  drop-down ul li a {\n    display: flex; }\n    drop-down ul li a div {\n      padding-left: 5px; }\n  drop-down ul .dropdown-icon {\n    padding-right: 5px;\n    float: left;\n    align-self: center; }\n  drop-down ul li.disabled, drop-down ul li.disabled:hover {\n    cursor: default !important;\n    background: #888; }\n\n\nbody sketch-page > .panels sketch-panel-bottom {\n  backdrop-filter: blur(1px); }\n\nsketch-page > .panels sketch-panel-bottom {\n  position: absolute;\n  left: 50%;\n  width: calc(100% - 200px - 240px - 80px);\n  margin-left: -20px;\n  bottom: 0;\n  transform: translate(-50%, 90px);\n  transition: 0.3s ease-out transform;\n  display: flex;\n  background: #00000085;\n  align-items: center; }\n  sketch-page > .panels sketch-panel-bottom .content {\n    visibility: hidden;\n    justify-content: center;\n    text-align: center;\n    height: 80px;\n    width: 100%;\n    padding: 10px;\n    color: #ffffff8a; }\n  sketch-page > .panels sketch-panel-bottom .opener {\n    cursor: pointer;\n    height: 10px;\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    position: absolute;\n    top: 0; }\n    sketch-page > .panels sketch-panel-bottom .opener i {\n      color: #ffffff70;\n      position: absolute;\n      top: 0;\n      font-size: 12px;\n      display: block; }\n  sketch-page > .panels sketch-panel-bottom.opened {\n    transform: translate(-50%, 0); }\n    sketch-page > .panels sketch-panel-bottom.opened .content {\n      visibility: visible; }\n\n\nbody sketch-page > .panels sketch-panel-left {\n  backdrop-filter: blur(1px); }\n\nsketch-page > .panels sketch-panel-left {\n  position: absolute;\n  display: none;\n  left: 0;\n  width: 200px;\n  height: 100%;\n  transform: translate(-190px, 0);\n  transition: 0.3s ease-out transform;\n  background: #00000085;\n  align-items: center; }\n  sketch-page > .panels sketch-panel-left .content {\n    visibility: hidden; }\n  sketch-page > .panels sketch-panel-left .opener {\n    cursor: pointer;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: 10px 0 10px 10px;\n    position: absolute;\n    right: 0; }\n    sketch-page > .panels sketch-panel-left .opener i {\n      color: #ffffff70;\n      position: absolute;\n      right: 0;\n      font-size: 12px;\n      display: block; }\n  sketch-page > .panels sketch-panel-left.opened {\n    transform: translate(0px, 0); }\n    sketch-page > .panels sketch-panel-left.opened .content {\n      visibility: visible; }\n\n\nbody sketch-page > .panels sketch-panel-right {\n  backdrop-filter: blur(8px); }\n\nsketch-page > .panels sketch-panel-right {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 240px;\n  height: calc(100% - 200px);\n  transform: translate(230px, 0);\n  transition: 0.3s ease-out transform;\n  display: flex;\n  background: #00000085;\n  align-items: center; }\n  sketch-page > .panels sketch-panel-right .content {\n    visibility: hidden;\n    word-break: break-word;\n    width: 100%;\n    top: 0;\n    position: absolute;\n    padding: 6px 0;\n    color: #ffffff8a; }\n    sketch-page > .panels sketch-panel-right .content .panel-title {\n      color: white;\n      font-size: 18px;\n      font-weight: bold;\n      text-align: center; }\n    sketch-page > .panels sketch-panel-right .content .default-field {\n      border-bottom: 1px dashed #ffffff2e; }\n    sketch-page > .panels sketch-panel-right .content .field {\n      border-top: 1px dashed #ffffff2e;\n      margin-top: 4px;\n      padding-top: 2px;\n      padding-left: 5px; }\n    sketch-page > .panels sketch-panel-right .content .field > .name {\n      color: white; }\n    sketch-page > .panels sketch-panel-right .content input, sketch-page > .panels sketch-panel-right .content textarea {\n      background: rgba(0, 0, 0, 0.63);\n      color: white;\n      border: none;\n      outline: none;\n      padding: 4px;\n      width: calc(100% - 12px);\n      border-radius: 10px; }\n  sketch-page > .panels sketch-panel-right .opener {\n    cursor: pointer;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: 10px 10px 10px 0;\n    position: absolute;\n    left: 0; }\n    sketch-page > .panels sketch-panel-right .opener i {\n      color: #ffffff70;\n      position: absolute;\n      left: 0;\n      font-size: 12px;\n      display: block; }\n  sketch-page > .panels sketch-panel-right.hide {\n    display: none; }\n  sketch-page > .panels sketch-panel-right.opened {\n    transform: translate(0px, 0); }\n    sketch-page > .panels sketch-panel-right.opened .content {\n      visibility: visible; }\n\n\n.notify-base {\n  font-weight: bold;\n  padding: 6px 18px 6px 14px;\n  color: #222;\n  background-color: rgba(255, 255, 255, 0.97);\n  border: 1px solid;\n  border-color: rgba(255, 255, 255, 0.97);\n  box-shadow: 0 0 7px 0px rgba(255, 255, 255, 0.97);\n  border-radius: 4px;\n  min-width: 51%;\n  white-space: nowrap;\n  position: relative;\n  max-width: 100%;\n  margin: 10px 10px 0 10px;\n  display: flex;\n  align-items: center; }\n  .notify-base span {\n    white-space: pre-line;\n    margin-right: 5px; }\n  .notify-base button {\n    outline: none; }\n    .notify-base button.close {\n      appearance: none;\n      padding: 0;\n      cursor: pointer;\n      background: 0 0;\n      border: 0;\n      width: inherit; }\n  .notify-base .close {\n    float: right;\n    font-size: 23px;\n    font-weight: 700;\n    line-height: 0.8;\n    right: 6px;\n    position: absolute;\n    color: #000;\n    text-shadow: 0 1px 0 #fff;\n    opacity: .2; }\n\n.notify-container {\n  max-width: 95%;\n  position: fixed;\n  z-index: 9999;\n  display: grid; }\n  .notify-container.right-top {\n    right: 10px;\n    top: 0; }\n    .notify-container.right-top .notify-base {\n      float: right;\n      margin: 10px 0 0 0; }\n  .notify-container.left-top {\n    left: 0;\n    top: 0; }\n    .notify-container.left-top .notify-base {\n      float: left;\n      margin: 10px 0 0 10px; }\n\n.notify-red {\n  color: #B94A48;\n  background-color: rgba(242, 222, 222, 0.97);\n  border-color: #EED3D7;\n  box-shadow: 0 0 5px 0px #EED3D7; }\n\n.notify-yellow {\n  color: #C09853;\n  background-color: rgba(252, 248, 227, 0.97);\n  border-color: #FBEED5;\n  box-shadow: 0 0 5px 0px #FBEED5; }\n\n.notify-blue {\n  color: #3A87AD;\n  background-color: rgba(217, 237, 247, 0.97);\n  border-color: #BCE8F1;\n  box-shadow: 0 0 5px 0px #BCE8F1; }\n\n.notify-green {\n  color: #468847;\n  background-color: rgba(223, 240, 216, 0.97);\n  border-color: #D6E9C6;\n  box-shadow: 0 0 5px 0px #D6E9C6; }\n\n\nsf-m[name=\"loading\"] {\n  display: none;\n  background: #000000ba;\n  pointer-events: none;\n  padding: 7px 15px;\n  border-radius: 20px;\n  box-shadow: 0 0 11px white;\n  position: fixed;\n  top: 60px;\n  color: white;\n  right: 10px;\n  z-index: 100; }\n  sf-m[name=\"loading\"].show {\n    display: block; }\n  sf-m[name=\"loading\"] .icon {\n    padding-right: 5px; }\n\n\nsf-m.modal {\n  grid-template-columns: auto minmax(0, 1fr) auto;\n  display: none;\n  position: fixed;\n  z-index: 1001;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  box-sizing: border-box;\n  grid-template-areas: \"top-start top top-end\"\r \"center-start center center-end\"\r \"bottom-start bottom-center bottom-end\"\r \"gap gap gap\";\n  grid-template-rows: auto auto auto .625em;\n  height: 100%;\n  padding: .625em .625em 0;\n  overflow-x: hidden;\n  background: #00000000;\n  transition: background 0.3 linear; }\n  sf-m.modal.show {\n    display: grid;\n    background: #00000060; }\n    sf-m.modal.show .modal-dialog {\n      opacity: 1; }\n  sf-m.modal .modal-dialog {\n    display: grid;\n    transition: opacity;\n    opacity: 0;\n    grid-column: 2;\n    grid-row: 2;\n    align-self: center;\n    justify-self: center;\n    position: relative;\n    box-sizing: border-box;\n    max-width: 100%; }\n\n\nsf-m[name=\"tooltip\"] {\n  visibility: hidden;\n  background: #000000da;\n  pointer-events: none;\n  padding: 2px 8px;\n  border-radius: 5px;\n  box-shadow: 0 0 2px white;\n  position: fixed;\n  top: 15px;\n  left: 10px;\n  color: white;\n  opacity: 0;\n  z-index: 1;\n  transition: 0.3s ease-in opacity; }\n  sf-m[name=\"tooltip\"] .desc {\n    white-space: pre-wrap; }\n  sf-m[name=\"tooltip\"].show {\n    visibility: visible;\n    opacity: 1; }\n  sf-m[name=\"tooltip\"] .icon {\n    padding-right: 5px; }\n\n\nbody > .background {\n  position: fixed;\n  top: 0;\n  left: 0; }\n  body > .background .img {\n    position: fixed;\n    opacity: 0.8;\n    background-repeat: repeat;\n    background-size: 75%;\n    box-shadow: inset 0 0 11rem 0px black;\n    width: 100%;\n    height: 100%; }\n  body > .background .tile {\n    opacity: 0.8;\n    position: fixed;\n    background: url(\"/assets/img/background/tile.png\");\n    background-repeat: repeat;\n    background-size: 100px;\n    width: 100%;\n    box-shadow: inset 0 0 11rem 0px black;\n    height: 100%;\n    filter: brightness(28%); }\n\nvw-ground {\n  position: absolute;\n  overflow: hidden;\n  display: block;\n  top: 50px;\n  height: calc(100vh - 50px);\n  width: 100vw; }\n\nbody > .header {\n  z-index: 1;\n  backdrop-filter: blur(1px);\n  position: relative;\n  background: #00000085;\n  align-items: center;\n  border-bottom: 1px solid black;\n  display: flex;\n  box-shadow: 0 0 8px 0 black; }\n  body > .header .header-left {\n    border-right: 2px solid;\n    font-size: 24px;\n    padding: 0 15px 0 18px;\n    text-align: center;\n    display: table; }\n    body > .header .header-left img {\n      height: 50px;\n      filter: drop-shadow(0 0 2px white);\n      display: inline-block;\n      vertical-align: middle;\n      margin-right: 8px; }\n    body > .header .header-left div {\n      vertical-align: middle;\n      display: inline-block; }\n    body > .header .header-left .menu-button-hint {\n      display: none;\n      position: absolute;\n      bottom: -3px;\n      left: 100px; }\n    body > .header .header-left:hover .menu-button-hint, body > .header .header-left:hover div {\n      color: #bdbdbd; }\n  body > .header .header-center {\n    font-size: 18px;\n    text-align: center;\n    padding: 10px;\n    height: 24px; }\n  body > .header.sketch-mode .header-left {\n    cursor: pointer; }\n    body > .header.sketch-mode .header-left i.menu-button-hint {\n      display: block; }\n  body > .header.sketch-mode .header-menu {\n    display: inherit; }\n  body > .header .header-menu {\n    display: none; }\n    body > .header .header-menu .item-list {\n      display: flex;\n      position: absolute;\n      right: 0px;\n      top: 12px;\n      font-size: 22px; }\n      body > .header .header-menu .item-list .item {\n        padding: 0 10px;\n        cursor: pointer;\n        position: relative; }\n        body > .header .header-menu .item-list .item.active {\n          color: white; }\n        body > .header .header-menu .item-list .item .module-counter {\n          position: absolute;\n          bottom: 0;\n          right: 0;\n          font-size: 10px;\n          color: black;\n          background: #ffffffde;\n          box-shadow: 0 0 6px white;\n          border-radius: 100%;\n          padding: 2px 3px 2px 4px;\n          text-align: center;\n          font-weight: bold;\n          height: 12px;\n          min-width: 10px; }\n    body > .header .header-menu .header-zoom {\n      position: absolute;\n      right: 10px;\n      color: white;\n      opacity: 0.8;\n      top: 50px;\n      font-size: 22px; }\n  body > .header .header-center .item-list {\n    display: flex;\n    position: absolute;\n    top: 12px;\n    font-size: 22px; }\n    body > .header .header-center .item-list .item {\n      padding: 0 10px;\n      cursor: pointer; }\n      body > .header .header-center .item-list .item.active {\n        color: white; }\n  @media (max-width: 900px) {\n    body > .header .header-center div {\n      display: none; }\n    body > .header sf-m[name=\"modal\"] {\n      overflow: scroll; } }\n  body > .header .large-header vw-ground {\n    height: calc(100vh - 86px); }\n  body > .header .large-header .header .header-left div {\n    display: block; }\n\n.header-left-menu .dropdown-menu li {\n  min-width: 170px; }\n\n\n.welcome-text {\n  color: white;\n  text-align: center;\n  padding: 0 20px; }\n  .welcome-text > .description {\n    white-space: pre-line; }\n  .welcome-text > .content {\n    max-width: 750px;\n    width: 90vw;\n    display: inline-flex; }\n    .welcome-text > .content .item {\n      padding: 10px;\n      width: 200px;\n      margin: 10px 14px;\n      cursor: pointer;\n      border-radius: 10px;\n      box-shadow: 0px 0px 3px white;\n      border: 1px solid #c5c5c5;\n      background: #0000008a; }\n  .welcome-text .available-engine {\n    bottom: 0;\n    width: 100vw;\n    left: 0;\n    position: absolute; }\n    .welcome-text .available-engine .list .item {\n      width: 50px;\n      display: inline-block;\n      color: white;\n      margin: 0 5px; }\n      .welcome-text .available-engine .list .item img {\n        max-width: 50px;\n        filter: brightness(0) invert(1); }\n\n.welcome-left {\n  display: grid;\n  position: absolute;\n  color: #a0a0a0;\n  bottom: 0;\n  left: 10px; }\n  .welcome-left i {\n    margin-right: 5px; }\n\n.welcome-right {\n  display: grid;\n  position: absolute;\n  color: #a0a0a0;\n  bottom: 0;\n  right: 10px;\n  text-align: right; }\n  .welcome-right i {\n    margin-left: 5px; }\n\n\nvw-page {\n  position: absolute;\n  height: 100%;\n  width: 100%; }\n  vw-page.page-current {\n    top: 0; }\n\n.mini-blackprint {\n  width: 240px;\n  height: 190px;\n  position: absolute;\n  top: 5px;\n  right: 0;\n  overflow: hidden;\n  box-shadow: 0 0 6px #ffffff6b;\n  background: #ffffff40;\n  border-radius: 10px;\n  pointer-events: none; }\n  .mini-blackprint.hidden {\n    display: none; }\n\n\nsf-m[name=\"custom-node-editor\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative; }\n  sf-m[name=\"custom-node-editor\"] .editor {\n    width: 80vw;\n    max-width: 900px;\n    height: 90vh; }\n  sf-m[name=\"custom-node-editor\"] .menu {\n    position: absolute;\n    right: 0px;\n    top: 0;\n    text-align: center; }\n    sf-m[name=\"custom-node-editor\"] .menu .item {\n      cursor: pointer;\n      padding: 5px;\n      width: 20px;\n      height: 20px;\n      margin: 10px;\n      border: 1px solid #000;\n      border-radius: 20px;\n      background: #000000a8;\n      color: #fff;\n      box-shadow: 0 0 5px black; }\n\n\nsf-m[name=\"modal-dev-mode\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"modal-dev-mode\"] .description {\n    padding: 10px;\n    color: white; }\n  sf-m[name=\"modal-dev-mode\"] .note {\n    text-align: center;\n    font-size: 12px;\n    padding: 0;\n    color: gray;\n    margin-top: -10px;\n    cursor: pointer; }\n  sf-m[name=\"modal-dev-mode\"] .text-input {\n    padding: 10px;\n    position: relative;\n    display: flex; }\n    sf-m[name=\"modal-dev-mode\"] .text-input input {\n      width: 100%;\n      border: 1px solid black;\n      background: #161616;\n      padding: 5px;\n      color: white;\n      outline: none; }\n  sf-m[name=\"modal-dev-mode\"] .button-import {\n    position: relative;\n    border-radius: 10px;\n    background: #125c15;\n    border: 1px solid #65a122;\n    margin: 0 auto 5px auto;\n    width: 120px;\n    padding: 7px 10px;\n    text-align: center;\n    cursor: pointer;\n    color: white; }\n    sf-m[name=\"modal-dev-mode\"] .button-import:hover {\n      background: #65a122;\n      box-shadow: 0 0 9px #c6ebbd; }\n\n\nsf-m[name=\"environment-variables\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative; }\n  sf-m[name=\"environment-variables\"] .title {\n    text-align: center;\n    min-width: 300px;\n    padding: 5px;\n    color: #fff;\n    font-weight: bold;\n    letter-spacing: 1px;\n    border-bottom: 1px solid #000;\n    background: #0009;\n    cursor: default; }\n  sf-m[name=\"environment-variables\"] .head {\n    text-align: center;\n    display: flex;\n    background: #00000070; }\n    sf-m[name=\"environment-variables\"] .head .row {\n      color: #fff;\n      display: inline-block;\n      width: 50%;\n      outline: 1px solid #000;\n      cursor: default; }\n  sf-m[name=\"environment-variables\"] .content .row {\n    display: flex; }\n    sf-m[name=\"environment-variables\"] .content .row .column {\n      color: #fff;\n      display: inline-block;\n      width: 50%;\n      padding: 8px;\n      outline: 1px solid #000; }\n    sf-m[name=\"environment-variables\"] .content .row input {\n      color: gray;\n      background: #00000094;\n      border: none; }\n  sf-m[name=\"environment-variables\"] .menu {\n    position: absolute;\n    right: -5px;\n    top: -10px;\n    text-align: center; }\n    sf-m[name=\"environment-variables\"] .menu .item {\n      cursor: pointer;\n      padding: 5px;\n      width: 20px;\n      height: 20px;\n      margin: 10px;\n      border: 1px solid #000;\n      border-radius: 20px;\n      background: #000000a8;\n      color: #fff;\n      box-shadow: 0 0 5px black; }\n\n\nsf-m[name=\"example-list\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"example-list\"] .description {\n    padding: 10px;\n    color: white; }\n    sf-m[name=\"example-list\"] .description a {\n      color: skyblue; }\n  sf-m[name=\"example-list\"] .list {\n    padding: 5px; }\n    sf-m[name=\"example-list\"] .list .item {\n      color: #fff;\n      background: #0000009e;\n      cursor: pointer;\n      border-radius: 4px;\n      padding: 5px;\n      margin: 5px;\n      border: 1px solid #000; }\n      sf-m[name=\"example-list\"] .list .item:hover {\n        background: #000000de; }\n\n\nsf-m[name=\"module-example-list-deep\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"module-example-list-deep\"] .description {\n    padding: 10px;\n    color: white;\n    margin-right: 40px; }\n    sf-m[name=\"module-example-list-deep\"] .description a {\n      color: skyblue; }\n  sf-m[name=\"module-example-list-deep\"] .list {\n    padding: 5px; }\n    sf-m[name=\"module-example-list-deep\"] .list .item {\n      color: #fff;\n      background: #0000009e;\n      cursor: pointer;\n      border-radius: 4px;\n      padding: 5px;\n      margin: 5px;\n      border: 1px solid #000; }\n      sf-m[name=\"module-example-list-deep\"] .list .item:hover {\n        background: #000000de; }\n  sf-m[name=\"module-example-list-deep\"] .menu {\n    position: absolute;\n    right: -5px;\n    top: -10px;\n    text-align: center; }\n    sf-m[name=\"module-example-list-deep\"] .menu .item {\n      cursor: pointer;\n      padding: 5px;\n      width: 20px;\n      height: 20px;\n      margin: 10px;\n      border: 1px solid #000;\n      border-radius: 20px;\n      background: #000000a8;\n      color: #fff;\n      box-shadow: 0 0 5px black; }\n\n\nsf-m[name=\"module-example-list\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"module-example-list\"] .description {\n    padding: 10px;\n    color: white; }\n    sf-m[name=\"module-example-list\"] .description a {\n      color: skyblue; }\n  sf-m[name=\"module-example-list\"] .list {\n    padding: 5px; }\n    sf-m[name=\"module-example-list\"] .list .item {\n      color: #fff;\n      background: #0000009e;\n      cursor: pointer;\n      border-radius: 4px;\n      padding: 5px;\n      margin: 5px;\n      border: 1px solid #000; }\n      sf-m[name=\"module-example-list\"] .list .item:hover {\n        background: #000000de; }\n\n\nsf-m[name=\"module-url\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  min-width: 700px; }\n  sf-m[name=\"module-url\"] .head {\n    letter-spacing: 1px;\n    text-align: center;\n    display: flex;\n    background: #00000040; }\n    sf-m[name=\"module-url\"] .head .row {\n      color: #fff;\n      display: inline-block;\n      outline: 1px solid #000;\n      cursor: default; }\n      sf-m[name=\"module-url\"] .head .row.url {\n        width: 58%; }\n      sf-m[name=\"module-url\"] .head .row.nodes {\n        width: 19%; }\n      sf-m[name=\"module-url\"] .head .row.actions {\n        width: 22%; }\n  sf-m[name=\"module-url\"] .content .row {\n    background: #00000094;\n    display: flex; }\n    sf-m[name=\"module-url\"] .content .row .column {\n      color: #fff;\n      display: inline-block;\n      width: 50%;\n      padding: 8px;\n      outline: 1px solid #000; }\n      sf-m[name=\"module-url\"] .content .row .column.url {\n        width: 60%;\n        overflow: hidden;\n        white-space: nowrap;\n        margin-bottom: -10px;\n        height: 20px;\n        font-size: 14px; }\n        sf-m[name=\"module-url\"] .content .row .column.url b {\n          margin-right: 4px;\n          color: #696969; }\n        sf-m[name=\"module-url\"] .content .row .column.url div {\n          overflow-x: scroll;\n          padding-bottom: 10px; }\n      sf-m[name=\"module-url\"] .content .row .column.nodes {\n        width: 17.5%; }\n      sf-m[name=\"module-url\"] .content .row .column.actions {\n        width: 22%; }\n      sf-m[name=\"module-url\"] .content .row .column.url-input {\n        width: 100%;\n        color: gray;\n        background: #00000094;\n        border: none; }\n  sf-m[name=\"module-url\"] .content .actions button {\n    border: 0;\n    background: none;\n    color: #fff;\n    display: inline-block;\n    cursor: pointer; }\n  sf-m[name=\"module-url\"] .content .actions .cross {\n    text-decoration: line-through; }\n  sf-m[name=\"module-url\"] .menu {\n    position: absolute;\n    right: -50px;\n    top: -10px;\n    text-align: center; }\n    sf-m[name=\"module-url\"] .menu .item {\n      cursor: pointer;\n      padding: 5px;\n      width: 20px;\n      height: 20px;\n      margin: 10px;\n      border: 2px solid #456357;\n      border-radius: 20px;\n      background: #000000a8;\n      color: #fff;\n      box-shadow: 0 0 5px black; }\n\n\nsf-m[name=\"npm-package-info\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"npm-package-info\"] > .info {\n    padding: 10px;\n    color: white;\n    font-size: 12px;\n    margin-top: -20px; }\n    sf-m[name=\"npm-package-info\"] > .info a {\n      color: skyblue; }\n  sf-m[name=\"npm-package-info\"] > .description {\n    color: white;\n    padding: 0 10px; }\n  sf-m[name=\"npm-package-info\"] > .list-info {\n    margin-top: 10px;\n    border-top: 1px dashed white;\n    padding: 5px 10px 0 10px; }\n  sf-m[name=\"npm-package-info\"] > .title {\n    padding: 10px;\n    margin-right: 40px;\n    color: white;\n    font-weight: bold;\n    text-decoration: underline; }\n    sf-m[name=\"npm-package-info\"] > .title a {\n      color: skyblue; }\n  sf-m[name=\"npm-package-info\"] > .list-info {\n    color: white; }\n  sf-m[name=\"npm-package-info\"] .list {\n    padding: 5px; }\n    sf-m[name=\"npm-package-info\"] .list .item {\n      color: #fff;\n      background: #0000009e;\n      cursor: pointer;\n      border-radius: 4px;\n      padding: 5px;\n      margin: 5px;\n      border: 1px solid #000; }\n      sf-m[name=\"npm-package-info\"] .list .item:hover {\n        background: #000000de; }\n      sf-m[name=\"npm-package-info\"] .list .item.active {\n        color: gray; }\n      sf-m[name=\"npm-package-info\"] .list .item.loading {\n        color: burlywood; }\n  sf-m[name=\"npm-package-info\"] .menu {\n    position: absolute;\n    right: -5px;\n    top: -10px;\n    text-align: center; }\n    sf-m[name=\"npm-package-info\"] .menu .item {\n      cursor: pointer;\n      padding: 5px;\n      width: 20px;\n      height: 20px;\n      margin: 10px;\n      border: 1px solid #000;\n      border-radius: 20px;\n      background: #000000a8;\n      color: #fff;\n      box-shadow: 0 0 5px black; }\n\n\nsf-m[name=\"npm-packages\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"npm-packages\"] .search-info {\n    color: white;\n    text-align: center;\n    width: 100%;\n    margin-bottom: 10px; }\n  sf-m[name=\"npm-packages\"] > .mini-description {\n    padding: 10px;\n    color: white;\n    font-size: 12px;\n    margin-top: -20px; }\n  sf-m[name=\"npm-packages\"] > .description {\n    padding: 10px;\n    color: white; }\n    sf-m[name=\"npm-packages\"] > .description a {\n      color: skyblue; }\n  sf-m[name=\"npm-packages\"] .search {\n    padding: 0 5px; }\n    sf-m[name=\"npm-packages\"] .search input {\n      color: #fff;\n      background: #0000009e;\n      border-radius: 4px;\n      padding: 5px;\n      margin: 5px;\n      border: 1px solid #000;\n      width: calc(100% - 22px); }\n  sf-m[name=\"npm-packages\"] .list {\n    padding: 5px; }\n    sf-m[name=\"npm-packages\"] .list .item {\n      color: #fff;\n      background: #0000009e;\n      cursor: pointer;\n      border-radius: 4px;\n      padding: 5px;\n      margin: 5px;\n      border: 1px solid #000; }\n      sf-m[name=\"npm-packages\"] .list .item:hover {\n        background: #000000de; }\n      sf-m[name=\"npm-packages\"] .list .item.active {\n        color: gray; }\n      sf-m[name=\"npm-packages\"] .list .item .title {\n        font-weight: bold;\n        text-decoration: underline; }\n      sf-m[name=\"npm-packages\"] .list .item .description {\n        font-weight: normal;\n        padding-right: 80px; }\n      sf-m[name=\"npm-packages\"] .list .item .author {\n        float: right;\n        margin-top: -24px; }\n      sf-m[name=\"npm-packages\"] .list .item .date {\n        float: right;\n        vertical-align: middle;\n        margin-top: -20px; }\n\n\nsf-m[name=\"modal-remote-engine-connect\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"modal-remote-engine-connect\"] .description {\n    padding: 10px;\n    color: white; }\n  sf-m[name=\"modal-remote-engine-connect\"] .note {\n    text-align: center;\n    font-size: 12px;\n    padding: 0;\n    color: gray;\n    margin-top: -10px;\n    cursor: pointer; }\n  sf-m[name=\"modal-remote-engine-connect\"] .text-input {\n    padding: 10px;\n    position: relative;\n    display: flex; }\n    sf-m[name=\"modal-remote-engine-connect\"] .text-input input {\n      width: 100%;\n      border: 1px solid black;\n      background: #161616;\n      padding: 5px;\n      color: white;\n      outline: none; }\n  sf-m[name=\"modal-remote-engine-connect\"] .button-import {\n    position: relative;\n    border-radius: 10px;\n    background: #125c15;\n    border: 1px solid #65a122;\n    margin: 0 auto 5px auto;\n    width: 120px;\n    padding: 7px 10px;\n    text-align: center;\n    cursor: pointer;\n    color: white; }\n    sf-m[name=\"modal-remote-engine-connect\"] .button-import:hover {\n      background: #65a122;\n      box-shadow: 0 0 9px #c6ebbd; }\n\n\nsf-m[name=\"modal-remote-sketch-connect\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"modal-remote-sketch-connect\"] .description {\n    padding: 10px;\n    color: white; }\n  sf-m[name=\"modal-remote-sketch-connect\"] .note {\n    text-align: center;\n    font-size: 12px;\n    padding: 0;\n    color: gray;\n    margin-top: -10px;\n    cursor: pointer; }\n  sf-m[name=\"modal-remote-sketch-connect\"] .text-input {\n    padding: 10px;\n    position: relative;\n    display: flex; }\n    sf-m[name=\"modal-remote-sketch-connect\"] .text-input input {\n      width: 100%;\n      border: 1px solid black;\n      background: #161616;\n      padding: 5px;\n      color: white;\n      outline: none; }\n  sf-m[name=\"modal-remote-sketch-connect\"] .button-import {\n    position: relative;\n    border-radius: 10px;\n    background: #125c15;\n    border: 1px solid #65a122;\n    margin: 0 auto 5px auto;\n    width: 120px;\n    padding: 7px 10px;\n    text-align: center;\n    cursor: pointer;\n    color: white; }\n    sf-m[name=\"modal-remote-sketch-connect\"] .button-import:hover {\n      background: #65a122;\n      box-shadow: 0 0 9px #c6ebbd; }\n\n\nsf-m[name=\"sketch-importer\"] {\n  background: #1e1e1eab;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white;\n  color: white;\n  max-width: 80vw; }\n  sf-m[name=\"sketch-importer\"] .description {\n    padding: 10px;\n    min-width: 500px;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 10px;\n    text-decoration: underline;\n    letter-spacing: 1px; }\n    sf-m[name=\"sketch-importer\"] .description a {\n      color: skyblue; }\n  sf-m[name=\"sketch-importer\"] .info-modules, sf-m[name=\"sketch-importer\"] .info-nodes {\n    background: #000000ab;\n    padding: 7px;\n    border-radius: 10px;\n    margin: 5px 2px; }\n    sf-m[name=\"sketch-importer\"] .info-modules .title, sf-m[name=\"sketch-importer\"] .info-nodes .title {\n      color: gray; }\n  sf-m[name=\"sketch-importer\"] .info-clear {\n    margin-top: 10px; }\n    sf-m[name=\"sketch-importer\"] .info-clear .title {\n      text-align: center; }\n  sf-m[name=\"sketch-importer\"] .list {\n    list-style-type: decimal;\n    margin: 5px 0;\n    padding: 0 30px;\n    max-height: 15vh;\n    overflow: hidden auto; }\n  sf-m[name=\"sketch-importer\"] .button-clear {\n    text-align: center; }\n    sf-m[name=\"sketch-importer\"] .button-clear div {\n      display: inline-block;\n      margin: 5px;\n      border: 1px dashed #000;\n      padding: 7px;\n      background: #000000ad;\n      border-radius: 20px;\n      cursor: pointer; }\n      sf-m[name=\"sketch-importer\"] .button-clear div:hover {\n        background: #181818ad;\n        box-shadow: 0 0 9px #c6ebbd; }\n  sf-m[name=\"sketch-importer\"] .button-import {\n    position: relative;\n    border-radius: 10px;\n    background: #125c15;\n    border: 1px solid #65a122;\n    margin: 0 auto 5px auto;\n    width: 120px;\n    padding: 7px 10px;\n    text-align: center;\n    cursor: pointer; }\n    sf-m[name=\"sketch-importer\"] .button-import:hover {\n      background: #65a122;\n      box-shadow: 0 0 9px #c6ebbd; }\n\n\nsf-m[name=\"sketch-settings\"] {\n  background: #292929;\n  border-radius: 10px;\n  border: 2px solid black;\n  position: relative;\n  box-shadow: 0 0 20px 0px white; }\n  sf-m[name=\"sketch-settings\"] .description {\n    padding: 5px;\n    color: white;\n    border-bottom: 1px solid black;\n    background: #111; }\n  sf-m[name=\"sketch-settings\"] .list {\n    padding: 5px; }\n    sf-m[name=\"sketch-settings\"] .list .item {\n      color: #fff;\n      background: #0000009e;\n      border: 1px solid #000;\n      padding: 5px;\n      margin: 5px; }\n      sf-m[name=\"sketch-settings\"] .list .item .title {\n        display: inline;\n        margin-right: 10px; }\n      sf-m[name=\"sketch-settings\"] .list .item select, sf-m[name=\"sketch-settings\"] .list .item input {\n        background: black;\n        border: none;\n        color: white;\n        outline: none;\n        padding: 5px; }\n\n\nsketch-page > .bottom-message {\n  position: absolute;\n  bottom: 0;\n  color: #ababab;\n  width: 100%;\n  padding: 20px;\n  text-align: center; }\n\nsketch-page > .panels sketch-panel-left, sketch-page > .panels sketch-panel-bottom, sketch-page > .panels sketch-panel-right {\n  z-index: 1;\n  backdrop-filter: blur(1px);\n  box-shadow: 0 0 8px 0 black; }\n\n@media (max-width: 900px) {\n  sketch-page > .bottom-message {\n    display: none; } }\n\nsketch-page > sf-space[blackprint] .bg-tile {\n  background: url(\"/assets/img/background/tile.png\");\n  background-size: 100px;\n  filter: brightness(38%);\n  backface-visibility: hidden;\n  opacity: 0.5;\n  width: 100%;\n  height: 100%;\n  position: absolute; }\n\n\n\n/*# sourceMappingURL=custom.sf.css.map */","## comment, This will be used for sf-each for above element\r\n## html\r\n<drop-down class=\"dropdown-menu {{hidden}}\" style=\"\r\n    display: {{visible ? 'block' : 'none'}};\r\n    transform: translate({{ x | 0 }}px, {{ y | 0 }}px);\r\n  \">\r\n  <div class=\"first\" style=\"display: {{ !title && 'none' }}\">{{ title || '' }}</div>\r\n  <ul>\r\n    <li sf-each=\"x in options\" :class=\"{{ x.divider ? 'divider' : '' }} {{ x.disabled ? 'disabled' : '' }}\" title=\"{{ x.info || '' }}\">\r\n      {{@if x.title !== undefined:\r\n      \t{[ <a> ]} // Begin\r\n\r\n      \t// Icon on the left\r\n      \tif(x.icon !== void 0){\r\n      \t\tif(x.icon.includes('//'))\r\n      \t\t\t{[ <img class=\"dropdown-icon\" :src=\"{{x.icon}}\"> ]};\r\n      \t\telse\r\n      \t\t\t{[ <i class=\"dropdown-icon {{x.icon}}\"></i> ]};\r\n      \t}\r\n\r\n      \t// Always use { [ enclosed template ]} to avoid vulnerability\r\n      \t// like the text being parsed as HTML\r\n      \t{[ <div>{{ x.title }}</div> ]} // Content\r\n\r\n      \t// Add icon if the has deep menu\r\n      \tif(x.deep !== void 0)\r\n      \t\t{[ <i class=\"{{ root.icon.more }} has-deep\"></i> ]};\r\n\r\n      \t{[ </a> ]} // End\r\n      }}\r\n    </li>\r\n  </ul>\r\n</drop-down>\r\n\r\n## scss-global\r\n.dropdown-menu {\r\n\tz-index: 10000;\r\n\topacity: 0.9;\r\n\r\n\tmargin-top: 7px;\r\n\tbackground-color: rgba(255, 255, 255, 0.96);\r\n\tbox-shadow: 1px 1px 11px 3px black;\r\n    border: inherit;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 0;\r\n    border-radius: 3px;\r\n    background: white;\r\n\r\n    // transition: 0.3s ease-out;\r\n    // transition-property: visibility, opacity;\r\n    &.hidden{\r\n\t\tvisibility: hidden;\r\n\t\topacity: 0;\r\n    }\r\n    ul{\r\n    \toverflow-x: hidden;\r\n    \toverflow-y: auto;\r\n    \tmax-height: 300px;\r\n    }\r\n\r\n\tli {\r\n\t\tposition: relative;\r\n\t\tvertical-align: baseline;\r\n\t\tdisplay: inherit !important;\r\n\t\tpadding: 8px 16px 8px 8px;\r\n\t\tmin-width: 110px;\r\n\t\tborder-bottom: 1px dashed darkgray;\r\n\t\tfont-size: 16px;\r\n\r\n\t\t> * {\r\n\t\t\tpointer-events: none;\r\n\t\t}\r\n\r\n\t\t&:hover{\r\n\t\t\tbackground: lightgray;\r\n\t\t}\r\n\r\n\t\tcursor: pointer;\r\n    \tcolor: black;\r\n\t}\r\n}\r\n\r\ndrop-down.dropdown-menu drop-down{\r\n\topacity: 1;\r\n}\r\n\r\n.ground-backdrop{\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: rgba(0,0,0,.4);\r\n\tz-index: 10000;\r\n\tvisibility: hidden;\r\n\topacity: 0;\r\n\ttransition-duration: .2s;\r\n\r\n\t&.show{\r\n\t\topacity: 1;\r\n\t\tvisibility: visible;\r\n\t}\r\n}\r\n\r\nul li .has-deep{\r\n\ttop: 11px;\r\n\tposition: absolute;\r\n\tright: 5px;\r\n}\r\n\r\ndrop-down{\r\n\t&> .first {\r\n\t\tdisplay: block;\r\n\t\tpadding: 5px 10px;\r\n\t\ttext-align: center;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 16px;\r\n\t\ttext-transform: capitalize;\r\n\t\tletter-spacing: 1px;\r\n\t\tcolor: white;\r\n\t\tbackground: #ba2f63;\r\n\t\tbox-shadow: 0 0 5px #d12867;\r\n\t}\r\n\tul{\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\r\n\t\tli a {\r\n\t\t\tdisplay: flex;\r\n\t\t\tdiv{\r\n\t\t\t\tpadding-left: 5px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.dropdown-icon {\r\n\t\t\tpadding-right: 5px;\r\n\t\t\tfloat: left;\r\n\t\t\talign-self: center;\r\n\t\t}\r\n\r\n\t\tli.disabled, li.disabled:hover{\r\n\t\t\tcursor: default !important;\r\n\t\t\tbackground: #888;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\n// =====================================================================\r\n// ============== Model <sf-m name=\"dropdown\"></sf-m> ==================\r\n// =====================================================================\r\nvar DropDown = sf.model('dropdown', function(My){\r\n\tMy.menus = [];\r\n\tMy.onCancel = void 0;\r\n\tMy.className = '';\r\n\tMy.pendingDeepOpen = false;\r\n\tMy.pendingDeepOpen_ = 0;\r\n\r\n\tMy.icon = {\r\n\t\tmore: 'fa fa-chevron-right'\r\n\t};\r\n\r\n\t// menus: [{title, callback}, {title, deep:[{...}]}, ...]\r\n\tMy.show = function(menus, { x, y, event, element, title, className }){\r\n\t\t// Remove last dropdown if haven't been closed\r\n\t\tif(My.menus.length !== 0)\r\n\t\t\tMy.menus.splice(0);\r\n\t\telse\r\n\t\t\taddBackdrop();\r\n\r\n\t\tmenus.title = title;\r\n\r\n\t\tif(element !== void 0){\r\n\t\t\tlet rect = element.getBoundingClientRect();\r\n\t\t\tmenus.x = rect.x + 5;\r\n\t\t\tmenus.y = rect.y + rect.height;\r\n\t\t}\r\n\t\telse if(x !== void 0){\r\n\t\t\tmenus.x = x;\r\n\t\t\tmenus.y = y;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tmenus.x = event.x;\r\n\t\t\tmenus.y = event.y;\r\n\t\t\tmenus.event = event;\r\n\t\t}\r\n\r\n\t\tfor (var i = menus.length - 1; i >= 0; i--) {\r\n\t\t\tif(menus[i].hide)\r\n\t\t\t\tmenus.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tMy.className = className || '';\r\n\t\tMy.menus.push(menus);\r\n\t\treturn My;\r\n\t}\r\n\r\n\tMy.hide = function(){\r\n\t\tfor (var i = 0; i < My.menus.length; i++)\r\n\t\t\tMy.menus.getElement(i).model.deepRemove();\r\n\r\n\t\tMy.pendingDeepOpen = false;\r\n\t\tMy.pendingDeepOpen_ = 0;\r\n\t\tMy.menus.splice(0);\r\n\t\tremoveBackdrop();\r\n\r\n\t\tMy.className = '';\r\n\t}\r\n\r\n\tvar backdropCreated = false;\r\n\tfunction backdropListener(ev){\r\n\t\tif($(ev.target).parent('sf-m')[0] === sf.Window.source(My.$el))\r\n\t\t\treturn;\r\n\r\n\t\tremoveBackdrop();\r\n\r\n\t\tMy.hide();\r\n\t\tMy.onCancel && My.onCancel();\r\n\t}\r\n\r\n\tvar backdrop = $('<div class=\"ground-backdrop\"></div>');\r\n\tfunction addBackdrop(){\r\n\t\tif(backdropCreated) return;\r\n\r\n\t\tbackdrop.insertBefore(sf.Window.source(My.$el));\r\n\t\tsetTimeout(function(){\r\n\t\t\tbackdrop.addClass('show');\r\n\t\t\t$(sf.Window).on('pointerdown', backdropListener);\r\n\t\t\t$(sf.Window).once('contextmenu', ev => ev.preventDefault());\r\n\t\t\tbackdropCreated = true;\r\n\t\t}, 10);\r\n\t}\r\n\r\n\tfunction removeBackdrop(){\r\n\t\tbackdropCreated = false;\r\n\t\tbackdrop.removeClass('show');\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tbackdrop.remove();\r\n\t\t}, 200);\r\n\r\n\t\t$(sf.Window).off('pointerdown', backdropListener);\r\n\t}\r\n});\r\n\r\n// =====================================================================\r\n// ============== Component <drop-down></drop-down> ====================\r\n// =====================================================================\r\nsf.component('drop-down', {template: #this.path}, function(My, include, $item){\r\n\tMy.visible = false;\r\n\tMy.hidden = 'hidden'; // We also need to hide it before repaint\r\n\r\n\tMy.options = $item;\r\n\tMy._parent = $item._parent;\r\n\tMy.x = $item.x;\r\n\tMy.y = $item.y;\r\n\tMy.root = include('dropdown');\r\n\tMy.width = 0;\r\n\tMy.height = 0;\r\n\tMy.disabled = $item.disabled === true;\r\n\r\n\tfor (var i = $item.length - 1; i >= 0; i--) {\r\n\t\tif($item[i].hide)\r\n\t\t\t$item.splice(i, 1);\r\n\t}\r\n\r\n\t// First dropdown title\r\n\tMy.title = $item.title;\r\n\r\n\tvar currentDeepLevel, $el;\r\n\tMy.init = function(){\r\n\t\tif($item.event !== void 0){\r\n\t\t\tvar el = sf.Window.source(My.$el, $item.event);\r\n\t\t\tif(el === null) return;\r\n\t\t\t$el = $(el);\r\n\t\t}\r\n\t\telse $el = My.$el;\r\n\r\n\t\tMy.visible = true;\r\n\r\n\t\t// Check position when the element rendered\r\n\t\tvar ulElem = sf.Window.source(My.$el, $item.event).querySelector('ul');\r\n\t\t$.afterRepaint().then(function(){\r\n\t\t\tlet x = 0, y = 0;\r\n\t\t\tlet parent = My._parent;\r\n\t\t\tlet w = parent !== void 0 ? parent.width : 0;\r\n\r\n\t\t\twhile(parent !== void 0){\r\n\t\t\t\tx += parent.x;\r\n\t\t\t\ty += parent.y;\r\n\t\t\t\tparent = parent._parent;\r\n\t\t\t}\r\n\r\n\t\t\tMy.width = ulElem.offsetWidth;\r\n\t\t\tMy.height = ulElem.offsetHeight;\r\n\r\n\t\t\tif(x + My.x + My.width > sf.Window.focus.innerWidth)\r\n\t\t\t\tMy.x -= My.width + w;\r\n\r\n\t\t\tif(y + My.y + My.height > sf.Window.focus.innerHeight)\r\n\t\t\t\tMy.y -= My.height;\r\n\r\n\t\t\tMy.hidden = '';\r\n\t\t});\r\n\r\n\t\t// Find nested options and add event listener on mouse hover\r\n\t\tvar options = My.options;\r\n\t\tfor (var i = 0; i < options.length; i++) {\r\n\t\t\tlet opt = options[i];\r\n\t\t\tconst elem = $(options.getElements(i));\r\n\r\n\t\t\tif(opt.deep !== void 0){\r\n\t\t\t\tfunction openDeep(ev){\r\n\t\t\t\t\tif(currentDeepLevel !== void 0)\r\n\t\t\t\t\t\tMy.deepRemove();\r\n\r\n\t\t\t\t\tif(opt.hover !== void 0)\r\n\t\t\t\t\t\topt.hover.apply(opt.context, opt.args);\r\n\r\n\t\t\t\t\tvar deep = opt.deep;\r\n\t\t\t\t\tdeep.event = ev;\r\n\t\t\t\t\tdeep._parent = My;\r\n\r\n\t\t\t\t\t// Use the cache instead\r\n\t\t\t\t\tif(deep.el !== void 0){\r\n\t\t\t\t\t\tcurrentDeepLevel = deep.el;\r\n\t\t\t\t\t\tdeep.el.model.y = deep.yi - (deep.ul?.scrollTop || 0);\r\n\t\t\t\t\t\t$el.append(deep.el);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeep.ul = My.$el.children('ul')[0];\r\n\r\n\t\t\t\t\t// Initialize position once\r\n\t\t\t\t\tdeep.x = ulElem.offsetWidth;\r\n\t\t\t\t\tdeep.yi = ev.target.offsetTop - 7;\r\n\t\t\t\t\tdeep.y = deep.yi - (deep.ul?.scrollTop || 0);\r\n\r\n\t\t\t\t\t// Create dropdown in current sf-space\r\n\t\t\t\t\tdeep.el = currentDeepLevel = new $DropDown(deep, My.$space);\r\n\t\t\t\t\tcurrentDeepLevel.sf$noGC = true; // Avoid framework's GC\r\n\t\t\t\t\t$el.append(currentDeepLevel);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telem.on('mouseover', function(ev){\r\n\t\t\t\t\tMy.root.pendingDeepOpen = ev.target;\r\n\t\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\r\n\r\n\t\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\r\n\t\t\t\t\t\tif(My.root.pendingDeepOpen === ev.target)\r\n\t\t\t\t\t\t\topenDeep(ev);\r\n\t\t\t\t\t}, 200);\r\n\t\t\t\t});\r\n\r\n\t\t\t\telem.on('click', openDeep);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\telem.on('mouseover', function(ev){\r\n\t\t\t\tMy.root.pendingDeepOpen = ev.target;\r\n\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\r\n\r\n\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\r\n\t\t\t\t\tif(currentDeepLevel !== void 0){\r\n\t\t\t\t\t\tMy.deepRemove();\r\n\t\t\t\t\t\tcurrentDeepLevel = void 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\topt.hover && opt.hover.apply(opt.context, opt.args);\r\n\t\t\t\t}, 200);\r\n\t\t\t});\r\n\r\n\t\t\tif(opt.callback){\r\n\t\t\t\telem.on('click', function(ev){\r\n\t\t\t\t\tif(opt.unhover !== void 0)\r\n\t\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\r\n\r\n\t\t\t\t\topt.callback.apply(opt.context, opt.args);\r\n\t\t\t\t\tMy.root.hide();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(opt.unhover){\r\n\t\t\t\telem.on('mouseout', function(ev){\r\n\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tMy.deepRemove = function(){\r\n\t\tif(currentDeepLevel === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tcurrentDeepLevel.remove();\r\n\t\tcurrentDeepLevel.model.deepRemove();\r\n\t}\r\n});","## html.append-to-body\r\n<!-- /src/model/modal.sf -->\r\n<sf-m name=\"modal\" class=\"modal {{ showed && 'show' }}\">\r\n  <div class=\"modal-dialog\">\r\n    <vw-modal></vw-modal>\r\n  </div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m.modal{\r\n\tgrid-template-columns: auto minmax(0, 1fr) auto;\r\n\tdisplay: none;\r\n\tposition: fixed;\r\n\tz-index: 1001;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tbox-sizing: border-box;\r\n\tgrid-template-areas:\r\n\t    \"top-start top top-end\"\r\n\t    \"center-start center center-end\"\r\n\t    \"bottom-start bottom-center bottom-end\"\r\n\t    \"gap gap gap\";\r\n\tgrid-template-rows: auto auto auto .625em;\r\n\theight: 100%;\r\n\tpadding: .625em .625em 0;\r\n\toverflow-x: hidden;\r\n\tbackground: #00000000;\r\n\ttransition: background 0.3 linear;\r\n\r\n\t&.show{\r\n\t\tdisplay: grid;\r\n\t\tbackground: #00000060;\r\n\t\t.modal-dialog{\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\r\n\t.modal-dialog{\r\n\t\tdisplay: grid;\r\n\t\ttransition: opacity;\r\n\t\topacity: 0;\r\n\t\tgrid-column: 2;\r\n\t\tgrid-row: 2;\r\n\t\talign-self: center;\r\n\t\tjustify-self: center;\r\n\t\tposition: relative;\r\n\t\tbox-sizing: border-box;\r\n\t\tmax-width: 100%;\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar Modal = sf.model('modal', function(My){\r\n\tMy.showed = false;\r\n\r\n\tMy.init = My.hotReloaded = function(){\r\n\t\tMy.views = sf.Views.listSelector['vw-modal'];\r\n\t}\r\n\r\n\tMy.hide = function(){\r\n\t\tMy.showed = false;\r\n\t\tMy.$el('.modal-dialog').off('pointerdown', My.hide, {outside: true});\r\n\t}\r\n\r\n\tMy.goto = function(path){\r\n\t\tMy.views.goto(path);\r\n\t\tMy.showed = true;\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tMy.$el('.modal-dialog').on('pointerdown', My.hide, {outside: true});\r\n\t\t}, 400);\r\n\t}\r\n});","## html\n<sketch-panel-bottom class=\"panel {{ opened ? 'opened' : ''}}\" @contextmenu=\"SmallNotif.add('Some panels still WIP')\">\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'down' : 'up' }}\"></i>\n\t</div>\n\t<div class=\"content\">\n\t\tThis editor still in development (≧▽≦)／<br>\n\t\tI want to make it better and easier to use.<br>\n\t\tPlease use right click to open drop down menu for the cable, node, container, or port.\n\t</div>\n</sketch-panel-bottom>\n\n## scss-global\nbody sketch-page > .panels sketch-panel-bottom {\n\tbackdrop-filter: blur(1px); // Long CSS rule = more priority\n}\n\nsketch-page > .panels sketch-panel-bottom {\n    position: absolute;\n    left: 50%;\n\twidth: calc(100% - 200px - 240px - 80px);\n\tmargin-left: -20px;\n\tbottom: 0;\n\ttransform: translate(-50%, 90px);\n\ttransition: 0.3s ease-out transform;\n\tdisplay: flex;\n\tbackground: #00000085;\n\talign-items: center;\n\t.content {\n\t\tvisibility: hidden;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\theight: 80px;\n\t\twidth: 100%;\n\t\tpadding: 10px;\n\t\tcolor: #ffffff8a;\n\t}\n\t.opener{\n\t\tcursor: pointer;\n\t\theight: 10px;\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: center;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\ti {\n\t\t\tcolor: #ffffff70;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tfont-size: 12px;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t&.opened {\n\t\ttransform: translate(-50%, 0);\n\t\t.content {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}\n\n## js-global\nsf.component('sketch-panel-bottom', {template: #this.path}, function(My){\n\tMy.opened = false;\n\n\tMy.init = function(){\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\n\t\tsketchPage.panels.bottom = My;\n\t}\n\n\tfunction removeBlur(){\n\t\tMy.$el.css('backdrop-filter', 'none');\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\n\t}\n\n\tMy.openPanel = function(){\n\t\tremoveBlur();\n\t\tMy.opened = true;\n\t}\n\n\tMy.closePanel = function(ev){\n\t\tremoveBlur();\n\t\tev.stopPropagation();\n\t\tMy.opened = false;\n\t}\n});","## html\r\n<sketch-panel-left class=\"panel {{ opened ? 'opened' : ''}}\">\r\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\r\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'left' : 'right' }}\"></i>\r\n\t</div>\r\n</sketch-panel-left>\r\n\r\n## scss-global\r\nbody sketch-page > .panels sketch-panel-left {\r\n\tbackdrop-filter: blur(1px); // Long CSS rule = more priority\r\n}\r\n\r\nsketch-page > .panels sketch-panel-left {\r\n\tposition: absolute;\r\n\tdisplay: none; // ToDO: remove me\r\n\t// display: flex;\r\n\tleft: 0;\r\n\twidth: 200px;\r\n\theight: 100%;\r\n\ttransform: translate(-190px, 0);\r\n\ttransition: 0.3s ease-out transform;\r\n\t// position: relative;\r\n\tbackground: #00000085;\r\n\talign-items: center;\r\n\t.content {\r\n\t\tvisibility: hidden;\r\n\t}\r\n\t.opener{\r\n\t\tcursor: pointer;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px 0 10px 10px;\r\n\t\tposition: absolute;\r\n\t\tright: 0;\r\n\t\ti {\r\n\t\t\tcolor: #ffffff70;\r\n\t\t\tposition: absolute;\r\n\t\t\tright: 0;\r\n\t\t\tfont-size: 12px;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\t&.opened {\r\n\t\ttransform: translate(0px, 0);\r\n\t\t.content {\r\n\t\t\tvisibility: visible;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.component('sketch-panel-left', {template: #this.path}, function(My){\r\n\tMy.opened = false;\r\n\r\n\tMy.init = function(){\r\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\r\n\t\tsketchPage.panels.left = My;\r\n\t}\r\n\r\n\tfunction removeBlur(){\r\n\t\tMy.$el.css('backdrop-filter', 'none');\r\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\r\n\t}\r\n\r\n\tMy.openPanel = function(){\r\n\t\tremoveBlur();\r\n\t\tMy.opened = true;\r\n\t}\r\n\r\n\tMy.closePanel = function(ev){\r\n\t\tremoveBlur();\r\n\t\tev.stopPropagation();\r\n\t\tMy.opened = false;\r\n\t}\r\n});","## html\r\n<sketch-panel-right class=\"panel {{ opened ? 'opened' : ''}} {{ nodeSelected == null ? 'hide' : '' }}\">\r\n\t<div class=\"content\">\r\n\t\t<div class=\"panel-title\">Properties</div>\r\n\t\t<div class=\"default-field\">\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\">Title:</span> <span> {{ data.title }}</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\" title=\"Registered node path\">Namespace:</span> <span style=\"font-size:12px\"> {{ data.namespace }}</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\" title=\"Add an ID so you can easily reference to this node from scripts\">Node ID:</span>\r\n\t\t\t\t<input sf-bind=\"data.id\" placeholder=\"...\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\">Comment:</span>\r\n\t\t\t\t<textarea sf-bind=\"data.comment\" placeholder=\"Add node comment here...\"></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\r\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'right' : 'left' }}\"></i>\r\n\t</div>\r\n</sketch-panel-right>\r\n\r\n## scss-global\r\nbody sketch-page > .panels sketch-panel-right {\r\n\tbackdrop-filter: blur(8px); // Long CSS rule = more priority\r\n}\r\n\r\nsketch-page > .panels sketch-panel-right {\r\n\tposition: absolute;\r\n\t// visibility: hidden;\r\n\tbottom: 0;\r\n\tright: 0;\r\n\twidth: 240px;\r\n\theight: calc(100% - 200px);\r\n\ttransform: translate(230px, 0);\r\n\ttransition: 0.3s ease-out transform;\r\n\tdisplay: flex;\r\n\t// position: relative;\r\n\tbackground: #00000085;\r\n\talign-items: center;\r\n\t.content {\r\n\t\tvisibility: hidden;\r\n\t\tword-break: break-word;\r\n\t\twidth: 100%;\r\n\t\ttop: 0;\r\n\t\tposition: absolute;\r\n\t\tpadding: 6px 0;\r\n\t\tcolor: #ffffff8a;\r\n\t\t.panel-title{\r\n\t\t\tcolor: white;\r\n\t\t\tfont-size: 18px;\r\n\t\t\tfont-weight: bold;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\r\n\t\t.default-field{\r\n\t\t\tborder-bottom: 1px dashed #ffffff2e;\r\n\t\t}\r\n\t\t.field {\r\n\t\t\tborder-top: 1px dashed #ffffff2e;\r\n\t\t\tmargin-top: 4px;\r\n\t\t\tpadding-top: 2px;\r\n\t\t\tpadding-left: 5px;\r\n\t\t}\r\n\t\t.field > .name {\r\n\t\t\tcolor: white;\r\n\t\t}\r\n\t\tinput, textarea {\r\n\t\t\tbackground: rgba(0, 0, 0, 0.63);\r\n\t\t\tcolor: white;\r\n\t\t\tborder: none;\r\n\t\t\toutline: none;\r\n\t\t\tpadding: 4px;\r\n\t\t\twidth: calc(100% - 12px);\r\n\t\t\tborder-radius: 10px;\r\n\t\t}\r\n\t}\r\n\t.opener{\r\n\t\tcursor: pointer;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px 10px 10px 0;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ti {\r\n\t\t\tcolor: #ffffff70;\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\tfont-size: 12px;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\t&.hide{\r\n\t\tdisplay: none;\r\n\t}\r\n\t&.opened {\r\n\t\ttransform: translate(0px, 0);\r\n\t\t.content {\r\n\t\t\tvisibility: visible;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.component('sketch-panel-right', {template: #this.path}, function(My){\r\n\tMy.opened = false;\r\n\tMy.nodeSelected = null;\r\n\tMy.data = {title:'', namespace:'',\r\n\t\tid:'',\r\n\t\tv2m$id(val){ My.nodeSelected.id = val },\r\n\t\tcomment:'',\r\n\t\tv2m$comment(val){ My.nodeSelected.comment = val },\r\n\t};\r\n\r\n\tMy.init = function(){\r\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\r\n\t\tsketchPage.panels.right = My;\r\n\t}\r\n\r\n\tfunction removeBlur(){\r\n\t\tMy.$el.css('backdrop-filter', 'none');\r\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\r\n\t}\r\n\r\n\tMy.hide = function(){\r\n\t\tMy.nodeSelected = null;\r\n\t}\r\n\r\n\tlet _firstTimeOpen = true;\r\n\tMy.selectNode = function(iface){\r\n\t\tMy.nodeSelected = iface;\r\n\t\tMy.data.title = iface.title;\r\n\t\tMy.data.namespace = iface.namespace;\r\n\t\tMy.data.id = iface.id || '';\r\n\t\tMy.data.comment = iface.comment || '';\r\n\r\n\t\tif(_firstTimeOpen){\r\n\t\t\tsetTimeout(()=>{\r\n\t\t\t\t_firstTimeOpen = false;\r\n\t\t\t\tMy.opened = true;\r\n\t\t\t}, 500);\r\n\t\t}\r\n\t}\r\n\r\n\tMy.openPanel = function(){\r\n\t\tremoveBlur();\r\n\t\tMy.opened = true;\r\n\t}\r\n\r\n\tMy.closePanel = function(ev){\r\n\t\tremoveBlur();\r\n\t\tev.stopPropagation();\r\n\t\tMy.opened = false;\r\n\t}\r\n});","Small Notification\r\n\r\nYou can call this from anywhere\r\n```js\r\nSmallNotif.add('message', 'color', /* delay in ms*/);\r\n```\r\n\r\n## comment, this will automatically appended to body\r\n## html\r\n<!-- /src/component/SmallNotif.sf -->\r\n<sf-m name=\"small.notif\">\r\n  <div class=\"notify-container right-top\">\r\n    <div sf-each=\"x in list\" class=\"notify-base notify-{{ x.color }}\">\r\n      <span>{{ x.message }}</span>\r\n      <button @click=\"close(x)\" class=\"close\">×</button>\r\n    </div>\r\n  </div>\r\n</sf-m>\r\n\r\n## js-global\r\nvar SmallNotif = sf.model('small.notif', function(My){\r\n  const $ = sf.$;\r\n\r\n  My.list = [];\r\n  My.on$list = {\r\n    create(el){\r\n      $(el).animateKey('fadeInUp');\r\n    },\r\n    remove(el, remove){\r\n      $(el).animateKey('fadeOutUp', remove);\r\n      setTimeout(remove, 500); // To make sure it's removed\r\n      return true;\r\n    }\r\n  };\r\n\r\n  $(function(){\r\n    if($('sf-m[name=\"small.notif\"]').length !== 0) return;\r\n    $('body').append($(window.templates[#this.path]));\r\n  });\r\n\r\n  My.add = function(message, color, delay){\r\n    var item = {message, color:color || 'yellow'};\r\n    My.list.push(item);\r\n\r\n    if(delay !== false){\r\n      item.timer = setTimeout(()=> {\r\n        My.list.splice(My.list.indexOf(item), 1);\r\n      }, delay || (1000 + 100 * message.length));\r\n    }\r\n\r\n    return item;\r\n  }\r\n\r\n  My.close = function(item){\r\n    My.list.splice(My.list.indexOf(item), 1);\r\n  }\r\n});\r\n\r\n## scss-global\r\n.notify-base{\r\n  font-weight: bold;\r\n  padding: 6px 18px 6px 14px;\r\n  color: #222;\r\n  // text-shadow: 0 0 rgba(0, 0, 0, 0.5);\r\n  background-color: rgba(255, 255, 255, 0.97);\r\n  border: 1px solid;\r\n  border-color: rgba(255, 255, 255, 0.97);\r\n  box-shadow: 0 0 7px 0px rgba(255, 255, 255, 0.97);\r\n  border-radius: 4px;\r\n  min-width: 51%;\r\n  white-space: nowrap;\r\n  position: relative;\r\n  max-width: 100%;\r\n  margin: 10px 10px 0 10px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  span{\r\n    white-space: pre-line;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  button {\r\n    outline: none;\r\n    &.close {\r\n        appearance: none;\r\n        padding: 0;\r\n        cursor: pointer;\r\n        background: 0 0;\r\n        border: 0;\r\n        width: inherit;\r\n    }\r\n  }\r\n\r\n  .close {\r\n    float: right;\r\n    font-size: 23px;\r\n    font-weight: 700;\r\n    line-height: 0.8;\r\n    right: 6px;\r\n    position: absolute;\r\n    color: #000;\r\n    text-shadow: 0 1px 0 #fff;\r\n    opacity: .2;\r\n  }\r\n}\r\n\r\n.notify-container{\r\n  max-width: 95%;\r\n  position: fixed;\r\n  z-index: 9999;\r\n  display: grid;\r\n\r\n  &.right-top{\r\n    right: 10px;\r\n    top: 0;\r\n\r\n    .notify-base{\r\n      float: right;\r\n      margin: 10px 0 0 0;\r\n    }\r\n  }\r\n  &.left-top{\r\n    left: 0;\r\n    top: 0;\r\n\r\n    .notify-base{\r\n      float: left;\r\n      margin: 10px 0 0 10px;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin notify-color($name, $txt, $bg, $border){\r\n  .notify-#{$name}{\r\n    color: #{$txt};\r\n    background-color: #{$bg};\r\n    border-color: #{$border};\r\n    box-shadow: 0 0 5px 0px #{$border};\r\n  }\r\n}\r\n\r\n@include notify-color('red', #B94A48, rgba(242, 222, 222, 0.97), #EED3D7);\r\n@include notify-color('yellow', #C09853, rgba(252, 248, 227, 0.97), #FBEED5);\r\n@include notify-color('blue', #3A87AD, rgba(217, 237, 247, 0.97), #BCE8F1);\r\n@include notify-color('green', #468847, rgba(223, 240, 216, 0.97), #D6E9C6);","## html.append-to-body\r\n<!-- /src/model/loading.sf -->\r\n<sf-m name=\"loading\" class=\"{{ showed && 'show' }}\">\r\n\t<span class=\"icon\"><i class=\"fa fa-fan fa-spin\"></i></span>\r\n\t<span class=\"desc\">{{ desc }}</span>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"loading\"]{\r\n\tdisplay: none;\r\n\tbackground: #000000ba;\r\n\tpointer-events: none;\r\n\tpadding: 7px 15px;\r\n\tborder-radius: 20px;\r\n\tbox-shadow: 0 0 11px white;\r\n\tposition: fixed;\r\n\ttop: 60px;\r\n\tcolor: white;\r\n\tright: 10px;\r\n\tz-index: 100;\r\n\r\n\t&.show{\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\t.icon{\r\n\t\tpadding-right: 5px;\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar Loading = sf.model('loading', function(My){\r\n\tMy.showed = false;\r\n\tMy.desc = '';\r\n\r\n\tMy.set = function(text){\r\n\t\tif(text && My.showed === false)\r\n\t\t\tMy.showed = true;\r\n\t\telse My.showed = false;\r\n\r\n\t\tMy.desc = text;\r\n\t}\r\n});","This template will be appended to body\r\nFor adding library or style, please modify /public/index.html\r\n\r\n## html.append-to-body\r\n<div class=\"background\">\r\n\t<div class=\"img\" style=\"background-image: url('/assets/img/background/black3.jpg')\"></div>\r\n\t<div class=\"tile\"></div>\r\n</div>\r\n\r\n<!-- Model on ./blackprint/header.js -->\r\n<sf-m name=\"header\" class=\"header {{ showOptions ? 'sketch-mode' : '' }}\">\r\n\t<div class=\"header-left\" @click=\"mainMenu\">\r\n\t\t<img src=\"/assets/img/icon/blackprint.png\">\r\n\t\t<div>Blackprint</div>\r\n\t\t<i class=\"fa fa-caret-down menu-button-hint\"></i>\r\n\t</div>\r\n\t<div class=\"header-center\">\r\n\t\t<div>A node to node general purpose visual programming</div>\r\n\t</div>\r\n\t<div class=\"header-menu\">\r\n\t\t<div class=\"item-list\">\r\n\t\t\t<div class=\"item inactive\" @click=\"SmallNotif.add('Please be patient, still work in progress 😅');\" style=\"color: #2b2b2b\" title=\"Guide/Docs still work in progress\"><i class='fa fa-journal-whills'></i></div>\r\n\t\t\t<div class=\"item\" @click=\"Modal.goto('/module-example-list')\" title=\"Module examples\">\r\n\t\t\t\t<i class='fa fa-map-signs'></i>\r\n\t\t\t\t<div class=\"module-counter\">{{ _moduleExampleList.length }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"item\" @click=\"Modal.goto('/module-url')\" title=\"Loaded module\">\r\n\t\t\t\t<i class='fa fa-boxes'></i>\r\n\t\t\t\t<div class=\"module-counter\">{{ _loadedModuleURL.length }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"item {{ cloneActive ? 'active' : '' }}\" @click=\"cloneContainer\" title=\"Show the minimap and open new window\"><i class='fa fa-window-restore'></i></div>\r\n\t\t\t<div class=\"item {{ disableVFXActive ? 'active' : '' }}\" @click=\"disableVFX\" title=\"Improve performance by disable VFX\"><i class=\"fas fa-rocket\"></i></div>\r\n\t\t\t<div class=\"item {{ visualizeActive ? 'active' : '' }}\" @click=\"visualizeFlow\" title=\"Visualize data flow\"><i class=\"fas fa-bezier-curve\"></i></div>\r\n\t\t</div>\r\n\t\t<div class=\"header-zoom\">\r\n\t\t\t<div style=\"display: {{ info.scale === 100 ? 'none' : 'block' }}\">\r\n\t\t\t\t<i class=\"fas fa-search\"></i> {{ info.scale }}%\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n<!-- Ground viewport -->\r\n<!-- ./src/vw-ground/router.js -->\r\n<vw-ground style=\"display: none\"></vw-ground>\r\n\r\n<input type=\"text\" id=\"hidden_text\" style=\"position: fixed; top: 100vh;\">\r\n\r\n<!-- /src/component/dropdown.sf -->\r\n<sf-m name=\"dropdown\" class=\"{{className}}\">\r\n  <drop-down sf-each=\"val in menus\"></drop-down>\r\n</sf-m>\r\n\r\n## scss-global\r\nbody > .background {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\t.img{\r\n\t\tposition: fixed;\r\n\t\topacity: 0.8;\r\n\t\tbackground-repeat: repeat;\r\n\t\tbackground-size: 75%;\r\n\t\tbox-shadow: inset 0 0 11rem 0px black;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\t.tile{\r\n\t\topacity: 0.8;\r\n\t\tposition: fixed;\r\n\t\tbackground: url('/assets/img/background/tile.png');\r\n\t\tbackground-repeat: repeat;\r\n\t\tbackground-size: 100px;\r\n\t\twidth: 100%;\r\n\t\tbox-shadow: inset 0 0 11rem 0px black;\r\n\t\theight: 100%;\r\n\t\tfilter: brightness(28%);\r\n\t}\r\n}\r\n\r\nvw-ground{\r\n\tposition: absolute;\r\n\toverflow: hidden;\r\n\tdisplay: block;\r\n\ttop: 50px;\r\n\theight: calc(100vh - 50px);\r\n\twidth: 100vw;\r\n}\r\n\r\nbody > .header {\r\n\tz-index: 1;\r\n\tbackdrop-filter: blur(1px);\r\n\tposition: relative;\r\n\tbackground: #00000085;\r\n\talign-items: center;\r\n\tborder-bottom: 1px solid black;\r\n\tdisplay: flex;\r\n\tbox-shadow: 0 0 8px 0 black;\r\n\r\n\t.header-left {\r\n\t\tborder-right: 2px solid;\r\n\t\tfont-size: 24px;\r\n\t\tpadding: 0 15px 0 18px;\r\n\t\ttext-align: center;\r\n\t\tdisplay: table;\r\n\t\timg{\r\n\t\t\theight: 50px;\r\n\t\t\tfilter: drop-shadow(0 0 2px white);\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tvertical-align: middle;\r\n\t\t\tmargin-right: 8px;\r\n\t\t}\r\n\t\tdiv{\r\n\t\t\tvertical-align: middle;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n\t\t.menu-button-hint{\r\n\t\t\tdisplay: none;\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: -3px;\r\n\t\t\tleft: 100px;\r\n\t\t}\r\n\r\n\t\t&:hover{\r\n\t\t\t.menu-button-hint, div{\r\n\t\t\t\tcolor: #bdbdbd;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.header-center {\r\n\t\tfont-size: 18px;\r\n\t\ttext-align: center;\r\n\t\tpadding: 10px;\r\n\t\theight: 24px;\r\n\t}\r\n\r\n\t&.sketch-mode{\r\n\t\t.header-left{\r\n\t\t\tcursor: pointer;\r\n\t\t\ti.menu-button-hint{\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.header-menu{\r\n\t\t\tdisplay: inherit;\r\n\t\t}\r\n\t}\r\n\r\n\t.header-menu{\r\n\t\tdisplay: none;\r\n\t\t.item-list{\r\n\t\t\tdisplay: flex;\r\n\t\t\tposition: absolute;\r\n\t\t\tright: 0px;\r\n\t\t\ttop: 12px;\r\n\t\t\tfont-size: 22px;\r\n\t\t\t.item{\r\n\t\t\t\tpadding: 0 10px;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tposition: relative;\r\n\r\n\t\t\t\t&.active{\r\n\t\t\t\t\tcolor: white;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.module-counter {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\tbottom: 0;\r\n\t\t\t\t\tright: 0;\r\n\t\t\t\t\tfont-size: 10px;\r\n\t\t\t\t\tcolor: black;\r\n\t\t\t\t\tbackground: #ffffffde;\r\n\t\t\t\t\tbox-shadow: 0 0 6px white;\r\n\t\t\t\t\tborder-radius: 100%;\r\n\t\t\t\t\tpadding: 2px 3px 2px 4px;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t\theight: 12px;\r\n\t\t\t\t\tmin-width: 10px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.header-zoom{\r\n\t\t\tposition: absolute;\r\n\t\t\tright: 10px;\r\n\t\t\tcolor: white;\r\n\t\t\topacity: 0.8;\r\n\t\t\ttop: 50px;\r\n\t\t\tfont-size: 22px;\r\n\t\t}\r\n\t}\r\n\r\n\t.header-center{\r\n\t\t.item-list{\r\n\t\t\tdisplay: flex;\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 12px;\r\n\t\t\tfont-size: 22px;\r\n\t\t\t.item{\r\n\t\t\t\tpadding: 0 10px;\r\n\t\t\t\tcursor: pointer;\r\n\r\n\t\t\t\t&.active{\r\n\t\t\t\t\tcolor: white;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@media(max-width: 900px){\r\n\t\t.header-center div {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\tsf-m[name=\"modal\"]{\r\n\t\t\toverflow: scroll;\r\n\t\t}\r\n\t}\r\n\r\n\t.large-header{\r\n\t\tvw-ground{\r\n\t\t\theight: calc(100vh - 86px);\r\n\t\t}\r\n\t\t.header .header-left div{\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.header-left-menu{\r\n\t.dropdown-menu li{\r\n\t\tmin-width: 170px;\r\n\t}\r\n}","## html.append-to-body\r\n<!-- /src/model/tooltip.sf -->\r\n<sf-m name=\"tooltip\" class=\"{{ showed && 'show' }}\" style=\"transform: translate({{ x }}px, {{ y }}px);\">\r\n\t<div class=\"desc\">{{ desc }}</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"tooltip\"]{\r\n\tvisibility: hidden;\r\n\tbackground: #000000da;\r\n\tpointer-events: none;\r\n\tpadding: 2px 8px;\r\n\tborder-radius: 5px;\r\n\tbox-shadow: 0 0 2px white;\r\n\tposition: fixed;\r\n\ttop: 15px;\r\n\tleft: 10px;\r\n\tcolor: white;\r\n\topacity: 0;\r\n\tz-index: 1;\r\n\ttransition: 0.3s ease-in opacity;\r\n\r\n\t.desc{\r\n\t    white-space: pre-wrap;\r\n\t    // font-size: 14px;\r\n\t}\r\n\r\n\t&.show{\r\n\t\tvisibility: visible;\r\n\t\topacity: 1;\r\n\t}\r\n\r\n\t.icon{\r\n\t\tpadding-right: 5px;\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar ToolTip = sf.model('tooltip', function(My){\r\n\tMy.showed = false;\r\n\tMy.desc = '';\r\n\tMy.x = 0;\r\n\tMy.y = 0;\r\n\r\n\tMy._listener = function(ev){\r\n\t\tMy.x = ev.clientX;\r\n\t\tMy.y = ev.clientY;\r\n\t}\r\n\r\n\tMy.set = function(text, ev){\r\n\t\tif(ev != null){\r\n\t\t\tMy.x = ev.x;\r\n\t\t\tMy.y = ev.y;\r\n\t\t}\r\n\r\n\t\tif(text && My.showed === false){\r\n\t\t\tMy.showed = true;\r\n\t\t\t$(window).on('pointermove', My._listener);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tMy.showed = false;\r\n\t\t\t$(window).off('pointermove', My._listener);\r\n\t\t}\r\n\r\n\t\tMy.desc = text;\r\n\t}\r\n});","## html\r\n<sketch-page>\r\n\t<!-- This element will be replaced with 'My.space' -->\r\n\t<sf-slot for=\"space\"></sf-slot>\r\n\r\n\t<!-- Panels -->\r\n\t<div class=\"panels\">\r\n\t\t<!-- /src/component/sketch-panel-left.sf -->\r\n\t\t<sketch-panel-left></sketch-panel-left>\r\n\r\n\t\t<!-- /src/component/sketch-panel-bottom.sf -->\r\n\t\t<sketch-panel-bottom></sketch-panel-bottom>\r\n\r\n\t\t<!-- /src/component/sketch-panel-right.sf -->\r\n\t\t<sketch-panel-right></sketch-panel-right>\r\n\t</div>\r\n</sketch-page>\r\n\r\n## scss-global\r\nsketch-page{\r\n\t&> .bottom-message {\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\tcolor: #ababab;\r\n\t\twidth: 100%;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t&> .panels {\r\n\t\tsketch-panel-left, sketch-panel-bottom, sketch-panel-right {\r\n\t\t\tz-index: 1;\r\n\t\t\tbackdrop-filter: blur(1px);\r\n\t\t\tbox-shadow: 0 0 8px 0 black;\r\n\t\t}\r\n\t}\r\n\r\n\t@media(max-width: 900px){\r\n\t\t&> .bottom-message {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\r\n\t&> sf-space[blackprint] .bg-tile{\r\n\t\tbackground: url('/assets/img/background/tile.png');\r\n\t\tbackground-size: 100px;\r\n\t\tfilter: brightness(38%);\r\n\t\tbackface-visibility: hidden;\r\n\t\topacity: 0.5;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tposition: absolute;\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(data){ // data === views.data\r\n\t\t\tconsole.log(\"Sketch page data:\", data);\r\n\t\t\tlet sketch = SketchList[data.page - 1];\r\n\r\n\t\t\tsf.model('header').cloneActive = sketch.page.cloneActive;\r\n\t\t\t$('body > .background .tile').css('display', 'none');\r\n\r\n\t\t\tif(sketch.ifaceList.length === 0 && !sketch.__importing)\r\n\t\t\t\tsketch.page.panels.bottom.openPanel();\r\n\t\t},\r\n\t\tleaving(){\r\n\t\t\tconsole.log(\"Leaving from sketch page data:\", arguments);\r\n\t\t\t$('body > .background .tile').css('display', '');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\n// Blackprint.space = Space (https://github.com/ScarletsFiction/ScarletsFrame/wiki)\r\n// sketch.scope = shortcut to obtain your model scope/context\r\nvar SketchList = [];\r\nsf.component('sketch-page', function(My){\r\n\t// URL: #page/sketch/{data.page}\r\n\tlet sketch = My.sketch = SketchList[views.data.page - 1] ??= new Blackprint.Sketch();\r\n\tsketch.page = My;\r\n\r\n\t// Will be filled by each panel component after initialized\r\n\tMy.panels = {left: null, bottom: null, right: null};\r\n\r\n\t// Please use sketch.on('...', callback) instead\r\n\t// This is used if no one listened to the event\r\n\tsketch._event.$_fallback = BlackprintEventFallback;\r\n\r\n\t// path: /src/global/SuggestNodeTypeCaster.js\r\n\tsketch.on('port.cable.test', {slot: 'bp-editor'}, SuggestNodeTypeCaster);\r\n\tsketch.on('port.hover node.hover', {slot: 'bp-editor'}, ev => {\r\n\t\tev.instance = sketch;\r\n\r\n\t\tif(ev.port != null) PortHoverInfo(ev, true);\r\n\t\tif(ev.iface != null) NodeHoverInfo(ev, true);\r\n\t});\r\n\tsketch.on('port.unhover node.unhover', {slot: 'bp-editor'}, ev => {\r\n\t\tev.instance = sketch;\r\n\r\n\t\tif(ev.port != null) PortHoverInfo(ev, false);\r\n\t\tif(ev.iface != null) NodeHoverInfo(ev, false);\r\n\t});\r\n\r\n\t// This may cause one memory leak because this will never being cleared\r\n\tsketch.on('node.click', {slot: 'bp-editor'}, ev => {\r\n\t\tMy.panels.right.selectNode(ev.iface);\r\n\t\tNodeHoverInfo(ev, false);\r\n\t});\r\n\r\n\tBlackprint.settings('visualizeFlow', true);\r\n\tMy.space ??= sketch.cloneContainer();\r\n\r\n\tlet SketchPages = sf.model('sketch-pages');\r\n\tlet container = sketch.scope('container');\r\n\tlet header = sf.model('header');\r\n\r\n\tcontainer.hideUnusedPort = sf.model('sketch-settings').hideUnusedPort;\r\n\r\n\tcontainer.onScale = function(scale){\r\n\t\theader.info.scale = Math.round(scale * 100);\r\n\t}\r\n\r\n\t// Will run when <sketch-page> inserted on DOM\r\n\tMy.init = async function(){\r\n\t\tlet sfm = $(My.space.firstElementChild);\r\n\t\tif(!sfm.eq(0).hasClass('bg-tile')){\r\n\t\t\tsfm.prepend('<div class=\"bg-tile\"></div>');\r\n\t\t}\r\n\t}\r\n\r\n\tMy.importJSON = json => sketch.importJSON(json);\r\n\tMy.clearNodes = ()=> sketch.clearNodes();\r\n\r\n\tMy.cloneActive = false;\r\n\tMy.cloneContainer = function(){\r\n\t\tMy.cloneActive = !My.cloneActive;\r\n\r\n\t\tif(My.cloneActive){\r\n\t\t\tif(My.disableVFXActive === false)\r\n\t\t\t\tMy.disableVFX();\r\n\r\n\t\t\t// Reset current container view\r\n\t\t\tvar container = sketch.scope('container');\r\n\t\t\tcontainer.pos.x = 0;\r\n\t\t\tcontainer.pos.y = 0;\r\n\t\t\tcontainer.scale = 1; // 100% scale\r\n\r\n\t\t\tvar mini;\r\n\t\t\tif(container.minimap)\r\n\t\t\t\tmini = container.minimap;\r\n\t\t\telse{\r\n\t\t\t\tmini = sketch.cloneContainer(true); // Clone and get the MiniMap\r\n\r\n\t\t\t\t// Remove the dropdown from minimap\r\n\t\t\t\t$('sf-m[name=\"dropdown\"]', mini).remove();\r\n\t\t\t}\r\n\r\n\t\t\t// Clone into new window\r\n\t\t\tnew sf.Window({\r\n\t\t\t\ttitle: \"Cloned Sketch Container\",\r\n\t\t\t\ttemplateHTML: sketch.cloneContainer() // Clone 2\r\n\t\t\t}, refreshViewport);\r\n\r\n\t\t\t// Put the mini container into DOM\r\n\t\t\tSketchPages.miniViewer.topRight = mini;\r\n\r\n\t\t\t// Refresh mini viewport size\r\n\t\t\t// I put it like this for a reason\r\n\t\t\trefreshViewport();\r\n\t\t\tfunction refreshViewport(){\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tcontainer.pos.x = -0.1;\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tcontainer.pos.x = 0;\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tSketchPages.miniViewer.topRight = null;\r\n\t\t\tsf.Window.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\tsketch.on('node.menu', function({ iface, menu }){\r\n\t\tmenu.unshift({\r\n\t\t\ttitle: !iface.id ? \"Add ID\" : \"Modify ID\",\r\n\t\t\tasync callback(){\r\n\t\t\t\tlet ref = await Swal.fire({\r\n\t\t\t\t\ttitle: \"Write the new ID here\",\r\n\t\t\t\t\ttext: (iface.id ? \"Current ID: \"+iface.id : void 0),\r\n\t\t\t\t\tinput: \"text\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.isConfirmed === false) return;\r\n\r\n\t\t\t\tlet sketch = SketchList[0];\r\n\t\t\t\tlet val = ref.value;\r\n\r\n\t\t\t\tif(val === ''){\r\n\t\t\t\t\tdelete sketch.iface[iface.id];\r\n\t\t\t\t\tiface.id = val;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(sketch.iface[val] !== void 0)\r\n\t\t\t\t\tthrow new Error(\"ID already exist\");\r\n\r\n\t\t\t\tiface.id = val;\r\n\t\t\t\tsketch.iface[val] = iface;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\ttitle: \"View source code\",\r\n\t\t\tasync callback(){\r\n\t\t\t\tlet code = await utils.openNodeSource(iface);\r\n\t\t\t\tif(!code) return;\r\n\r\n\t\t\t\tlet editor = sf.model('custom-node-editor');\r\n\t\t\t\teditor.setValue(code);\r\n\r\n\t\t\t\tModal.goto('/custom-node-editor');\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});","## html\r\n<!-- Filling the default page if haven't being routed -->\r\n<sf-m name=\"welcome-text\" class=\"welcome-text\">\r\n\t<h1>Welcome to Blackprint Editor!</h1>\r\n\t<div class=\"description\">This editor haven't being designed for mobile screen.</div>\r\n\t<div class=\"content\">\r\n\t\t<div class=\"item\" @click=\"toWorkspace\">\r\n\t\t\t<i class=\"fas fa-torii-gate\"></i> Go to sketch page\r\n\t\t</div>\r\n\t\t<div class=\"item\" @click=\"openExamples\">\r\n\t\t\t<i class='fa fa-map-signs'></i> <span>Open examples</span>\r\n\t\t</div>\r\n\t\t<div class=\"item\" style=\"cursor: default\">\r\n\t\t\t<i class='fa fa-book-open'></i> <span style=\"text-decoration: line-through\">Learn from editor</span>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"available-engine\">\r\n\t\t<div class=\"title\">Blackprint Engine also available for:</div>\r\n\t\t<div class=\"list\">\r\n\t\t\t<!-- python, csharp, java/kotlin, cplusplus, go, rust, docker -->\r\n\t\t\t<!-- css3, html5 -->\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\r\n\t\t\t\t<img src=\"/assets/img/icon/denojs.svg\">\r\n\t\t\t\t<div class=\"name\">Deno</div>\r\n\t\t\t</a>\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\r\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/nodejs/nodejs-plain.svg\">\r\n\t\t\t\t<div class=\"name\">Node.js</div>\r\n\t\t\t</a>\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-php\" target=\"_blank\">\r\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/php/php-plain.svg\">\r\n\t\t\t\t<div class=\"name\">PHP</div>\r\n\t\t\t</a>\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-go\" target=\"_blank\">\r\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/go/go-original-wordmark.svg\">\r\n\t\t\t\t<div class=\"name\">Golang</div>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n<div class=\"welcome-left\">\r\n\t<a target=\"_blank\" href=\"https://ko-fi.com/stefansarya\">\r\n\t\t<i class=\"fas fa-mug-hot\"></i> Ko-fi\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint\">\r\n\t\t<i class=\"fab fa-github\"></i> GitHub\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://stefansarya.gitbook.io/blackprint\">\r\n\t\t<i class=\"fa fa-book-open\"></i> Documentation\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint/discussions\">\r\n\t\t<i class=\"fa fa-comments\"></i> Discussions\r\n\t</a>\r\n</div>\r\n\r\n<div class=\"welcome-right\">\r\n\t<a target=\"_blank\" style=\"cursor: pointer;\" onclick=\"Modal.goto('/npm-packages')\">\r\n\t\tPackage List <i class=\"fas fa-boxes\"></i>\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://www.npmjs.com/search?q=keywords:blackprint\">\r\n\t\tnpm.js <i class=\"fas fa-box\"></i>\r\n\t</a>\r\n</div>\r\n\r\n## scss-global\r\n.welcome-text{\r\n\tcolor: white;\r\n\ttext-align: center;\r\n\tpadding: 0 20px;\r\n\r\n\t> .description{\r\n\t\twhite-space: pre-line;\r\n\t}\r\n\r\n\t> .content{\r\n\t\tmax-width: 750px;\r\n\t\twidth: 90vw;\r\n\t\tdisplay: inline-flex;\r\n\r\n\t\t.item{\r\n\t\t\tpadding: 10px;\r\n\t\t\twidth: 200px;\r\n\t\t\tmargin: 10px 14px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 10px;\r\n\t\t\tbox-shadow: 0px 0px 3px white;\r\n\t\t\tborder: 1px solid #c5c5c5;\r\n\t\t\tbackground: #0000008a;\r\n\t\t}\r\n\t}\r\n\r\n\t.available-engine{\r\n\t\tbottom: 0;\r\n\t\twidth: 100vw;\r\n\t\tleft: 0;\r\n\t\tposition: absolute;\r\n\t\t.title{\r\n\r\n\t\t}\r\n\t\t.list .item{\r\n\t\t\twidth: 50px;\r\n\t\t\timg{\r\n\t\t\t\tmax-width: 50px;\r\n\t\t\t\tfilter: brightness(0) invert(1);\r\n\t\t\t}\r\n\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tcolor: white;\r\n\t\t\tmargin: 0 5px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.welcome-left{\r\n\tdisplay: grid;\r\n\tposition: absolute;\r\n\tcolor: #a0a0a0;\r\n\tbottom: 0;\r\n\tleft: 10px;\r\n\ti{\r\n\t\tmargin-right: 5px;\r\n\t}\r\n}\r\n\r\n.welcome-right{\r\n\tdisplay: grid;\r\n\tposition: absolute;\r\n\tcolor: #a0a0a0;\r\n\tbottom: 0;\r\n\tright: 10px;\r\n\ttext-align: right;\r\n\ti{\r\n\t\tmargin-left: 5px;\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('welcome-text', function(My){\r\n\tMy.toWorkspace = function(){\r\n\t\tif(SketchList.length === 0){\r\n\t\t\tMy.openExamples();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tviews.goto('/sketch/1');\r\n\t}\r\n\r\n\tMy.openExamples = function(){\r\n\t\tModal.goto('/example-list');\r\n\t}\r\n});","## html\r\n<sf-m name=\"sketch-pages\">\r\n\t<!-- /src/routes/+vw-ground/sketch.sf -->\r\n\t<vw-page></vw-page>\r\n\r\n\t<div class=\"mini-blackprint disable-effect {{ miniViewer.topRightHidden && 'hidden' }}\">\r\n\t\t<!-- Will be replaced with element returned by Blackprint.cloneContainer(true) -->\r\n\t\t<sf-slot for=\"miniViewer.topRight\"></sf-slot>\r\n\t</div>\r\n</sf-m>\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tshowed(){\r\n\t\t\t// Show sketch options\r\n\t\t\tsf.model('header').showOptions = true;\r\n\t\t},\r\n\t\thidden(){\r\n\t\t\tsf.model('header').showOptions = false;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tshowed: Sketch container have been loaded,\r\n\t\tcoming: The cable would have wrong position because the DOM still hidden,\r\n\t\tleaving: Maybe we can uninitialize something,\r\n\t\thidden: Animate something maybe\r\n\t\t*/\r\n\t}\r\n}\r\n\r\n## scss-global\r\nvw-page{\r\n\tposition: absolute;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\r\n\t&.page-current{\r\n\t\ttop: 0;\r\n\t}\r\n}\r\n.mini-blackprint{\r\n\twidth: 240px;\r\n\theight: 190px;\r\n\tposition: absolute;\r\n\ttop: 5px;\r\n\tright: 0;\r\n\toverflow: hidden;\r\n\tbox-shadow: 0 0 6px #ffffff6b;\r\n\tbackground: #ffffff40;\r\n\tborder-radius: 10px;\r\n\tpointer-events: none;\r\n\r\n\t&.hidden{\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('sketch-pages', function(My){\r\n\tMy.miniViewer = {\r\n\t\ttopRight: null,\r\n\t\ttopRightHidden: true,\r\n\t\ton$topRight(now){\r\n\t\t\tif(now === null)\r\n\t\t\t\treturn My.miniViewer.topRightHidden = true;\r\n\r\n\t\t\tMy.miniViewer.topRightHidden = false;\r\n\t\t\t// now => <sf-space>\r\n\t\t\t// $(now)\r\n\t\t}\r\n\t};\r\n});","## html\r\n<sf-m name=\"custom-node-editor\">\r\n\t<div class=\"editor\" @keydown.ctrl.Enter.prevent=\"run\">\r\n\t\t<div class=\"bp-loading-status\" style=\"color: white; padding: 20px\">Loading Monaco Editor...</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"run\" title=\"Execute (Ctrl + Enter)\"><i class=\"fa fa-play\"></i></div>\r\n\t\t<!-- <div class=\"item\" @click=\"Modal.hide()\" title=\"Minimize\"><i class=\"fa fa-window-minimize\"></i></div> -->\r\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"custom-node-editor\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\r\n\t.editor{\r\n\t\twidth: 80vw;\r\n\t\tmax-width: 900px;\r\n\t\theight: 90vh;\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: 0px;\r\n\t\ttop: 0;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tshowed(){\r\n\t\t\tlet model = sf.model('custom-node-editor');\r\n\t\t\tmodel.recreate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('custom-node-editor', function(My){\r\n\tMy.content = '// After execute this, you can test it by connecting\\n// Input -> Slider and Logger to this node\\n\\nlet EventSlot = {slot: \\'my-unique\\'}; // To avoid duplicate listener\\n\\nBlackprint.registerNode(\\'Test/Hello\\',\\nclass extends Blackprint.Node {\\n\\tstatic input = { // Port\\n\\t\\t\\'Give Input\\': Number\\n\\t}\\n\\t\\n\\tstatic output = { // Port\\n\\t\\tOut: Number\\n\\t}\\n\\n\\tconstructor(instance){\\n\\t\\tsuper(instance);\\n\\n\\t\\t// You can remove this if you want to use default node interface/HTML\\n\\t\\tlet iface = this.setInterface(\\'BPIC/Test/Hello\\');\\n\\n\\t\\tiface.title = \\'Add +5\\';\\n\\t\\tiface.description = \\'Add 5 to any number\\';\\n\\t}\\n});\\n\\n// You can remove this if you\\'re using default node interface/HTML\\nBlackprint.Sketch.registerInterface(\\'BPIC/Test/Hello\\', {\\n\\thtml: `\\n<div class=\"node {{ type || \\'general\\' }}\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\\n\\n  <div class=\"content\">\\n\\t<div class=\"left-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\\n\\t</div>\\n\\t\\n\\t<div style=\"display: inline-block; color: yellow\">\\n\\t\\t{{ log }}\\n\\t</div>\\n    \\n\\t<div class=\"right-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\\n\\t</div>\\n  </div>\\n</div>`\\n}, class extends Blackprint.Interface {\\n\\tconstructor(node){\\n\\t\\tsuper(node);\\n\\n\\t\\tthis.log = 0;\\n\\t}\\n\\n\\t// HTML/Interface Init\\n\\tinit(el){\\n\\t\\tlet iface = this;\\n\\t\\t\\n\\t\\tconst {\\n\\t\\t\\tIInput, IOutput, // Port interface (event, utils, etc)\\n\\t\\t\\tInput, Output, // Node Port (get/set value)\\n\\t\\t} = iface.ref;\\n\\n\\t\\tIInput[\\'Give Input\\'].on(\\'value\\', EventSlot, function({ cable }){\\n\\t\\t\\tlet val = cable.value;\\n\\n\\t\\t\\tiface.log = val + 5; // Give Input -> {{ log }}\\n\\t\\t\\tOutput.Out = val + 5; // Give Input -> Out\\n\\t\\t});\\n\\t}\\n\\n\\t// Run init again to hot reload this node\\n\\thotReloaded(){\\n\\t\\tthis.init();\\n\\t}\\n\\n\\t// When this node UI was cloned somewhere\\n\\t// You can reinit some HTML element if needed\\n\\tinitClone(el){}\\n});';\r\n\r\n\tMy.init = async function(){\r\n\t\tif(window.monaco === void 0){\r\n\t\t\tawait sf.loader.js(['https://cdn.jsdelivr.net/npm/@monaco-editor/loader@1.2.0/lib/umd/monaco-loader.min.js']);\r\n\t\t\tawait monaco_loader.init();\r\n\t\t}\r\n\r\n\t\tMy.container = My.$el('.editor');\r\n\t\tMy.recreate();\r\n\t}\r\n\r\n\tMy.recreate = function(){\r\n\t\tif(window.monaco === void 0) return;\r\n\t\tif(My.editor) return;\r\n\r\n\t\tMy.editor && My.editor.dispose();\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tlet statusEl = My.container.find('.bp-loading-status');\r\n\r\n\t\t\tMy.editor = monaco.editor.create(My.container[0], {\r\n\t\t\t\tvalue: My.content,\r\n\t\t\t\tlanguage: 'javascript',\r\n\t\t\t\ttheme: 'vs-dark',\r\n\t\t\t\tminimap: { enabled: false }\r\n\t\t\t});\r\n\r\n\t\t\tstatusEl.css('display', 'none');\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tMy.run = function(){\r\n\t\teval(My.editor.getValue());\r\n\t}\r\n\r\n\tMy.setValue = function(code){\r\n\t\tif(My.editor != null)\r\n\t\t\tMy.editor.setValue(code);\r\n\r\n\t\tMy.content = code;\r\n\t}\r\n\r\n\tMy.close = function(){\r\n\t\tModal.hide();\r\n\r\n\t\t// My.editor.dispose();\r\n\t\t// My.editor = null;\r\n\t\t// modal.goto('/');\r\n\r\n\t\t// My.container.find('.bp-loading-status').css('display', '');\r\n\t}\r\n});","## html\r\n<sf-m name=\"modal-dev-mode\">\r\n\t<div class=\"description\">Please set the Blackprint module server URL</div>\r\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default server)</div>\r\n\t<div class=\"text-input\">\r\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\r\n\t</div>\r\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"modal-dev-mode\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t}\r\n\t.note{\r\n\t\ttext-align: center;\r\n\t\tfont-size: 12px;\r\n\t\tpadding: 0;\r\n\t\tcolor: gray;\r\n\t\tmargin-top: -10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.text-input{\r\n\t\tpadding: 10px;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\r\n\t\tinput{\r\n\t\t\twidth: 100%;\r\n\t\t\tborder: 1px solid black;\r\n\t\t\tbackground: #161616;\r\n\t\t\tpadding: 5px;\r\n\t\t\tcolor: white;\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\t.button-import{\r\n\t\tposition: relative;\r\n\t\tborder-radius: 10px;\r\n\t\tbackground: #125c15;\r\n\t\tborder: 1px solid #65a122;\r\n\t\tmargin: 0 auto 5px auto;\r\n\t\twidth: 120px;\r\n\t\tpadding: 7px 10px;\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\t&:hover{\r\n\t\t\tbackground: #65a122;\r\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\r\n\t\t\t}, 500);\r\n\t\t},\r\n\t\tshowed(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\r\n\t\t\t}, 100);\r\n\t\t},\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('modal-dev-mode', function(My){\r\n\tMy.url = localStorage.BPModuleServer ??= \"\";\r\n\tMy.placeholder = location.origin;\r\n\r\n\tMy.connectDefault = function(){\r\n\t\tlocalStorage.BPModuleServer = My.url = \"\";\r\n\t\tMy.changeServer();\r\n\t}\r\n\r\n\tMy.changeServer = async function(clearOnFail){\r\n\t\tlet url = My.url;\r\n\t\tif(!url) url = My.placeholder;\r\n\t\t// url = 'http://localhost:6791';\r\n\r\n\t\tlet _url = url;\r\n\r\n\t\tif(url.slice(-1) === '/')\r\n\t\t\turl = url.slice(0, -1);\r\n\t\turl += '/browser-sync';\r\n\r\n\t\tif(window.___browserSync___ === void 0){\r\n\t\t\ttry{\r\n\t\t\t\tawait sf.loader.js([url+'/browser-sync-client.js?v=2']);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tSmallNotif.add(\"Failed to load client\", \"red\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t___browserSync___.socketUrl = url;\r\n\r\n\t\tlet socket = ___browserSync___.socket;\r\n\t\tsocket.disconnect();\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(socket.connected) return;\r\n\t\t\tconsole.log(\"Failed to connect to Blackprint module server:\", url);\r\n\t\t\tSmallNotif.add(\"Failed to connect to Blackprint module server\", \"red\");\r\n\t\t\tsocket.disconnect();\r\n\t\t\tsocket.off('connect', onConnected);\r\n\r\n\t\t\t// Unset the value if this was failing on startup time\r\n\t\t\tif(clearOnFail)\r\n\t\t\t\tlocalStorage.BPModuleServer = \"\";\r\n\t\t}, 8000);\r\n\r\n\t\tfunction onConnected(){\r\n\t\t\tconsole.log(\"Connected to Blackprint module server:\", url);\r\n\t\t\tSmallNotif.add(\"Connected to Blackprint module server\", \"green\");\r\n\t\t\tlocalStorage.BPModuleServer = My.url;\r\n\t\t}\r\n\r\n\t\tsocket.once('connect', onConnected);\r\n\r\n\t\tsocket.nsp = '/browser-sync';\r\n\t\tsocket.io.uri = url;\r\n\t\tsocket.connect();\r\n\r\n\t\tlet newModuleLoaded = false;\r\n\t\ttry{\r\n\t\t\tlet moduleList = Object.values(await $.getJSON(_url+'/api/module-list'));\r\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\r\n\t\t\t\tmoduleList[i] = _url+moduleList[i];\r\n\r\n\t\t\tif(moduleList.length !== 0){\r\n\t\t\t\tSmallNotif.add(`Loading ${moduleList.length} new modules`, \"yellow\");\r\n\r\n\t\t\t\tawait Blackprint.loadModuleFromURL(moduleList, {\r\n\t\t\t\t\tloadBrowserInterface: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\tSmallNotif.add(`New modules have been loaded`, \"green\");\r\n\t\t\t}\r\n\r\n\t\t\tnewModuleLoaded = true;\r\n\t\t} catch(e) {\r\n\t\t\tSmallNotif.add(`Failed to load new modules`, \"red\");\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(newModuleLoaded) return;\r\n\t\t\tSmallNotif.add(`Loading modules was taking longer than 10s`, \"red\");\r\n\r\n\t\t\tif(sf.loader.pendingResources.size !== 0)\r\n\t\t\t\tconsole.log(\"Pending resources:\", sf.loader.pendingResources);\r\n\t\t}, 10000);\r\n\r\n\t\tif(Modal.showed)\r\n\t\t\tModal.hide();\r\n\t}\r\n\r\n\tif(My.url !== '' && sf.hotReload !== void 0){\r\n\t\t$(() => setTimeout(()=> My.changeServer(true), 200));\r\n\t}\r\n});","## html\r\n<sf-m name=\"environment-variables\">\r\n\t<div class=\"title\">Environment Variables</div>\r\n\t<div class=\"head\">\r\n\t\t<div class=\"row\">Key</div>\r\n\t\t<div class=\"row\">Value</div>\r\n\t</div>\r\n\t<div class=\"content\">\r\n\t\t<div>\r\n\t\t\t<div class=\"row\" sf-each=\"x in list\" @keyup=\"itemChanged(x)\">\r\n\t\t\t\t<input class=\"column key\" type=\"text\" @input=\"(this.value = x.key = validateKey(this.value))\" sf-bind=\"x.key\" placeholder=\"...\">\r\n\t\t\t\t<input class=\"column\" type=\"text\" sf-bind=\"x.value\" placeholder=\"...\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"row\">\r\n\t\t\t<input class=\"column key\" type=\"text\" @input=\"this.value = newKey = validateKey(this.value)\" sf-bind=\"newKey\" placeholder=\"Add new key...\">\r\n\t\t\t<input class=\"column\" type=\"text\" sf-bind=\"newValue\" placeholder=\"...\">\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"environment-variables\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\r\n\t.title{\r\n\t\ttext-align: center;\r\n\t\tmin-width: 300px;\r\n\t\tpadding: 5px;\r\n\t\tcolor: #fff;\r\n\t\tfont-weight: bold;\r\n\t\tletter-spacing: 1px;\r\n\t\tborder-bottom: 1px solid #000;\r\n\t\tbackground: #0009;\r\n\t\tcursor: default;\r\n\t}\r\n\r\n\t.head{\r\n\t\ttext-align: center;\r\n\t\tdisplay: flex;\r\n\t\tbackground: #00000070;\r\n\t\t.row{\r\n\t\t\tcolor: #fff;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\twidth: 50%;\r\n\t\t\toutline: 1px solid #000;\r\n\t\t\tcursor: default;\r\n\t\t}\r\n\t}\r\n\r\n\t.content{\r\n\t\t.row{\r\n\t\t\tdisplay: flex;\r\n\t\t\t.column{\r\n\t\t\t\tcolor: #fff;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\twidth: 50%;\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t\toutline: 1px solid #000;\r\n\t\t\t}\r\n\r\n\t\t\tinput{\r\n\t\t\t\tcolor: gray;\r\n\t\t\t\tbackground: #00000094;\r\n\t\t\t\tborder: none;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -5px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('environment-variables', function(My){\r\n\tMy.list = Blackprint.Environment.list;\r\n\tMy.newValue = '';\r\n\tMy.newKey = '';\r\n\r\n\t// Blackprint.Environment.import([{key: 'TEST', value:'123'}]);\r\n\r\n\tMy.v2m$newKey = function(now){\r\n\t\tnow = My.validateKey(now);\r\n\r\n\t\tif(now.length !== 0){\r\n\t\t\tBlackprint.Environment.set(now, My.newValue);\r\n\t\t\tMy.newKey = My.newValue = '';\r\n\t\t\tcaretFocusOnLastItem();\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\tfunction caretFocusOnLastItem(){\r\n\t\t$('input', My.list.getElement(My.list.length-1))[0].focus();\r\n\t}\r\n\r\n\tMy.itemChanged = function(item){\r\n\t\trefreshEnvironment();\r\n\r\n\t\tif(item.key.length === 0 && (Number.isNaN(item.value) || !item.value)){\r\n\t\t\tMy.list.splice(My.list.indexOf(item), 1);\r\n\t\t\tcaretFocusOnLastItem();\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tlet _refreshEnvironment = 0;\r\n\tfunction refreshEnvironment(){\r\n\t\tclearTimeout(_refreshEnvironment);\r\n\t\t_refreshEnvironment = setTimeout(function(){\r\n\t\t\tlet { map, list } =  Blackprint.Environment;\r\n\t\t\tlet uniq = new Set();\r\n\r\n\t\t\t// Assign the value of each list on the map\r\n\t\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\t\tlet item = list[i];\r\n\t\t\t\tmap[item.key] = item.value;\r\n\t\t\t\tuniq.add(item.key);\r\n\t\t\t}\r\n\r\n\t\t\t// Remove key that not exist on the list\r\n\t\t\tfor(let key in map){\r\n\t\t\t\tif(!uniq.has(key))\r\n\t\t\t\t\tBlackprint.Environment.delete(key, true);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tMy.validateKey = function(value){\r\n\t\treturn value.replace(/[ \\-]+/gm, '_').replace(/\\W+/gm, '').replace(/^[0-9]+/gm, '').toUpperCase();\r\n\t}\r\n\r\n\tMy.close = function(){\r\n\t\tModal.hide();\r\n\t\tmodal.goto('/');\r\n\t}\r\n});","## html\r\n<sf-m name=\"example-list\">\r\n\t<div class=\"description\">Please select one of these example (<a href=\"https://github.com/Blackprint/blackprint.github.io/blob/develop/src/global/sampleList.js\">source</a>)</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\r\n\t\t\t{{ x }}\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"example-list\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsf.model('example-list').list = Object.keys(sampleList);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('example-list', function(My){\r\n\tMy.list = [];\r\n\r\n\tMy.open = function(key){\r\n\t\tlet obj = sampleList[key];\r\n\t\tfor (var i = 0; i < SketchList.length; i++)\r\n\t\t\tSketchList[i].clearNodes();\r\n\r\n\t\tModal.hide();\r\n\r\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\r\n\t\tsketch.__importing = true;\r\n\r\n\t\tSketchImporter.pendingLoad = obj;\r\n\t\tSketchImporter.importNow();\r\n\t}\r\n});","## html\r\n<sf-m name=\"module-example-list-deep\">\r\n\t<div class=\"description\">Examples for: <b>{{ packageName }}</b></div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"openExample(x)\">\r\n\t\t\t{{ x.name }}\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"module-example-list-deep\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\tmargin-right: 40px;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -5px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('module-example-list-deep', function(My){\r\n\tMy.packageName = '';\r\n\tMy.baseUrl = '';\r\n\tMy.list = [];\r\n\r\n\tMy.openModal = function(pkg){\r\n\t\tMy.packageName = pkg.packageName;\r\n\r\n\t\tlet list = pkg.examples;\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tlet temp = list[i];\r\n\r\n\t\t\tif(!temp.name){\r\n\t\t\t\ttemp.name = temp.url\r\n\t\t\t\t\t.replace('example/', '')\r\n\t\t\t\t\t.replace(/^\\//, '')\r\n\t\t\t\t\t.replace('.json', '')\r\n\t\t\t\t\t.replace(/\\-/g, ' ');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMy.list = list;\r\n\t\tMy.baseUrl = pkg.packageURL;\r\n\t}\r\n\r\n\tMy.openExample = async function(item){\r\n\t\tSmallNotif.add(\"Loading information..\");\r\n\r\n\t\tlet url = item.url;\r\n\t\tif(url.slice(0, 1) !== '/')\r\n\t\t\turl = `/${url}`;\r\n\r\n\t\tlet obj = await $.getJSON(My.baseUrl+url);\r\n\t\tSketchImporter.loadJSON(obj);\r\n\t}\r\n\r\n\tMy.back = function(){\r\n\t\tModal.goto('/module-example-list');\r\n\t}\r\n});","## html\r\n<sf-m name=\"module-example-list\">\r\n\t<div class=\"description\">Please select one of the module to load the example list</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\r\n\t\t\t{{ x.packageName }}\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"module-example-list\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){ }\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar ModuleExampleList = sf.model('module-example-list', function(My){\r\n\tMy.list = EditorHeader._moduleExampleList;\r\n\r\n\tinit();\r\n\tfunction init() {\r\n\t\tlet cache = localStorage.bpModuleExampleList;\r\n\t\tif(!cache) return;\r\n\r\n\t\tMy.list.push(...JSON.parse(cache));\r\n\t}\r\n\r\n\tMy.open = function(x) {\r\n\t\tsf.model('module-example-list-deep').openModal(x);\r\n\t\tModal.goto('/module-example-list-deep');\r\n\t}\r\n\r\n\tMy.add = function(packageName, list, packageURL){\r\n\t\tlet ref = My.list;\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tif(ref[i].packageName === packageName) break;\r\n\t\t}\r\n\r\n\t\t// new example\r\n\t\tif(i === ref.length){\r\n\t\t\tref.push({\r\n\t\t\t\tpackageName,\r\n\t\t\t\tpackageURL,\r\n\t\t\t\texamples: list,\r\n\t\t\t});\r\n\r\n\t\t\tMy.list = ref = ref.sort((a, b) => a.packageName.localeCompare(b.packageName));\r\n\r\n\t\t\ttry{\r\n\t\t\t\t// This may give error if this modal was never been opened since startup\r\n\t\t\t\tref.refresh();\r\n\t\t\t} catch(e){}\r\n\r\n\t\t\tSmallNotif.add(`\"${packageName}\" example has been added`, 'green');\r\n\t\t}\r\n\t\telse ref[i].examples = list;\r\n\r\n\t\tlocalStorage.bpModuleExampleList = JSON.stringify(My.list);\r\n\t}\r\n});","## html\r\n<sf-m name=\"npm-package-info\">\r\n\t<div class=\"title\">{{ title }} (v{{ version }})</div>\r\n\t<div class=\"info\"><span>{{ author }}</span> <a style=\"display: {{ repository ? '' : 'none' }}\" href=\"{{ repository }}\" target=\"_blank\">(Repository)</a></div>\r\n\t<div class=\"description\">{{ description }}</div>\r\n\r\n\t<div class=\"list-info\">Please select module to import:</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item {{ x.active || '' }}\" sf-each=\"x in list\" @click=\"load(x)\">\r\n\t\t\t{{ x.url }} <i class=\"{{ x.active === 'loading' ? 'fa fa-spinner fa-spin' : '' }}\"></i>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"npm-package-info\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t> .info{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-top: -20px;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t> .description {\r\n\t\tcolor: white;\r\n\t\tpadding: 0 10px;\r\n\t}\r\n\t> .list-info {\r\n\t\tmargin-top: 10px;\r\n\t\tborder-top: 1px dashed white;\r\n\t\tpadding: 5px 10px 0 10px;\r\n\t}\r\n\t> .title{\r\n\t\tpadding: 10px;\r\n\t\tmargin-right: 40px;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-decoration: underline;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\r\n\t> .list-info{\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\r\n\t\t\t&.active{\r\n\t\t\t\tcolor: gray;\r\n\t\t\t}\r\n\t\t\t&.loading{\r\n\t\t\t\tcolor: burlywood;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -5px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('npm-package-info', function(My){\r\n\tMy.list = [];\r\n\tMy.title = '';\r\n\tMy.description = '';\r\n\tMy.version = '';\r\n\tMy.author = '';\r\n\tMy.date = '';\r\n\tMy.repository = '';\r\n\tMy.packageURL = '';\r\n\tMy.package = 0;\r\n\r\n\tMy.open = function(pkg, moduleList, exampleList){\r\n\t\tMy.list = moduleList;\r\n\t\tMy.exampleList = exampleList;\r\n\t\tMy.package = pkg;\r\n\t\tMy.title = pkg.name;\r\n\t\tMy.description = pkg.description || '';\r\n\t\tMy.version = pkg.version;\r\n\t\tMy.date = pkg.date.split('T')[0];\r\n\t\tMy.author = pkg.publisher.username || '';\r\n\t\tMy.repository = pkg.links.repository || '';\r\n\r\n\t\tMy.packageURL = `https://cdn.jsdelivr.net/npm/${pkg.name}@${pkg.version}`;\r\n\r\n\t\tlet temp = Blackprint.modulesURL;\r\n\t\tlet list = My.list;\r\n\t\tfor(let key in temp){\r\n\t\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\t\tlet item = list[i];\r\n\t\t\t\tif(key.includes(item.url))\r\n\t\t\t\t\titem.active = 'active';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tModal.goto('/npm-package-info');\r\n\t}\r\n\r\n\tlet progressToast;\r\n\tasync function theProgress(){\r\n\t\tif(progressToast) return;\r\n\r\n\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\r\n\r\n\t\t// todo: fix: sf.loader.onProgress\r\n\t\tlet temp = (function(loaded, total){\r\n\t\t\tif(loaded === total){\r\n\t\t\t\tsf.loader.DOMWasLoaded = true;\r\n\t\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\r\n\r\n\t\t\t\tprogressToast = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!progressToast) return;\r\n\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\r\n\t\t});\r\n\r\n\t\tlet intv = setInterval(()=> {\r\n\t\t\ttemp(sf.loader.loadedContent, sf.loader.totalContent);\r\n\t\t}, 500);\r\n\r\n\t\ttry{\r\n\t\t\tawait sf.loader.task;\r\n\t\t} catch(e){\r\n\t\t\tSmallNotif.add(e.message, 'red');\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\r\n\t\tclearInterval(intv);\r\n\r\n\t\tlet list = SmallNotif.list;\r\n\t\tlist.splice(list.indexOf(progressToast), 1);\r\n\t}\r\n\r\n\tMy.load = async function(item){\r\n\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(sf.loader.totalContent !== sf.loader.loadedContent)\r\n\t\t\t\ttheProgress();\r\n\t\t}, 500);\r\n\r\n\t\titem.active = 'loading';\r\n\r\n\t\ttry{\r\n\t\t\tawait Blackprint.loadModuleFromURL([My.packageURL + item.url], {\r\n\t\t\t\tloadBrowserInterface: true // set to \"false\" for Node.js/Deno\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tif(sf.loader.totalContent === sf.loader.loadedContent)\r\n\t\t\t\tsf.loader.DOMWasLoaded = true;\r\n\t\t}\r\n\r\n\t\tif(My.exampleList.length !== 0)\r\n\t\t\tModuleExampleList.add(My.title, My.exampleList, My.packageURL);\r\n\r\n\t\titem.active = 'active';\r\n\t\tMy.package._active = true;\r\n\t}\r\n\r\n\tMy.back = function(){\r\n\t\tModal.goto('/npm-packages');\r\n\t}\r\n});","## html\r\n<sf-m name=\"npm-packages\">\r\n\t<div class=\"description\">\r\n\t\tSearch package on NPM repository\r\n\t\t<i class=\"{{ loading ? 'fa fa-spinner fa-spin' : '' }}\"></i>\r\n\t</div>\r\n\t<div class=\"mini-description\" title=\"especially if you're not a developer, always becareful if someone ask you to do something with Blackprint, like inputting password or private key\">Always becareful and verify the module's source code before going to production</div>\r\n\t<div class=\"search\">\r\n\t\t<input type=\"text\" sf-bind=\"search\" @keyup.Enter=\"refreshList\" placeholder=\"Search...\">\r\n\t</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item {{ x.package._active && 'active' }} {{ x.package._update && 'update' }}\" sf-each=\"x in list\" @click=\"open(x.package)\">\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"title\">{{ x.package.name }} <span>(v{{ x.package.version }})</span></div>\r\n\t\t\t\t<div class=\"author\">{{ x.package.publisher.username }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"description\">{{ x.package.description }}</div>\r\n\t\t\t\t<div class=\"date\">{{ x.package.date.split('T')[0] }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"npm-packages\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.search-info{\r\n\t\tcolor: white;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t> .mini-description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-top: -20px;\r\n\t}\r\n\t> .description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.search{\r\n\t\tpadding: 0 5px;\r\n\t\tinput{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\twidth: calc(100% - 22px);\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\r\n\t\t\t&.active{\r\n\t\t\t\tcolor: gray;\r\n\t\t\t}\r\n\r\n\t\t\t.title{\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t}\r\n\t\t\t.description{\r\n\t\t\t\tfont-weight: normal;\r\n\t\t\t\tpadding-right: 80px;\r\n\t\t\t}\r\n\t\t\t.author{\r\n\t\t\t\tfloat: right;\r\n\t\t\t\tmargin-top: -24px;\r\n\t\t\t}\r\n\t\t\t.date{\r\n\t\t\t\tfloat: right;\r\n\t\t\t\tvertical-align: middle;\r\n\t\t\t\tmargin-top: -20px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('npm-packages', function(My){\r\n\tlet query = 'https://registry.npmjs.org/-/v1/search?text=blackprint%20nodes';\r\n\tMy.list = [];\r\n\tMy.search = '';\r\n\tMy.loading = false;\r\n\r\n\tMy.init = function(){\r\n\t\tMy.refreshList();\r\n\t}\r\n\r\n\tMy.refreshList = async function(){\r\n\t\tlet _query = query;\r\n\t\tif(My.search !== '')\r\n\t\t\t_query += '%20'+My.search;\r\n\r\n\t\tMy.loading = true;\r\n\t\tlet list = (await $.getJSON(_query)).objects;\r\n\t\tMy.loading = false;\r\n\r\n\t\t// ToDo: check if version was different with current loaded module\r\n\t\tlet temp = Blackprint.modulesURL;\r\n\t\tfor(let key in temp){\r\n\t\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\t\tlet item = list[i].package;\r\n\r\n\t\t\t\tif(key.includes(item.name)){\r\n\t\t\t\t\titem._active = true;\r\n\t\t\t\t\titem._update = Blackprint.utils.packageIsNewer(key, item.name+'@'+item.version);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMy.list = list;\r\n\t}\r\n\r\n\tMy.open = async function(pkg){\r\n\t\tMy.loading = true;\r\n\r\n\t\t// ToDo: do we need to sanitize URL? '-'\r\n\t\tlet dirs = await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${pkg.name}@${pkg.version}`);\r\n\t\tdirs = dirs.files;\r\n\r\n\t\tlet dist = [];\r\n\t\tlet example = [];\r\n\r\n\t\tfor (var i = 0; i < dirs.length; i++) {\r\n\t\t\tlet dir = dirs[i];\r\n\t\t\tif(dir.type !== 'directory') continue;\r\n\r\n\t\t\tif(dir.name === 'dist'){\r\n\t\t\t\tlet temp = dir.files;\r\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\tlet file = temp[a];\r\n\t\t\t\t\tif(file.type !== 'file') continue;\r\n\r\n\t\t\t\t\tlet name = file.name;\r\n\t\t\t\t\tif(/\\.(map|sf\\.mjs|sf\\.js|css)$/.test(name))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tdist.push({url: `/dist/${name}`});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(dir.name === 'example'){\r\n\t\t\t\tlet temp = dir.files;\r\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\tlet file = temp[a];\r\n\t\t\t\t\tif(file.type !== 'file') continue;\r\n\r\n\t\t\t\t\texample.push({url: `/example/${file.name}`});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMy.loading = false;\r\n\t\tsf.model('npm-package-info').open(pkg, dist, example);\r\n\t}\r\n});","## html\n<sf-m name=\"sketch-importer\">\n\t<div class=\"description\" title=\"To avoid any risks if you have stored sensitive data on this editor, make sure you have verify the author of the nodes and the JSON to be imported.\">Please verify the author before importing</div>\n\t<div class=\"info-modules\">\n\t\t<div class=\"title\">These modules will be imported:</div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in modules\">\n\t\t\t\t{{ x }}\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-nodes\">\n\t\t<div class=\"title\">These nodes will be used:</div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in nodes\">\n\t\t\t\t{{ x.name }} ({{ x.count }})\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-clear\">\n\t\t<div class=\"title\">Please be careful if you saved sensitive data on this editor<br>You can click below to clear the saved data:</div>\n\t\t<!-- Hi! can you contribute for clearing browser data like WebSQL or IndexedDB? -->\n\t\t<div class=\"button-clear\">\n\t\t\t<div @click=\"clear.localStorage\">\n\t\t\t\tLocal Storage ({{ savedKeys.localStorage.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sessionStorage\">\n\t\t\t\tSession Storage ({{ savedKeys.sessionStorage.length }})\n\t\t\t</div><br>\n\t\t\t<div @click=\"clear.environmentVariables\">\n\t\t\t\tEnvironment Variables ({{ savedKeys.environmentVariables.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sketchPages\">\n\t\t\t\tSketch Pages ({{ savedKeys.sketchPages.length }})\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"button-import\" @click=\"importNow\">\n\t\tImport Sketch\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"sketch-importer\"] {\n\tbackground: #1e1e1eab;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\tcolor: white;\n\tmax-width: 80vw;\n\t.description{\n\t\tpadding: 10px;\n\t\tmin-width: 500px;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tmargin-bottom: 10px;\n\t\ttext-decoration: underline;\n\t\tletter-spacing: 1px;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.info-modules, .info-nodes{\n\t\tbackground: #000000ab;\n\t\tpadding: 7px;\n\t\tborder-radius: 10px;\n\t\tmargin: 5px 2px;\n\t\t.title{\n\t\t\tcolor: gray;\n\t\t}\n\t}\n\t.info-clear{\n\t\tmargin-top: 10px;\n\t\t.title{\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t.list{\n\t\tlist-style-type: decimal;\n\t\tmargin: 5px 0;\n\t\tpadding: 0 30px;\n\t\tmax-height: 15vh;\n\t\toverflow: hidden auto;\n\t}\n\t.button-clear{\n\t\ttext-align: center;\n\t\tdiv{\n\t\t\tdisplay: inline-block;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px dashed #000;\n\t\t\tpadding: 7px;\n\t\t\tbackground: #000000ad;\n\t\t\tborder-radius: 20px;\n\t\t\tcursor: pointer;\n\t\t\t&:hover{\n\t\t\t\tbackground: #181818ad;\n\t\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t\t}\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global\nvar SketchImporter = sf.model('sketch-importer', function(My){\n\tMy.modules = [];\n\tMy.nodes = [];\n\tMy.pendingLoad = void 0;\n\tMy.savedKeys = {\n\t\tlocalStorage:[],\n\t\tsessionStorage:[],\n\t\tenvironmentVariables:[],\n\t\tsketchPages:[],\n\t};\n\n\tlet progressToast = false;\n\tlet progressTriggered = true;\n\n\tMy.loadJSON = async function(json){\n\t\tModal.goto('/sketch-importer');\n\n\t\tif(json.constructor === String)\n\t\t\tjson = JSON.parse(json);\n\n\t\tMy.pendingLoad = json;\n\n\t\tlet metadata = json._;\n\t\tMy.modules = (metadata && metadata.moduleJS) || [];\n\n\t\tMy.nodes = [];\n\t\tfor(let key in json){\n\t\t\tif(key === '_') continue;\n\n\t\t\tMy.nodes.push({name: key, count: json[key].length});\n\t\t}\n\n\t\tMy.checkSavedData();\n\t}\n\n\tMy.importNow = function(){\n\t\tif(My.pendingLoad === void 0){\n\t\t\tlet msg = \"Please call 'SketchImport.loadJSON' first\";\n\t\t\tconsole.error(msg);\n\n\t\t\tSmallNotif.add(msg, 'yellow');\n\t\t\treturn false;\n\t\t}\n\n\t\tModal.hide();\n\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\n\t\tsketch.__importing = true;\n\n\t\tasync function pageShowed(){\n\t\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\n\n\t\t\t// Add listener only once until finish\n\t\t\tif(progressTriggered){\n\t\t\t\tsf.loader.onProgress(function(loaded, total){\n\t\t\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\n\t\t\t\t\tprogressTriggered = true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Import from JSON, and also load required modules if exist\n\t\t\ttry{\n\t\t\t\tawait sketch.importJSON(My.pendingLoad);\n\t\t\t} catch(e) {\n\t\t\t\tSmallNotif.add(\"Failed to import data\", 'red');\n\t\t\t\tthrow e;\n\t\t\t} finally {\n\t\t\t\tsf.loader.DOMWasLoaded = true;\n\t\t\t\tdelete sketch.__importing;\n\t\t\t\tMy.pendingLoad = void 0;\n\t\t\t}\n\n\t\t\t// Clear toast\n\t\t\tlet list = SmallNotif.list;\n\t\t\tlist.splice(list.indexOf(progressToast), 1);\n\t\t}\n\n\t\tif(views.currentPath === '/sketch/1'){\n\t\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\t\treturn setTimeout(pageShowed, 400);\n\t\t}\n\n\t\tviews.goto('/sketch/1');\n\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\tsetTimeout(pageShowed, 1000); // Wait page animation\n\t}\n\n\tMy.checkSavedData = function(){\n\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\tMy.savedKeys.sketchPages = SketchList;\n\t}\n\n\tMy.clear = {\n\t\tlocalStorage(){\n\t\t\tlet keys = Object.keys(localStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete localStorage[keys[i]];\n\n\t\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\t},\n\t\tsessionStorage(){\n\t\t\tlet keys = Object.keys(sessionStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete sessionStorage[keys[i]];\n\n\t\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\t},\n\t\tenvironmentVariables(){\n\t\t\tlet ref = Blackprint.Environment;\n\t\t\tlet keys = Object.keys(ref.map);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tref.delete(keys[i]);\n\n\t\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\t},\n\t\tsketchPages(){\n\t\t\tfor (var i = 0; i < SketchList.length; i++)\n\t\t\t\tSketchList[i].destroy();\n\n\t\t\tSketchList.splice(1);\n\t\t\tviews.goto('/sketch/1');\n\t\t}\n\t};\n});","## html\r\n<div style=\"height:70vh\">\r\n\t<sf-m name=\"module-url\">\r\n\t\t<div class=\"head\">\r\n\t\t\t<div class=\"row url\">Shortened Module URL</div>\r\n\t\t\t<div class=\"row nodes\">Nodes</div>\r\n\t\t\t<div class=\"row actions\">Actions</div>\r\n\t\t</div>\r\n\t\t<div class=\"content\">\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"row\" sf-each=\"x in list\">\r\n\t\t\t\t\t<div class=\"column url\"><div>\r\n\t\t\t\t\t\t<b>{{ shortenLink(x._url, 'host') }}</b>\r\n\t\t\t\t\t\t{{ shortenLink(x._url, 'path') }}\r\n\t\t\t\t\t\t<b>{{ shortenLink(x._url, 'search') }}</b>\r\n\t\t\t\t\t\t<a title=\"Right click to copy link address, click to open on new tab\" target=\"_blank\" href=\"{{x._url}}\"><i class=\"fa fa-link\"></i></a>\r\n\t\t\t\t\t</div></div>\r\n\t\t\t\t\t<div class=\"column nodes\">\r\n\t\t\t\t\t\t{{ x._nodeLength }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"column actions\">\r\n\t\t\t\t\t\t<button title=\"Show this module on dropdown/module list\" @click=\"hideFromURL(x)\">\r\n\t\t\t\t\t\t\t <i class=\"fa fa-list\"></i>\r\n\t\t\t\t\t\t\t <i class=\"fa fa-slash\" style=\"\r\n\t\t\t\t\t\t\t    position: absolute;\r\n\t\t\t\t\t\t\t    margin-left: -15px;\r\n\t\t\t\t\t\t\t    display: {{ x._hidden ? 'inline-block' : 'none' }}\r\n\t\t\t\t\t\t\t\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button title=\"Reload this module again from URL\" @click=\"reloadURL(x)\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-sync\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button title=\"Remove any related nodes and also remove this module\" @click=\"deleteFromURL(x)\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<input class=\"column url-input\" type=\"text\" @keyup.Enter=\"addURL()\" sf-bind=\"newURL\" placeholder=\"Add module from URL here... (Then press enter)\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"menu\">\r\n\t\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\r\n\t\t\t<div class=\"item\" @click=\"npmList\" title=\"Search from NPM\"><i class=\"fa fa-book-open\"></i></div>\r\n\t\t\t<div class=\"item\" @click=\"loadCachedList\" style=\"{{ firstInit ? '' : 'display: none' }}\" title=\"Load cached list\"><i class=\"fa fa-boxes\"></i></div>\r\n\t\t</div>\r\n\t</sf-m>\r\n</div>\r\n\r\n## scss-global\r\nsf-m[name=\"module-url\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tmin-width: 700px;\r\n\r\n\t.head{\r\n\t\tletter-spacing: 1px;\r\n\t\ttext-align: center;\r\n\t\tdisplay: flex;\r\n\t\tbackground: #00000040;\r\n\t\t.row{\r\n\t\t\tcolor: #fff;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\toutline: 1px solid #000;\r\n\t\t\tcursor: default;\r\n\t\t\t&.url{\r\n\t\t\t\twidth: 58%;\r\n\t\t\t}\r\n\t\t\t&.nodes{\r\n\t\t\t\twidth: 19%;\r\n\t\t\t}\r\n\t\t\t&.actions{\r\n\t\t\t\twidth: 22%;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.content{\r\n\t\t.row{\r\n\t\t\tbackground: #00000094;\r\n\t\t\tdisplay: flex;\r\n\t\t\t.column{\r\n\t\t\t\tcolor: #fff;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\twidth: 50%;\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t\toutline: 1px solid #000;\r\n\t\t\t\t&.url{\r\n\t\t\t\t\twidth: 60%;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\twhite-space: nowrap;\r\n\t\t\t\t\tmargin-bottom: -10px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t\tfont-size: 14px;\r\n\t\t\t\t\tb{\r\n\t\t\t\t\t\tmargin-right: 4px;\r\n\t\t\t\t\t\tcolor: #696969;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv{\r\n\t\t\t\t\t\toverflow-x: scroll;\r\n\t\t\t\t\t\tpadding-bottom: 10px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t&.nodes{\r\n\t\t\t\t\twidth: 17.5%;\r\n\t\t\t\t}\r\n\t\t\t\t&.actions{\r\n\t\t\t\t\twidth: 22%;\r\n\t\t\t\t}\r\n\t\t\t\t&.url-input{\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tcolor: gray;\r\n\t\t\t\t\tbackground: #00000094;\r\n\t\t\t\t\tborder: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.actions{\r\n\t\t\tbutton{\r\n\t\t\t\tborder: 0;\r\n\t\t\t\tbackground: none;\r\n\t\t\t\tcolor: #fff;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t\t.cross{\r\n\t\t\t\ttext-decoration: line-through;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -50px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 2px solid #456357;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton: {\r\n\t\tcoming(){ _editorModuleURL.sortURL() }\r\n\t}\r\n}\r\n\r\n## js-global\r\nlet _editorModuleURL = sf.model('module-url', function(My){\r\n\tMy.list = Blackprint._modulesURL;\r\n\tMy.firstInit = false && !!localStorage.bpModuleURLList; // disable it for now\r\n\tMy.newURL = '';\r\n\r\n\tlet lastModuleList = localStorage.bpModuleURLList;\r\n\r\n\tMy.init = async function(){\r\n\t\t// First initialization cycle\r\n\t}\r\n\r\n\tMy.sortURL = function() {\r\n\t\tMy.list.sort((a, b) => a._url.localeCompare(b._url));\r\n\t\tMy.list.refresh();\r\n\r\n\t\tif(My.list.length === 0) return;\r\n\r\n\t\tlocalStorage.bpModuleURLList = JSON.stringify(My.list.map(v => v._url));\r\n\t}\r\n\r\n\tMy.shortenLink = function(url, which){\r\n\t\turl = new URL(url);\r\n\r\n\t\tif(which === 'search')\r\n\t\t\treturn url.search;\r\n\r\n\t\tif(which === 'host')\r\n\t\t\treturn url.host || location.host;\r\n\r\n\t\t// which === 'path'\r\n\t\tlet path = url.pathname;\r\n\t\tif(path.includes('@dist'))\r\n\t\t\treturn path.replace(/(cjs|mjs)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\r\n\r\n\t\treturn path.replace(/(cjs|mjs|dist)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\r\n\t}\r\n\r\n\tasync function loadModuleURL(url, options){\r\n\t\tlet temp = My.newURL;\r\n\t\tMy.newURL = '';\r\n\r\n\t\tlet progressToast = SmallNotif.add(\"Loading\", 'yellow', false);\r\n\r\n\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\r\n\t\tsf.loader.onProgress(function(loaded, total){\r\n\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tawait Blackprint.loadModuleFromURL(url, options);\r\n\t\t\tawait sf.loader.task;\r\n\t\t\tSmallNotif.add(\"Module sucessfully loaded\", 'green');\r\n\t\t} catch(e) {\r\n\t\t\tSmallNotif.add(\"Failed to load module\", 'red');\r\n\t\t\tconsole.error(e);\r\n\t\t\tMy.newURL = temp;\r\n\t\t} finally {\r\n\t\t\tsf.loader.DOMWasLoaded = true; // reset flag\r\n\t\t}\r\n\r\n\t\t// Clear toast\r\n\t\tlet list = SmallNotif.list;\r\n\t\tlist.splice(list.indexOf(progressToast), 1);\r\n\r\n\t\tMy.sortURL();\r\n\t}\r\n\r\n\tMy.addURL = function(){\r\n\t\tlet list = My.list;\r\n\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tlet temp = list[i];\r\n\t\t\tif(My.newURL === temp._url)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(My.newURL.replace(/\\?.*?$/m, '') === temp._url.replace(/\\?.*?$/m, '')){\r\n\t\t\t\ttemp._url = My.newURL.replace(/\\?.*?$/m, '');\r\n\t\t\t\tloadModuleURL(temp._url, {\r\n\t\t\t\t\tloadBrowserInterface: true\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = My.newURL.replace(/\\?.*?$/m, '') + '?'+ (Date.now()/1000|0);\r\n\t\tloadModuleURL(url, {\r\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\r\n\t\t});\r\n\t}\r\n\r\n\tMy.reloadURL = function(item){\r\n\t\tif(/\\?[0-9]/.test(item._url))\r\n\t\t\titem._url = item._url.replace(/\\?([0-9]+)/, (full, num) => '?'+(1+Number(num)));\r\n\t\telse if(item._url.includes('?'))\r\n\t\t\titem._url = item._url.replace(/\\?.*?$/m, '')+'?1';\r\n\t\telse item._url += '?1';\r\n\r\n\t\tfor (var i = 0; i < SketchList.length; i++)\r\n\t\t\tSketchList[i]._remote?.syncModuleList();\r\n\r\n\t\tBlackprint.loadModuleFromURL(item._url);\r\n\t}\r\n\r\n\tlet { diveModuleURL } = Blackprint.utils;\r\n\tMy.hideFromURL = function(item){\r\n\t\tlet url = item._url.replace(/\\?.*?$/m, '');\r\n\t\tlet hidden = item._hidden = !item._hidden;\r\n\r\n\t\tdiveModuleURL(Blackprint.modulesURL[url], function(deepObject, deepProp, keys, bubble){\r\n\t\t\tdeepObject[deepProp].hidden = hidden;\r\n\r\n\t\t\t// Bubbling check if the parent has no child anymore\r\n\t\t\tfor (var i = bubble.length-1; i >= 0; i--) {\r\n\t\t\t\tlet ref = bubble[i];\r\n\r\n\t\t\t\tif(--ref.val._visibleNode <= 0){\r\n\t\t\t\t\tif(i === 0){\r\n\t\t\t\t\t\tBlackprint.nodes[keys[0]].hidden = hidden;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet parent = bubble[i-1];\r\n\t\t\t\t\tparent.val[ref.key].hidden = hidden;\r\n\t\t\t\t}\r\n\t\t\t\telse break;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tMy.deleteFromURL = function(item){\r\n\t\tlet list = My.list;\r\n\t\tvar index = list.indexOf(item);\r\n\r\n\t\tif(index === -1) return;\r\n\t\tlet url = item._url.replace(/[?#].*?$/m, '');\r\n\r\n\t\tBlackprint.deleteModuleFromURL(url);\r\n\t}\r\n\r\n\tBlackprint.on('moduleDelete', { slot: 'bp-editor' }, function({ url }) {\r\n\t\tlet styles = document.styleSheets;\r\n\t\tlet simplifiedURL = url.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\r\n\r\n\t\tfor (var i = 0; i < styles.length; i++) {\r\n\t\t\tlet style = styles[i];\r\n\t\t\tif(style.href == null) continue;\r\n\r\n\t\t\tlet temp = style.href.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\r\n\t\t\tif(temp === simplifiedURL){\r\n\t\t\t\tstyle.ownerNode.remove();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet list = My.list;\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tif(list[i]._url.includes(simplifiedURL)){\r\n\t\t\t\tlist.splice(i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tMy.npmList = function(){\r\n\t\tmodal.goto('/npm-packages');\r\n\t}\r\n\r\n\tMy.loadCachedList = function(){\r\n\t\tlet list = lastModuleList;\r\n\t\tif(!list) return;\r\n\r\n\t\tlist = JSON.parse(list);\r\n\t\tif(list.length === 0) return;\r\n\r\n\t\tMy.firstInit = false;\r\n\r\n\t\tloadModuleURL(list, {\r\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\r\n\t\t});\r\n\t}\r\n\r\n\tMy.close = function(){\r\n\t\tModal.hide();\r\n\t\tmodal.goto('/');\r\n\t}\r\n});","## html\r\n<sf-m name=\"modal-remote-engine-connect\">\r\n\t<div class=\"description\">Please set the remote engine URL</div>\r\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default localhost server)</div>\r\n\t<div class=\"text-input\">\r\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\r\n\t</div>\r\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"modal-remote-engine-connect\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t}\r\n\t.note{\r\n\t\ttext-align: center;\r\n\t\tfont-size: 12px;\r\n\t\tpadding: 0;\r\n\t\tcolor: gray;\r\n\t\tmargin-top: -10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.text-input{\r\n\t\tpadding: 10px;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\r\n\t\tinput{\r\n\t\t\twidth: 100%;\r\n\t\t\tborder: 1px solid black;\r\n\t\t\tbackground: #161616;\r\n\t\t\tpadding: 5px;\r\n\t\t\tcolor: white;\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\t.button-import{\r\n\t\tposition: relative;\r\n\t\tborder-radius: 10px;\r\n\t\tbackground: #125c15;\r\n\t\tborder: 1px solid #65a122;\r\n\t\tmargin: 0 auto 5px auto;\r\n\t\twidth: 120px;\r\n\t\tpadding: 7px 10px;\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\t&:hover{\r\n\t\t\tbackground: #65a122;\r\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-engine-connect').$el('input').focus();\r\n\t\t\t}, 500);\r\n\t\t},\r\n\t\tshowed(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-engine-connect').$el('input').focus();\r\n\t\t\t}, 100);\r\n\t\t},\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('modal-remote-engine-connect', function(My){\r\n\tMy.url = localStorage.BPRemoteEngine ??= \"\";\r\n\tMy.placeholder = 'http://localhost:2345';\r\n\tMy.allowModuleSync = true;\r\n\tMy.allowRemoteImport = true;\r\n\tMy.allowDataOutSync = true;\r\n\tMy.client = null;\r\n\tMy.socket = null;\r\n\r\n\tMy.connectDefault = function(){\r\n\t\tlocalStorage.BPRemoteEngine = My.url = \"\";\r\n\t\tMy.changeServer();\r\n\t}\r\n\r\n\tlet isConnectOnStartup = false;\r\n\tMy.changeServer = async function(clearOnFail){\r\n\t\tlet url = My.url;\r\n\t\tif(!url) url = My.placeholder;\r\n\r\n\t\tif(window.io == null)\r\n\t\t\tawait sf.loader.js(['https://cdn.socket.io/4.4.1/socket.io.min.js']);\r\n\r\n\t\tlet instance = window.SketchList[0];\r\n\t\tlet client = My.client ??= new Blackprint.RemoteControl(instance);\r\n\t\tMy.client.enable?.();\r\n\r\n\t\tMy.socket?.destroy();\r\n\t\tlet socket = My.socket = io(url);\r\n\r\n\t\tsocket.on('startup-time', time => {\r\n\t\t\tif((Date.now() - time) < 10e3) // younger than 10 sec\r\n\t\t\t\tclient.sendSketchToRemote();\r\n\t\t\telse {\r\n\t\t\t\tclient.importRemoteJSON();\r\n\t\t\t\tclient.once('empty.json.import', function(){\r\n\t\t\t\t\tclient.sendSketchToRemote();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tclient.on('disabled', ()=> SmallNotif.add(\"Remote sync was disabled\", 'red'));\r\n\t\tclient.on('remote-save.begin', function(){\r\n\t\t\tSmallNotif.add('Sketch saved on remote');\r\n\t\t});\r\n\r\n\t\t// instance.syncDataOut = false;\r\n\t\tinstance.disablePorts = true;\r\n\r\n\t\t// Allow import/module sync\r\n\t\tclient.onImport = v=> My.allowRemoteImport;\r\n\t\tclient.onModule = v=> My.allowModuleSync;\r\n\r\n\t\tsocket.on('relay', v => client.onSyncIn(v));\r\n\t\tclient.onSyncOut = v => socket.emit('relay', v);\r\n\r\n\t\tif(Modal.showed) Modal.hide();\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(socket.connected) return;\r\n\t\t\tconsole.log(\"Failed to connect to remote engine:\", url);\r\n\t\t\tSmallNotif.add(\"Failed to connect to remote engine\", \"red\");\r\n\t\t\tsocket.destroy();\r\n\r\n\t\t\t// Unset the value if this was failing on startup time\r\n\t\t\tif(clearOnFail)\r\n\t\t\t\tlocalStorage.BPRemoteEngine = \"\";\r\n\t\t}, 8000);\r\n\r\n\t\tsocket.on('disconnect', ()=> SmallNotif.add(\"Disconnected from remote engine\"));\r\n\t\tsocket.on('connect', function(){\r\n\t\t\tconsole.log(\"Connected to remote engine:\", url);\r\n\t\t\tSmallNotif.add(\"Connected to remote engine\", \"green\");\r\n\t\t\tlocalStorage.BPRemoteEngine = url;\r\n\t\t});\r\n\t}\r\n\r\n\tif(My.url !== '' && Blackprint.RemoteControl != null){\r\n\t\t$(() => setTimeout(()=> My.changeServer(true), 200));\r\n\t}\r\n});","## html\r\n<sf-m name=\"modal-remote-sketch-connect\">\r\n\t<div class=\"description\">Please set the remote sketch's relay URL</div>\r\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default localhost server)</div>\r\n\t<div class=\"text-input\">\r\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\r\n\t</div>\r\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"modal-remote-sketch-connect\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t}\r\n\t.note{\r\n\t\ttext-align: center;\r\n\t\tfont-size: 12px;\r\n\t\tpadding: 0;\r\n\t\tcolor: gray;\r\n\t\tmargin-top: -10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.text-input{\r\n\t\tpadding: 10px;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\r\n\t\tinput{\r\n\t\t\twidth: 100%;\r\n\t\t\tborder: 1px solid black;\r\n\t\t\tbackground: #161616;\r\n\t\t\tpadding: 5px;\r\n\t\t\tcolor: white;\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\t.button-import{\r\n\t\tposition: relative;\r\n\t\tborder-radius: 10px;\r\n\t\tbackground: #125c15;\r\n\t\tborder: 1px solid #65a122;\r\n\t\tmargin: 0 auto 5px auto;\r\n\t\twidth: 120px;\r\n\t\tpadding: 7px 10px;\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\t&:hover{\r\n\t\t\tbackground: #65a122;\r\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-sketch-connect').$el('input').focus();\r\n\t\t\t}, 500);\r\n\t\t},\r\n\t\tshowed(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-sketch-connect').$el('input').focus();\r\n\t\t\t}, 100);\r\n\t\t},\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('modal-remote-sketch-connect', function(My){\r\n\tMy.url = localStorage.BPSketchRelayServer ??= \"\";\r\n\tMy.placeholder = 'http://localhost:2345';\r\n\tMy.allowModuleSync = true;\r\n\tMy.allowRemoteImport = true;\r\n\tMy.allowDataOutSync = true;\r\n\tMy.client = null;\r\n\tMy.socket = null;\r\n\r\n\tMy.connectDefault = function(){\r\n\t\tlocalStorage.BPSketchRelayServer = My.url = \"\";\r\n\t\tMy.changeServer();\r\n\t}\r\n\r\n\tMy.changeServer = async function(clearOnFail){\r\n\t\tlet url = My.url;\r\n\r\n\t\tif(window.io == null)\r\n\t\t\tawait sf.loader.js(['https://cdn.socket.io/4.4.1/socket.io.min.js']);\r\n\r\n\t\tlet instance = window.SketchList[0];\r\n\t\tlet client = My.client ??= new Blackprint.RemoteSketch(instance);\r\n\t\tMy.client.enable?.();\r\n\r\n\t\t// Allow import/module sync\r\n\t\tclient.onImport = v=> My.allowRemoteImport;\r\n\t\tclient.onModule = v=> My.allowModuleSync;\r\n\t\tclient.on('disabled', ()=> SmallNotif.add(\"Remote sync was disabled\", 'red'));\r\n\r\n\t\tMy.socket?.destroy();\r\n\t\tlet socket = My.socket = io(url);\r\n\r\n\t\tsocket.on('relay', v => client.onSyncIn(v));\r\n\t\tclient.onSyncOut = v => socket.emit('relay', v);\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(socket.connected) return;\r\n\t\t\tconsole.log(\"Failed to connect to sketch's relay server:\", url);\r\n\t\t\tSmallNotif.add(\"Failed to connect to sketch's relay server\", \"red\");\r\n\t\t\tsocket.destroy();\r\n\r\n\t\t\t// Unset the value if this was failing on startup time\r\n\t\t\tif(clearOnFail)\r\n\t\t\t\tlocalStorage.BPSketchRelayServer = '';\r\n\t\t}, 8000);\r\n\r\n\t\tsocket.on('disconnect', ()=> SmallNotif.add(\"Disconnected from relay server\"));\r\n\t\tsocket.on('connect', function(){\r\n\t\t\tconsole.log(\"Connected to sketch's relay server:\", url);\r\n\t\t\tSmallNotif.add(\"Connected to sketch's relay server\", \"green\");\r\n\t\t\tlocalStorage.BPSketchRelayServer = url;\r\n\t\t});\r\n\r\n\t\tif(Modal.showed) Modal.hide();\r\n\t}\r\n\r\n\tif(My.url !== '' && Blackprint.RemoteSketch != null){\r\n\t\t$(() => setTimeout(()=> My.changeServer(true), 200))\r\n\t}\r\n});","## html\r\n<sf-m name=\"sketch-settings\">\r\n\t<div class=\"description\">Settings</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\">\r\n\t\t\t<div class=\"title\">Theme:</div>\r\n\t\t\t<select sf-bind=\"theme\">\r\n\t\t\t\t<option value=\"default\">Default</option>\r\n\t\t\t\t<option value=\"darker\">Darker</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class=\"item\">\r\n\t\t\t<div class=\"title\">Background:</div>\r\n\t\t\t<input type=\"text\" sf-bind=\"background\" placeholder=\"https://...\">\r\n\t\t</div>\r\n\t\t<div class=\"item\">\r\n\t\t\t<div class=\"title\">Hide unused port</div>\r\n\t\t\t<input type=\"checkbox\" sf-bind=\"hideUnusedPort\">\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"sketch-settings\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 5px;\r\n\t\tcolor: white;\r\n\t\tborder-bottom: 1px solid black;\r\n\t\tbackground: #111;\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\t.title{\r\n\t\t\t\tdisplay: inline;\r\n\t\t\t\tmargin-right: 10px;\r\n\t\t\t}\r\n\t\t\tselect, input{\r\n\t\t\t\tbackground: black;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tcolor: white;\r\n\t\t\t\toutline: none;\r\n\t\t\t\tpadding: 5px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('sketch-settings', function(My){\r\n\tMy.theme = 'default';\r\n\tMy.on$theme = function(now){\r\n\t\t$('body')\r\n\t\t\t.removeClass('node-ui-'+My.theme)\r\n\t\t\t.addClass('node-ui-'+now);\r\n\t}\r\n\r\n\tMy.background = localStorage.bpBackgroundURL || '';\r\n\tMy.on$background = function(now){\r\n\t\t$('body > .background > .img')\r\n\t\t\t.css('background-image', \"url('\"+(now || '/assets/img/background/black3.jpg')+\"')\")\r\n\t\t\t.css('background-size', \"cover\");\r\n\r\n\t\tlocalStorage.bpBackgroundURL = now;\r\n\t}\r\n\r\n\tMy.hideUnusedPort = localStorage.bpHideUnusedPort == 'true' || false;\r\n\tMy.on$hideUnusedPort = function(now){\r\n\t\tfor (var i = 0; i < SketchList.length; i++) {\r\n\t\t\tlet container = SketchList[i].scope('container');\r\n\t\t\tcontainer.hideUnusedPort = now;\r\n\r\n\t\t\tlet nodes = container.nodeScope.list;\r\n\t\t\tfor (var a = 0; a < nodes.length; a++)\r\n\t\t\t\tnodes[a].hideUnusedPort = now;\r\n\t\t}\r\n\r\n\t\tlocalStorage.bpHideUnusedPort = now;\r\n\t}\r\n\r\n\tif(My.background) My.on$background(My.background);\r\n});"]}