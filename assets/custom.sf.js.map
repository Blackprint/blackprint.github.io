{"version":3,"sources":["component/dropdown.sf","component/SmallNotif.sf","model/Loading.sf","model/modal.sf","routes/+vw-ground/index.sf","routes/+vw-ground/sketch.sf","routes/+vw-modal/custom-node-editor.sf","routes/+vw-modal/dev-mode.sf","routes/+vw-modal/environment-variables.sf","routes/+vw-modal/example-list.sf","routes/+vw-modal/module-example-list-deep.sf","routes/+vw-modal/module-example-list.sf","routes/+vw-modal/module-url.sf","routes/+vw-modal/npm-package-info.sf","routes/+vw-modal/npm-packages.sf","routes/+vw-modal/sketch-importer.sf","routes/+vw-modal/sketch-settings.sf","routes/+vw-ground/sketch+vw-page/_page.sf"],"names":["DropDown","sf","model","My","menus","onCancel","className","pendingDeepOpen","pendingDeepOpen_","icon","more","show","x","y","event","element","title","length","splice","backdropCreated","backdrop","insertBefore","Window","source","$el","setTimeout","addClass","$","on","backdropListener","once","ev","preventDefault","addBackdrop","rect","getBoundingClientRect","height","i","hide","push","getElement","deepRemove","removeBackdrop","target","parent","removeClass","remove","off","component","template","include","$item","visible","hidden","options","_parent","root","width","disabled","currentDeepLevel","init","el","ulElem","querySelector","afterRepaint","then","w","offsetWidth","offsetHeight","focus","innerWidth","innerHeight","opt","elem","getElements","deep","clearTimeout","hover","apply","context","args","callback","unhover","openDeep","yi","ul","scrollTop","append","children","offsetTop","$DropDown","$space","sf$noGC","SmallNotif","list","on$list","create","animateKey","window","templates","add","message","color","delay","item","timer","indexOf","close","Loading","showed","desc","set","text","Modal","hotReloaded","views","Views","listSelector","outside","goto","path","toWorkspace","SketchList","openExamples","miniViewer","topRight","topRightHidden","on$topRight","now","content","async","monaco","loader","js","monaco_loader","container","recreate","editor","dispose","statusEl","find","value","language","theme","minimap","enabled","css","run","eval","getValue","modal","url","localStorage","BPModuleServer","placeholder","location","origin","hostname","pathname","connectDefault","changeServer","_url","slice","___browserSync___","e","socketUrl","socket","onConnected","console","log","disconnect","connected","nsp","io","uri","connect","newModuleLoaded","moduleList","Object","values","getJSON","Blackprint","loadModuleFromURL","loadBrowserInterface","pendingResources","size","hotReload","caretFocusOnLastItem","Environment","newValue","newKey","v2m$newKey","validateKey","itemChanged","_refreshEnvironment","map","uniq","Set","key","has","delete","Number","isNaN","replace","toUpperCase","open","obj","sampleList","clearNodes","Sketch","__importing","SketchImporter","pendingLoad","importNow","packageName","baseUrl","openModal","pkg","examples","temp","name","packageURL","openExample","loadJSON","back","ModuleExampleList","EditorHeader","_moduleExampleList","cache","bpModuleExampleList","JSON","parse","ref","sort","a","b","localeCompare","refresh","stringify","_editorModuleURL","_modulesURL","firstInit","bpModuleURLList","newURL","lastModuleList","loadModuleURL","progressToast","DOMWasLoaded","onProgress","loaded","total","task","error","sortURL","v","shortenLink","which","URL","search","host","includes","split","join","addURL","Date","reloadURL","test","full","num","diveModuleURL","utils","hideFromURL","_hidden","modulesURL","deepObject","deepProp","keys","bubble","val","_visibleNode","nodes","deleteFromURL","deleteModuleFromURL","slot","styles","document","styleSheets","simplifiedURL","style","href","ownerNode","npmList","loadCachedList","description","version","author","date","repository","package","exampleList","publisher","username","links","active","loading","loadCount","theProgress","finished","load","_active","refreshList","_query","objects","_update","packageIsNewer","dirs","files","dist","example","dir","type","file","modules","savedKeys","sessionStorage","environmentVariables","sketchPages","progressTriggered","json","constructor","String","metadata","_","moduleJS","count","checkSavedData","msg","sketch","pageShowed","importJSON","currentPath","clear","destroy","on$theme","data","page","_event","$_fallback","BlackprintEventFallback","settings","space","cloneContainer","SketchPages","scope","header","onScale","scale","info","Math","round","sfm","firstElementChild","eq","hasClass","prepend","cloneActive","switchVFXActive","switchVFX","mini","refreshViewport","pos","templateHTML","iface","menu","unshift","id","Swal","fire","input","isConfirmed","Error"],"mappings":"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","sourcesContent":["## comment, This will be used for sf-each for above element\n## html\n<drop-down class=\"dropdown-menu {{hidden}}\" style=\"\n    display: {{visible ? 'block' : 'none'}};\n    transform: translate({{ x | 0 }}px, {{ y | 0 }}px);\n  \">\n  <div class=\"first\" style=\"display: {{ !title && 'none' }}\">{{ title || '' }}</div>\n  <ul>\n    <li sf-each=\"x in options\" :class=\"{{ x.divider ? 'divider' : '' }} {{ x.disabled ? 'disabled' : '' }}\" title=\"{{ x.info || '' }}\">\n      {{@if x.title !== undefined:\n      \t{[ <a> ]} // Begin\n\n      \t// Icon on the left\n      \tif(x.icon !== void 0){\n      \t\tif(x.icon.includes('//'))\n      \t\t\t{[ <img class=\"dropdown-icon\" :src=\"{{x.icon}}\"> ]};\n      \t\telse\n      \t\t\t{[ <i class=\"dropdown-icon {{x.icon}}\"></i> ]};\n      \t}\n\n      \t// Always use { [ enclosed template ]} to avoid vulnerability\n      \t// like the text being parsed as HTML\n      \t{[ <div>{{ x.title }}</div> ]} // Content\n\n      \t// Add icon if the has deep menu\n      \tif(x.deep !== void 0)\n      \t\t{[ <i class=\"{{ root.icon.more }} has-deep\"></i> ]};\n\n      \t{[ </a> ]} // End\n      }}\n    </li>\n  </ul>\n</drop-down>\n\n## scss-global\n.dropdown-menu {\n\tz-index: 10000;\n\topacity: 0.9;\n\n\tmargin-top: 7px;\n\tbackground-color: rgba(255, 255, 255, 0.96);\n\tbox-shadow: 1px 1px 11px 3px black;\n    border: inherit;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 0;\n    border-radius: 3px;\n    background: white;\n\n    // transition: 0.3s ease-out;\n    // transition-property: visibility, opacity;\n    &.hidden{\n\t\tvisibility: hidden;\n\t\topacity: 0;\n    }\n    ul{\n    \toverflow-x: hidden;\n    \toverflow-y: auto;\n    \tmax-height: 300px;\n    }\n\n\tli {\n\t\tposition: relative;\n\t\tvertical-align: baseline;\n\t\tdisplay: inherit !important;\n\t\tpadding: 8px 16px 8px 8px;\n\t\tmin-width: 110px;\n\t\tborder-bottom: 1px dashed darkgray;\n\t\tfont-size: 16px;\n\n\t\t> * {\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t&:hover{\n\t\t\tbackground: lightgray;\n\t\t}\n\n\t\tcursor: pointer;\n    \tcolor: black;\n\t}\n}\n\ndrop-down.dropdown-menu drop-down{\n\topacity: 1;\n}\n\n.ground-backdrop{\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: rgba(0,0,0,.4);\n\tz-index: 10000;\n\tvisibility: hidden;\n\topacity: 0;\n\ttransition-duration: .2s;\n\n\t&.show{\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t}\n}\n\nul li .has-deep{\n\ttop: 11px;\n\tposition: absolute;\n\tright: 5px;\n}\n\ndrop-down{\n\t&> .first {\n\t\tdisplay: block;\n\t\tpadding: 5px 10px;\n\t\ttext-align: center;\n\t\tfont-weight: bold;\n\t\tfont-size: 16px;\n\t\ttext-transform: capitalize;\n\t\tletter-spacing: 1px;\n\t\tcolor: white;\n\t\tbackground: #ba2f63;\n\t\tbox-shadow: 0 0 5px #d12867;\n\t}\n\tul{\n\t\tmargin: 0;\n\t\tpadding: 0;\n\n\t\tli a {\n\t\t\tdisplay: flex;\n\t\t\tdiv{\n\t\t\t\tpadding-left: 5px;\n\t\t\t}\n\t\t}\n\n\t\t.dropdown-icon {\n\t\t\tpadding-right: 5px;\n\t\t\tfloat: left;\n\t\t\talign-self: center;\n\t\t}\n\n\t\tli.disabled, li.disabled:hover{\n\t\t\tcursor: default !important;\n\t\t\tbackground: #888;\n\t\t}\n\t}\n}\n\n## js-global\n// =====================================================================\n// ============== Model <sf-m name=\"dropdown\"></sf-m> ==================\n// =====================================================================\nvar DropDown = sf.model('dropdown', function(My){\n\tMy.menus = [];\n\tMy.onCancel = void 0;\n\tMy.className = '';\n\tMy.pendingDeepOpen = false;\n\tMy.pendingDeepOpen_ = 0;\n\n\tMy.icon = {\n\t\tmore: 'fa fa-chevron-right'\n\t};\n\n\t// menus: [{title, callback}, {title, deep:[{...}]}, ...]\n\tMy.show = function(menus, { x, y, event, element, title, className }){\n\t\t// Remove last dropdown if haven't been closed\n\t\tif(My.menus.length !== 0)\n\t\t\tMy.menus.splice(0);\n\t\telse\n\t\t\taddBackdrop();\n\n\t\tmenus.title = title;\n\n\t\tif(element !== void 0){\n\t\t\tlet rect = element.getBoundingClientRect();\n\t\t\tmenus.x = rect.x + 5;\n\t\t\tmenus.y = rect.y + rect.height;\n\t\t}\n\t\telse if(x !== void 0){\n\t\t\tmenus.x = x;\n\t\t\tmenus.y = y;\n\t\t}\n\t\telse{\n\t\t\tmenus.x = event.x;\n\t\t\tmenus.y = event.y;\n\t\t\tmenus.event = event;\n\t\t}\n\n\t\tfor (var i = menus.length - 1; i >= 0; i--) {\n\t\t\tif(menus[i].hide)\n\t\t\t\tmenus.splice(i, 1);\n\t\t}\n\n\t\tMy.className = className || '';\n\t\tMy.menus.push(menus);\n\t\treturn My;\n\t}\n\n\tMy.hide = function(){\n\t\tfor (var i = 0; i < My.menus.length; i++)\n\t\t\tMy.menus.getElement(i).model.deepRemove();\n\n\t\tMy.pendingDeepOpen = false;\n\t\tMy.pendingDeepOpen_ = 0;\n\t\tMy.menus.splice(0);\n\t\tremoveBackdrop();\n\n\t\tMy.className = '';\n\t}\n\n\tvar backdropCreated = false;\n\tfunction backdropListener(ev){\n\t\tif($(ev.target).parent('sf-m')[0] === sf.Window.source(My.$el))\n\t\t\treturn;\n\n\t\tremoveBackdrop();\n\n\t\tMy.hide();\n\t\tMy.onCancel && My.onCancel();\n\t}\n\n\tvar backdrop = $('<div class=\"ground-backdrop\"></div>');\n\tfunction addBackdrop(){\n\t\tif(backdropCreated) return;\n\n\t\tbackdrop.insertBefore(sf.Window.source(My.$el));\n\t\tsetTimeout(function(){\n\t\t\tbackdrop.addClass('show');\n\t\t\t$(sf.Window).on('pointerdown', backdropListener);\n\t\t\t$(sf.Window).once('contextmenu', ev => ev.preventDefault());\n\t\t\tbackdropCreated = true;\n\t\t}, 10);\n\t}\n\n\tfunction removeBackdrop(){\n\t\tbackdropCreated = false;\n\t\tbackdrop.removeClass('show');\n\n\t\tsetTimeout(()=> {\n\t\t\tbackdrop.remove();\n\t\t}, 200);\n\n\t\t$(sf.Window).off('pointerdown', backdropListener);\n\t}\n});\n\n// =====================================================================\n// ============== Component <drop-down></drop-down> ====================\n// =====================================================================\nsf.component('drop-down', {template: #this.path}, function(My, include, $item){\n\tMy.visible = false;\n\tMy.hidden = 'hidden'; // We also need to hide it before repaint\n\n\tMy.options = $item;\n\tMy._parent = $item._parent;\n\tMy.x = $item.x;\n\tMy.y = $item.y;\n\tMy.root = include('dropdown');\n\tMy.width = 0;\n\tMy.height = 0;\n\tMy.disabled = $item.disabled === true;\n\n\tfor (var i = $item.length - 1; i >= 0; i--) {\n\t\tif($item[i].hide)\n\t\t\t$item.splice(i, 1);\n\t}\n\n\t// First dropdown title\n\tMy.title = $item.title;\n\n\tvar currentDeepLevel, $el;\n\tMy.init = function(){\n\t\tif($item.event !== void 0){\n\t\t\tvar el = sf.Window.source(My.$el, $item.event);\n\t\t\tif(el === null) return;\n\t\t\t$el = $(el);\n\t\t}\n\t\telse $el = My.$el;\n\n\t\tMy.visible = true;\n\n\t\t// Check position when the element rendered\n\t\tvar ulElem = sf.Window.source(My.$el, $item.event).querySelector('ul');\n\t\t$.afterRepaint().then(function(){\n\t\t\tlet x = 0, y = 0;\n\t\t\tlet parent = My._parent;\n\t\t\tlet w = parent !== void 0 ? parent.width : 0;\n\n\t\t\twhile(parent !== void 0){\n\t\t\t\tx += parent.x;\n\t\t\t\ty += parent.y;\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\n\t\t\tMy.width = ulElem.offsetWidth;\n\t\t\tMy.height = ulElem.offsetHeight;\n\n\t\t\tif(x + My.x + My.width > sf.Window.focus.innerWidth)\n\t\t\t\tMy.x -= My.width + w;\n\n\t\t\tif(y + My.y + My.height > sf.Window.focus.innerHeight)\n\t\t\t\tMy.y -= My.height;\n\n\t\t\tMy.hidden = '';\n\t\t});\n\n\t\t// Find nested options and add event listener on mouse hover\n\t\tvar options = My.options;\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tlet opt = options[i];\n\t\t\tconst elem = $(options.getElements(i));\n\n\t\t\tif(opt.deep !== void 0){\n\t\t\t\tfunction openDeep(ev){\n\t\t\t\t\tif(currentDeepLevel !== void 0)\n\t\t\t\t\t\tMy.deepRemove();\n\n\t\t\t\t\tif(opt.hover !== void 0)\n\t\t\t\t\t\topt.hover.apply(opt.context, opt.args);\n\n\t\t\t\t\tvar deep = opt.deep;\n\t\t\t\t\tdeep.event = ev;\n\t\t\t\t\tdeep._parent = My;\n\n\t\t\t\t\t// Use the cache instead\n\t\t\t\t\tif(deep.el !== void 0){\n\t\t\t\t\t\tcurrentDeepLevel = deep.el;\n\t\t\t\t\t\tdeep.el.model.y = deep.yi - (deep.ul?.scrollTop || 0);\n\t\t\t\t\t\t$el.append(deep.el);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdeep.ul = My.$el.children('ul')[0];\n\n\t\t\t\t\t// Initialize position once\n\t\t\t\t\tdeep.x = ulElem.offsetWidth;\n\t\t\t\t\tdeep.yi = ev.target.offsetTop - 7;\n\t\t\t\t\tdeep.y = deep.yi - (deep.ul?.scrollTop || 0);\n\n\t\t\t\t\t// Create dropdown in current sf-space\n\t\t\t\t\tdeep.el = currentDeepLevel = new $DropDown(deep, My.$space);\n\t\t\t\t\tcurrentDeepLevel.sf$noGC = true; // Avoid framework's GC\n\t\t\t\t\t$el.append(currentDeepLevel);\n\t\t\t\t}\n\n\t\t\t\telem.on('mouseover', function(ev){\n\t\t\t\t\tMy.root.pendingDeepOpen = ev.target;\n\t\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\n\n\t\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\n\t\t\t\t\t\tif(My.root.pendingDeepOpen === ev.target)\n\t\t\t\t\t\t\topenDeep(ev);\n\t\t\t\t\t}, 200);\n\t\t\t\t});\n\n\t\t\t\telem.on('click', openDeep);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\telem.on('mouseover', function(ev){\n\t\t\t\tMy.root.pendingDeepOpen = ev.target;\n\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\n\n\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\n\t\t\t\t\tif(currentDeepLevel !== void 0){\n\t\t\t\t\t\tMy.deepRemove();\n\t\t\t\t\t\tcurrentDeepLevel = void 0;\n\t\t\t\t\t}\n\n\t\t\t\t\topt.hover && opt.hover.apply(opt.context, opt.args);\n\t\t\t\t}, 200);\n\t\t\t});\n\n\t\t\tif(opt.callback){\n\t\t\t\telem.on('click', function(ev){\n\t\t\t\t\tif(opt.unhover !== void 0)\n\t\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\n\n\t\t\t\t\topt.callback.apply(opt.context, opt.args);\n\t\t\t\t\tMy.root.hide();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif(opt.unhover){\n\t\t\t\telem.on('mouseout', function(ev){\n\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tMy.deepRemove = function(){\n\t\tif(currentDeepLevel === void 0)\n\t\t\treturn;\n\n\t\tcurrentDeepLevel.remove();\n\t\tcurrentDeepLevel.model.deepRemove();\n\t}\n});","Small Notification\n\nYou can call this from anywhere\n```js\nSmallNotif.add('message', 'color', /* delay in ms*/);\n```\n\n## comment, this will automatically appended to body\n## html\n<sf-m name=\"small.notif\">\n  <div class=\"notify-container right-top\">\n    <div sf-each=\"x in list\" class=\"notify-base notify-{{ x.color }}\">\n      <span>{{ x.message }}</span>\n      <button @click=\"close(x)\" class=\"close\">×</button>\n    </div>\n  </div>\n</sf-m>\n\n## js-global\nvar SmallNotif = sf.model('small.notif', function(My){\n  const $ = sf.$;\n\n  My.list = [];\n  My.on$list = {\n    create(el){\n      $(el).animateKey('fadeInUp');\n    },\n    remove(el, remove){\n      $(el).animateKey('fadeOutUp', remove);\n      setTimeout(remove, 500); // To make sure it's removed\n      return true;\n    }\n  };\n\n  $(function(){\n    if($('sf-m[name=\"small.notif\"]').length !== 0) return;\n    $('body').append($(window.templates[#this.path]));\n  });\n\n  My.add = function(message, color, delay){\n    var item = {message, color:color || 'yellow'};\n    My.list.push(item);\n\n    if(delay !== false){\n      item.timer = setTimeout(()=> {\n        My.list.splice(My.list.indexOf(item), 1);\n      }, delay || (1000 + 100 * message.length));\n    }\n\n    return item;\n  }\n\n  My.close = function(item){\n    My.list.splice(My.list.indexOf(item), 1);\n  }\n});\n\n## scss-global\n.notify-base{\n  font-weight: bold;\n  padding: 6px 18px 6px 14px;\n  color: #222;\n  // text-shadow: 0 0 rgba(0, 0, 0, 0.5);\n  background-color: rgba(255, 255, 255, 0.97);\n  border: 1px solid;\n  border-color: rgba(255, 255, 255, 0.97);\n  box-shadow: 0 0 7px 0px rgba(255, 255, 255, 0.97);\n  border-radius: 4px;\n  min-width: 51%;\n  white-space: nowrap;\n  position: relative;\n  max-width: 100%;\n  margin: 10px 10px 0 10px;\n  display: flex;\n  align-items: center;\n\n  span{\n    white-space: pre-line;\n    margin-right: 5px;\n  }\n\n  button {\n    outline: none;\n    &.close {\n        appearance: none;\n        padding: 0;\n        cursor: pointer;\n        background: 0 0;\n        border: 0;\n        width: inherit;\n    }\n  }\n\n  .close {\n    float: right;\n    font-size: 23px;\n    font-weight: 700;\n    line-height: 0.8;\n    right: 6px;\n    position: absolute;\n    color: #000;\n    text-shadow: 0 1px 0 #fff;\n    opacity: .2;\n  }\n}\n\n.notify-container{\n  max-width: 95%;\n  position: fixed;\n  z-index: 9999;\n  display: grid;\n\n  &.right-top{\n    right: 10px;\n    top: 0;\n\n    .notify-base{\n      float: right;\n      margin: 10px 0 0 0;\n    }\n  }\n  &.left-top{\n    left: 0;\n    top: 0;\n\n    .notify-base{\n      float: left;\n      margin: 10px 0 0 10px;\n    }\n  }\n}\n\n@mixin notify-color($name, $txt, $bg, $border){\n  .notify-#{$name}{\n    color: #{$txt};\n    background-color: #{$bg};\n    border-color: #{$border};\n    box-shadow: 0 0 5px 0px #{$border};\n  }\n}\n\n@include notify-color('red', #B94A48, rgba(242, 222, 222, 0.97), #EED3D7);\n@include notify-color('yellow', #C09853, rgba(252, 248, 227, 0.97), #FBEED5);\n@include notify-color('blue', #3A87AD, rgba(217, 237, 247, 0.97), #BCE8F1);\n@include notify-color('green', #468847, rgba(223, 240, 216, 0.97), #D6E9C6);","## html.append-to-body\n<sf-m name=\"loading\" class=\"{{ showed && 'show' }}\">\n\t<span class=\"icon\"><i class=\"fa fa-fan fa-spin\"></i></span>\n\t<span class=\"desc\">{{ desc }}</span>\n</sf-m>\n\n## scss-global\nsf-m[name=\"loading\"]{\n\tdisplay: none;\n\tbackground: #000000ba;\n\tpointer-events: none;\n\tpadding: 7px 15px;\n\tborder-radius: 20px;\n\tbox-shadow: 0 0 11px white;\n\tposition: fixed;\n\ttop: 60px;\n\tcolor: white;\n\tright: 10px;\n\n\t&.show{\n\t\tdisplay: block;\n\t}\n\n\t.icon{\n\t\tpadding-right: 5px;\n\t}\n}\n\n## js-global\nvar Loading = sf.model('loading', function(My){\n\tMy.showed = false;\n\tMy.desc = '';\n\n\tMy.set = function(text){\n\t\tif(text && My.showed === false)\n\t\t\tMy.showed = true;\n\t\telse My.showed = false;\n\n\t\tMy.desc = text;\n\t}\n});","## html.append-to-body\n<sf-m name=\"modal\" class=\"modal {{ showed && 'show' }}\">\n  <div class=\"modal-dialog\">\n    <vw-modal></vw-modal>\n  </div>\n</sf-m>\n\n## scss-global\nsf-m.modal{\n\tgrid-template-columns: auto minmax(0, 1fr) auto;\n\tdisplay: none;\n\tposition: fixed;\n\tz-index: 1001;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbox-sizing: border-box;\n\tgrid-template-areas:\n\t    \"top-start top top-end\"\n\t    \"center-start center center-end\"\n\t    \"bottom-start bottom-center bottom-end\"\n\t    \"gap gap gap\";\n\tgrid-template-rows: auto auto auto .625em;\n\theight: 100%;\n\tpadding: .625em .625em 0;\n\toverflow-x: hidden;\n\tbackground: #00000000;\n\ttransition: background 0.3 linear;\n\n\t&.show{\n\t\tdisplay: grid;\n\t\tbackground: #00000060;\n\t\t.modal-dialog{\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.modal-dialog{\n\t\tdisplay: grid;\n\t\ttransition: opacity;\n\t\topacity: 0;\n\t\tgrid-column: 2;\n\t\tgrid-row: 2;\n\t\talign-self: center;\n\t\tjustify-self: center;\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tmax-width: 100%;\n\t}\n}\n\n## js-global\nvar Modal = sf.model('modal', function(My){\n\tMy.showed = false;\n\n\tMy.init = My.hotReloaded = function(){\n\t\tMy.views = sf.Views.listSelector['vw-modal'];\n\t}\n\n\tMy.hide = function(){\n\t\tMy.showed = false;\n\t\tMy.$el('.modal-dialog').off('pointerup', My.hide, {outside: true});\n\t}\n\n\tMy.goto = function(path){\n\t\tMy.views.goto(path);\n\t\tMy.showed = true;\n\n\t\tsetTimeout(()=> {\n\t\t\tMy.$el('.modal-dialog').on('pointerup', My.hide, {outside: true});\n\t\t}, 400);\n\t}\n});","## html\n<!-- Filling the default page if haven't being routed -->\n<sf-m name=\"welcome-text\" class=\"welcome-text\">\n\t<h1>Welcome to Blackprint Editor!</h1>\n\t<div class=\"description\">This editor haven't being designed for mobile screen.</div>\n\t<div class=\"content\">\n\t\t<div class=\"item\" @click=\"toWorkspace\">\n\t\t\t<i class=\"fas fa-torii-gate\"></i> Go to sketch page\n\t\t</div>\n\t\t<div class=\"item\" @click=\"openExamples\">\n\t\t\t<i class='fa fa-map-signs'></i> <span>Open examples</span>\n\t\t</div>\n\t\t<div class=\"item\" style=\"cursor: default\">\n\t\t\t<i class='fa fa-book-open'></i> <span style=\"text-decoration: line-through\">Learn from editor</span>\n\t\t</div>\n\t</div>\n\n\t<div class=\"available-engine\">\n\t\t<div class=\"title\">Blackprint Engine also available for:</div>\n\t\t<div class=\"list\">\n\t\t\t<!-- python, csharp, java/kotlin, cplusplus, go, rust, docker -->\n\t\t\t<!-- css3, html5 -->\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\n\t\t\t\t<img src=\"/assets/img/icon/denojs.svg\">\n\t\t\t\t<div class=\"name\">Deno</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/nodejs/nodejs-plain.svg\">\n\t\t\t\t<div class=\"name\">Node.js</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-php\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/php/php-plain.svg\">\n\t\t\t\t<div class=\"name\">PHP</div>\n\t\t\t</a>\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-go\" target=\"_blank\">\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/go/go-original-wordmark.svg\">\n\t\t\t\t<div class=\"name\">Golang</div>\n\t\t\t</a>\n\t\t</div>\n\t</div>\n</sf-m>\n\n<div class=\"welcome-left\">\n\t<a target=\"_blank\" href=\"https://ko-fi.com/stefansarya\">\n\t\t<i class=\"fas fa-mug-hot\"></i> Ko-fi\n\t</a>\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint\">\n\t\t<i class=\"fab fa-github\"></i> GitHub\n\t</a>\n\t<a target=\"_blank\" href=\"https://stefansarya.gitbook.io/blackprint\">\n\t\t<i class=\"fa fa-book-open\"></i> Documentation\n\t</a>\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint/discussions\">\n\t\t<i class=\"fa fa-comments\"></i> Discussions\n\t</a>\n</div>\n\n<div class=\"welcome-right\">\n\t<a target=\"_blank\" style=\"cursor: pointer;\" onclick=\"Modal.goto('/npm-packages')\">\n\t\tPackage List <i class=\"fas fa-boxes\"></i>\n\t</a>\n\t<a target=\"_blank\" href=\"https://www.npmjs.com/search?q=keywords:blackprint\">\n\t\tnpm.js <i class=\"fas fa-box\"></i>\n\t</a>\n</div>\n\n## scss-global\n.welcome-text{\n\tcolor: white;\n\ttext-align: center;\n\tpadding: 0 20px;\n\n\t> .description{\n\t\twhite-space: pre-line;\n\t}\n\n\t> .content{\n\t\twidth: 750px;\n\t\tdisplay: inline-flex;\n\n\t\t.item{\n\t\t\tpadding: 10px;\n\t\t\twidth: 200px;\n\t\t\tmargin: 10px auto;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 10px;\n\t\t\tbox-shadow: 0px 0px 3px white;\n\t\t\tborder: 1px solid #c5c5c5;\n\t\t\tbackground: #0000008a;\n\t\t}\n\t}\n\n\t.available-engine{\n\t\tbottom: 0;\n\t\twidth: 100vw;\n\t\tleft: 0;\n\t\tposition: absolute;\n\t\t.title{\n\n\t\t}\n\t\t.list .item{\n\t\t\twidth: 50px;\n\t\t\timg{\n\t\t\t\tmax-width: 50px;\n\t\t\t\tfilter: brightness(0) invert(1);\n\t\t\t}\n\n\t\t\tdisplay: inline-block;\n\t\t\tcolor: white;\n\t\t\tmargin: 0 5px;\n\t\t}\n\t}\n}\n\n.welcome-left{\n\tdisplay: grid;\n\tposition: absolute;\n\tcolor: #a0a0a0;\n\tbottom: 0;\n\tleft: 10px;\n\ti{\n\t\tmargin-right: 5px;\n\t}\n}\n\n.welcome-right{\n\tdisplay: grid;\n\tposition: absolute;\n\tcolor: #a0a0a0;\n\tbottom: 0;\n\tright: 10px;\n\ttext-align: right;\n\ti{\n\t\tmargin-left: 5px;\n\t}\n}\n\n## js-global\nsf.model('welcome-text', function(My){\n\tMy.toWorkspace = function(){\n\t\tif(SketchList.length === 0){\n\t\t\tMy.openExamples();\n\t\t\treturn;\n\t\t}\n\n\t\tviews.goto('/sketch/1');\n\t}\n\n\tMy.openExamples = function(){\n\t\tModal.goto('/example-list');\n\t}\n});","## html\n<sf-m name=\"sketch-pages\">\n\t<!-- /src/routes/+vw-ground/sketch.sf -->\n\t<vw-page></vw-page>\n\n\t<div class=\"mini-blackprint disable-effect {{ miniViewer.topRightHidden && 'hidden' }}\">\n\t\t<sf-slot for=\"miniViewer.topRight\"></sf-slot>\n\t</div>\n</sf-m>\n\n## js-global.router\n={\n\ton:{\n\t\tshowed(){\n\t\t\t// Show sketch options\n\t\t\tsf.model('header').showOptions = true;\n\t\t},\n\t\thidden(){\n\t\t\tsf.model('header').showOptions = false;\n\t\t}\n\n\t\t/*\n\t\tshowed: Sketch container have been loaded,\n\t\tcoming: The cable would have wrong position because the DOM still hidden,\n\t\tleaving: Maybe we can uninitialize something,\n\t\thidden: Animate something maybe\n\t\t*/\n\t}\n}\n\n## scss-global\nvw-page{\n\tposition: absolute;\n\theight: 100%;\n\twidth: 100%;\n\n\t&.page-current{\n\t\ttop: 0;\n\t}\n}\n.mini-blackprint{\n\twidth: 240px;\n\theight: 190px;\n\tposition: absolute;\n\ttop: 5px;\n\tright: 0;\n\toverflow: hidden;\n\tbox-shadow: 0 0 6px #ffffff6b;\n\tbackground: #ffffff40;\n\tborder-radius: 10px;\n\tpointer-events: none;\n\n\t&.hidden{\n\t\tdisplay: none;\n\t}\n}\n\n## js-global\nsf.model('sketch-pages', function(My){\n\tMy.miniViewer = {\n\t\ttopRight: null,\n\t\ttopRightHidden: true,\n\t\ton$topRight(now){\n\t\t\tif(now === null)\n\t\t\t\treturn My.miniViewer.topRightHidden = true;\n\n\t\t\tMy.miniViewer.topRightHidden = false;\n\t\t\t// now => <sf-space>\n\t\t\t// $(now)\n\t\t}\n\t};\n});","## html\n<sf-m name=\"custom-node-editor\">\n\t<div class=\"editor\" @keydown.ctrl.Enter.prevent=\"run\">\n\t\t<div class=\"bp-loading-status\" style=\"color: white; padding: 20px\">Loading Monaco Editor...</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item\" @click=\"run\" title=\"Execute (Ctrl + Enter)\"><i class=\"fa fa-play\"></i></div>\n\t\t<div class=\"item\" @click=\"Modal.hide()\" title=\"Minimize\"><i class=\"fa fa-window-minimize\"></i></div>\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"custom-node-editor\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\n\t.editor{\n\t\twidth: 80vw;\n\t\tmax-width: 900px;\n\t\theight: 90vh;\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: 0px;\n\t\ttop: 0;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tshowed(){\n\t\t\tlet model = sf.model('custom-node-editor');\n\t\t\tmodel.recreate();\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('custom-node-editor', function(My){\n\tMy.content = '// After execute this, you can test it by connecting\\n// Input -> Slider and Logger to this node\\n\\nlet EventSlot = {slot: \\'my-unique\\'}; // To avoid duplicate listener\\n\\nBlackprint.registerNode(\\'Test/Hello\\',\\nclass extends Blackprint.Node {\\n\\tstatic input = { // Port\\n\\t\\t\\'Give Input\\': Number\\n\\t}\\n\\t\\n\\tstatic output = { // Port\\n\\t\\tOut: Number\\n\\t}\\n\\n\\tconstructor(instance){\\n\\t\\tsuper(instance);\\n\\n\\t\\t// You can remove this if you want to use default node interface/HTML\\n\\t\\tlet iface = this.setInterface(\\'BPIC/Test/Hello\\');\\n\\n\\t\\tiface.title = \\'Add +5\\';\\n\\t\\tiface.description = \\'Add 5 to any number\\';\\n\\t}\\n});\\n\\n// You can remove this if you\\'re using default node interface/HTML\\nBlackprint.Sketch.registerInterface(\\'BPIC/Test/Hello\\', {\\n\\thtml: `\\n<div class=\"node {{ type || \\'general\\' }}\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\\n\\n  <div class=\"content\">\\n\\t<div class=\"left-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\\n\\t</div>\\n\\t\\n\\t<div style=\"display: inline-block; color: yellow\">\\n\\t\\t{{ log }}\\n\\t</div>\\n    \\n\\t<div class=\"right-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\\n\\t</div>\\n  </div>\\n</div>`\\n}, class extends Blackprint.Interface {\\n\\tconstructor(node){\\n\\t\\tsuper(node);\\n\\n\\t\\tthis.log = 0;\\n\\t}\\n\\n\\t// HTML/Interface Init\\n\\tinit(el){\\n\\t\\tlet iface = this;\\n\\t\\t\\n\\t\\tconst {\\n\\t\\t\\tIInput, IOutput, // Port interface (event, utils, etc)\\n\\t\\t\\tInput, Output, // Node Port (get/set value)\\n\\t\\t} = iface.ref;\\n\\n\\t\\tIInput[\\'Give Input\\'].on(\\'value\\', EventSlot, function({ cable }){\\n\\t\\t\\tlet val = cable.value;\\n\\n\\t\\t\\tiface.log = val + 5; // Give Input -> {{ log }}\\n\\t\\t\\tOutput.Out = val + 5; // Give Input -> Out\\n\\t\\t});\\n\\t}\\n\\n\\t// Run init again to hot reload this node\\n\\thotReloaded(){\\n\\t\\tthis.init();\\n\\t}\\n\\n\\t// When this node UI was cloned somewhere\\n\\t// You can reinit some HTML element if needed\\n\\tinitClone(el){}\\n});';\n\n\tMy.init = async function(){\n\t\tif(window.monaco === void 0){\n\t\t\tawait sf.loader.js(['https://cdn.jsdelivr.net/npm/@monaco-editor/loader@1.1.1/lib/umd/monaco-loader.min.js']);\n\t\t\tawait monaco_loader.init();\n\t\t}\n\n\t\tMy.container = My.$el('.editor');\n\t\tMy.recreate();\n\t}\n\n\tMy.recreate = function(){\n\t\tif(window.monaco === void 0) return;\n\t\tif(My.editor) return;\n\n\t\tMy.editor && My.editor.dispose();\n\n\t\tsetTimeout(()=> {\n\t\t\tlet statusEl = My.container.find('.bp-loading-status');\n\n\t\t\tMy.editor = monaco.editor.create(My.container[0], {\n\t\t\t\tvalue: My.content,\n\t\t\t\tlanguage: 'javascript',\n\t\t\t\ttheme: 'vs-dark',\n\t\t\t\tminimap: { enabled: false }\n\t\t\t});\n\n\t\t\tstatusEl.css('display', 'none');\n\t\t}, 1000);\n\t}\n\n\tMy.run = function(){\n\t\teval(My.editor.getValue());\n\t}\n\n\tMy.close = function(){\n\t\tModal.hide();\n\n\t\tMy.editor.dispose();\n\t\tMy.editor = null;\n\t\tmodal.goto('/');\n\n\t\tMy.container.find('.bp-loading-status').css('display', '');\n\t}\n});","## html\n<sf-m name=\"modal-dev-mode\">\n\t<div class=\"description\">Please set the Blackprint module server URL</div>\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default server)</div>\n\t<div class=\"text-input\">\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\n\t</div>\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"modal-dev-mode\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t}\n\t.note{\n\t\ttext-align: center;\n\t\tfont-size: 12px;\n\t\tpadding: 0;\n\t\tcolor: gray;\n\t\tmargin-top: -10px;\n\t\tcursor: pointer;\n\t}\n\t.text-input{\n\t\tpadding: 10px;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\n\t\tinput{\n\t\t\twidth: 100%;\n\t\t\tborder: 1px solid black;\n\t\t\tbackground: #161616;\n\t\t\tpadding: 5px;\n\t\t\tcolor: white;\n\t\t\toutline: none;\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\tcolor: white;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\n\t\t\t}, 500);\n\t\t},\n\t\tshowed(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\n\t\t\t}, 100);\n\t\t},\n\t}\n}\n\n## js-global\nsf.model('modal-dev-mode', function(My){\n\tMy.url = localStorage.BPModuleServer ??= \"\";\n\tMy.placeholder = location.origin;\n\n\t// Automatically move to development mode\n\tif(location.hostname === 'localhost' && location.pathname !== \"/dev.html\"){\n\t\tlocation.pathname = \"/dev.html\";\n\t\treturn;\n\t}\n\n\tMy.connectDefault = function(){\n\t\tlocalStorage.BPModuleServer = My.url = \"\";\n\t\tMy.changeServer();\n\t}\n\n\tMy.changeServer = async function(){\n\t\tlet url = My.url;\n\t\tif(!url) url = location.origin;\n\t\t// url = 'http://localhost:6791';\n\n\t\tlet _url = url;\n\n\t\tif(url.slice(-1) === '/')\n\t\t\turl = url.slice(0, -1);\n\t\turl += '/browser-sync';\n\n\t\tif(window.___browserSync___ === void 0){\n\t\t\ttry{\n\t\t\t\tawait sf.loader.js([url+'/browser-sync-client.js?v=2']);\n\t\t\t} catch(e) {\n\t\t\t\tSmallNotif.add(\"Failed to load client\", \"red\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t___browserSync___.socketUrl = url;\n\n\t\tlet socket = ___browserSync___.socket;\n\t\tsocket.disconnect();\n\n\t\tsetTimeout(()=> {\n\t\t\tif(socket.connected) return;\n\t\t\tconsole.log(\"Failed to connect to Blackprint module server:\", url);\n\t\t\tSmallNotif.add(\"Failed to connect to Blackprint module server\", \"red\");\n\t\t\tsocket.disconnect();\n\t\t\tsocket.off('connect', onConnected);\n\t\t}, 8000);\n\n\t\tfunction onConnected(){\n\t\t\tconsole.log(\"Connected to Blackprint module server:\", url);\n\t\t\tSmallNotif.add(\"Connected to Blackprint module server\", \"green\");\n\t\t\tlocalStorage.BPModuleServer = My.url;\n\t\t}\n\n\t\tsocket.once('connect', onConnected);\n\n\t\tsocket.nsp = '/browser-sync';\n\t\tsocket.io.uri = url;\n\t\tsocket.connect();\n\n\t\tlet newModuleLoaded = false;\n\t\ttry{\n\t\t\tlet moduleList = Object.values(await $.getJSON(_url+'/api/module-list'));\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\n\t\t\t\tmoduleList[i] = _url+moduleList[i];\n\n\t\t\tif(moduleList.length !== 0){\n\t\t\t\tSmallNotif.add(`Loading ${moduleList.length} new modules`, \"yellow\");\n\n\t\t\t\tawait Blackprint.loadModuleFromURL(moduleList, {\n\t\t\t\t\tloadBrowserInterface: true\n\t\t\t\t});\n\n\t\t\t\tSmallNotif.add(`New modules have been loaded`, \"green\");\n\t\t\t}\n\n\t\t\tnewModuleLoaded = true;\n\t\t} catch(e) {\n\t\t\tSmallNotif.add(`Failed to load new modules`, \"red\");\n\t\t\tthrow e;\n\t\t}\n\n\t\tsetTimeout(()=> {\n\t\t\tif(newModuleLoaded) return;\n\t\t\tSmallNotif.add(`Loading modules was taking longer than 10s`, \"red\");\n\n\t\t\tif(sf.loader.pendingResources.size !== 0)\n\t\t\t\tconsole.log(\"Pending resources:\", sf.loader.pendingResources);\n\t\t}, 10000);\n\n\t\tif(Modal.showed)\n\t\t\tModal.hide();\n\t}\n\n\tif(My.url !== '' && sf.hotReload !== void 0){\n\t\t$(function(){\n\t\t\tsetTimeout(()=> My.changeServer(), 200);\n\t\t});\n\t}\n});","## html\n<sf-m name=\"environment-variables\">\n\t<div class=\"title\">Environment Variables</div>\n\t<div class=\"head\">\n\t\t<div class=\"row\">Key</div>\n\t\t<div class=\"row\">Value</div>\n\t</div>\n\t<div class=\"content\">\n\t\t<div>\n\t\t\t<div class=\"row\" sf-each=\"x in list\" @keyup=\"itemChanged(x)\">\n\t\t\t\t<input class=\"column key\" type=\"text\" @input=\"(this.value = x.key = validateKey(this.value))\" sf-bind=\"x.key\" placeholder=\"...\">\n\t\t\t\t<input class=\"column\" type=\"text\" sf-bind=\"x.value\" placeholder=\"...\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row\">\n\t\t\t<input class=\"column key\" type=\"text\" @input=\"this.value = newKey = validateKey(this.value)\" sf-bind=\"newKey\" placeholder=\"Add new key...\">\n\t\t\t<input class=\"column\" type=\"text\" sf-bind=\"newValue\" placeholder=\"...\">\n\t\t</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"environment-variables\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\n\t.title{\n\t\ttext-align: center;\n\t\tmin-width: 300px;\n\t\tpadding: 5px;\n\t\tcolor: #fff;\n\t\tfont-weight: bold;\n\t\tletter-spacing: 1px;\n\t\tborder-bottom: 1px solid #000;\n\t\tbackground: #0009;\n\t\tcursor: default;\n\t}\n\n\t.head{\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\tbackground: #00000070;\n\t\t.row{\n\t\t\tcolor: #fff;\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 50%;\n\t\t\toutline: 1px solid #000;\n\t\t\tcursor: default;\n\t\t}\n\t}\n\n\t.content{\n\t\t.row{\n\t\t\tdisplay: flex;\n\t\t\t.column{\n\t\t\t\tcolor: #fff;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 50%;\n\t\t\t\tpadding: 8px;\n\t\t\t\toutline: 1px solid #000;\n\t\t\t}\n\n\t\t\tinput{\n\t\t\t\tcolor: gray;\n\t\t\t\tbackground: #00000094;\n\t\t\t\tborder: none;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: -5px;\n\t\ttop: -10px;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('environment-variables', function(My){\n\tMy.list = Blackprint.Environment.list;\n\tMy.newValue = '';\n\tMy.newKey = '';\n\n\t// Blackprint.Environment.import([{key: 'TEST', value:'123'}]);\n\n\tMy.v2m$newKey = function(now){\n\t\tnow = My.validateKey(now);\n\n\t\tif(now.length !== 0){\n\t\t\tBlackprint.Environment.set(now, My.newValue);\n\t\t\tMy.newKey = My.newValue = '';\n\t\t\tcaretFocusOnLastItem();\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tfunction caretFocusOnLastItem(){\n\t\t$('input', My.list.getElement(My.list.length-1))[0].focus();\n\t}\n\n\tMy.itemChanged = function(item){\n\t\trefreshEnvironment();\n\n\t\tif(item.key.length === 0 && (Number.isNaN(item.value) || !item.value)){\n\t\t\tMy.list.splice(My.list.indexOf(item), 1);\n\t\t\tcaretFocusOnLastItem();\n\t\t\treturn;\n\t\t}\n\t}\n\n\tlet _refreshEnvironment = 0;\n\tfunction refreshEnvironment(){\n\t\tclearTimeout(_refreshEnvironment);\n\t\t_refreshEnvironment = setTimeout(function(){\n\t\t\tlet { map, list } =  Blackprint.Environment;\n\t\t\tlet uniq = new Set();\n\n\t\t\t// Assign the value of each list on the map\n\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\tlet item = list[i];\n\t\t\t\tmap[item.key] = item.value;\n\t\t\t\tuniq.add(item.key);\n\t\t\t}\n\n\t\t\t// Remove key that not exist on the list\n\t\t\tfor(let key in map){\n\t\t\t\tif(!uniq.has(key))\n\t\t\t\t\tBlackprint.Environment.delete(key, true);\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tMy.validateKey = function(value){\n\t\treturn value.replace(/[ \\-]+/gm, '_').replace(/\\W+/gm, '').replace(/^[0-9]+/gm, '').toUpperCase();\n\t}\n\n\tMy.close = function(){\n\t\tModal.hide();\n\t\tmodal.goto('/');\n\t}\n});","## html\n<sf-m name=\"example-list\">\n\t<div class=\"description\">Please select one of these example (<a href=\"https://github.com/Blackprint/blackprint.github.io/blob/develop/src/global/sampleList.js\">source</a>)</div>\n\t<div class=\"list\">\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\n\t\t\t{{ x }}\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"example-list\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){\n\t\t\tsf.model('example-list').list = Object.keys(sampleList);\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('example-list', function(My){\n\tMy.list = [];\n\n\tMy.open = function(key){\n\t\tlet obj = sampleList[key];\n\t\tfor (var i = 0; i < SketchList.length; i++)\n\t\t\tSketchList[i].clearNodes();\n\n\t\tModal.hide();\n\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\n\t\tsketch.__importing = true;\n\n\t\tSketchImporter.pendingLoad = obj;\n\t\tSketchImporter.importNow();\n\t}\n});","## html\n<sf-m name=\"module-example-list-deep\">\n\t<div class=\"description\">Examples for: <b>{{ packageName }}</b></div>\n\t<div class=\"list\">\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"openExample(x)\">\n\t\t\t{{ x.name }}\n\t\t</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"module-example-list-deep\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\tmargin-right: 40px;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: -5px;\n\t\ttop: -10px;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('module-example-list-deep', function(My){\n\tMy.packageName = '';\n\tMy.baseUrl = '';\n\tMy.list = [];\n\n\tMy.openModal = function(pkg){\n\t\tMy.packageName = pkg.packageName;\n\n\t\tlet list = pkg.examples;\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlet temp = list[i];\n\n\t\t\tif(!temp.name){\n\t\t\t\ttemp.name = temp.url\n\t\t\t\t\t.replace('example/', '')\n\t\t\t\t\t.replace('.json', '')\n\t\t\t\t\t.replace(/\\-/g, ' ');\n\t\t\t}\n\t\t}\n\n\t\tMy.list = list;\n\t\tMy.baseUrl = pkg.packageURL;\n\t}\n\n\tMy.openExample = async function(item){\n\t\tSmallNotif.add(\"Loading information..\");\n\n\t\tlet url = item.url;\n\t\tif(url.slice(0, 1) !== '/')\n\t\t\turl = `/${url}`;\n\n\t\tlet obj = await $.getJSON(My.baseUrl+url);\n\t\tSketchImporter.loadJSON(obj);\n\t}\n\n\tMy.back = function(){\n\t\tModal.goto('/module-example-list');\n\t}\n});","## html\n<sf-m name=\"module-example-list\">\n\t<div class=\"description\">Please select one of the module to load the example list</div>\n\t<div class=\"list\">\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\n\t\t\t{{ x.packageName }}\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"module-example-list\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(){ }\n\t}\n}\n\n## js-global\nvar ModuleExampleList = sf.model('module-example-list', function(My){\n\tMy.list = EditorHeader._moduleExampleList;\n\n\tinit();\n\tfunction init() {\n\t\tlet cache = localStorage.bpModuleExampleList;\n\t\tif(!cache) return;\n\n\t\tMy.list.push(...JSON.parse(cache));\n\t}\n\n\tMy.open = function(x) {\n\t\tsf.model('module-example-list-deep').openModal(x);\n\t\tModal.goto('/module-example-list-deep');\n\t}\n\n\tMy.add = function(packageName, list, packageURL){\n\t\tlet ref = My.list;\n\t\tfor (var i = 0; i < ref.length; i++) {\n\t\t\tif(ref[i].packageName === packageName) break;\n\t\t}\n\n\t\t// new example\n\t\tif(i === ref.length){\n\t\t\tref.push({\n\t\t\t\tpackageName,\n\t\t\t\tpackageURL,\n\t\t\t\texamples: list,\n\t\t\t});\n\n\t\t\tMy.list = ref = ref.sort((a, b) => a.packageName.localeCompare(b.packageName));\n\n\t\t\ttry{\n\t\t\t\t// This may give error if this modal was never been opened since startup\n\t\t\t\tref.refresh();\n\t\t\t} catch(e){}\n\n\t\t\tSmallNotif.add(`\"${packageName}\" example has been added`, 'green');\n\t\t}\n\t\telse ref[i].examples = list;\n\n\t\tlocalStorage.bpModuleExampleList = JSON.stringify(My.list);\n\t}\n});","## html\n<sf-m name=\"module-url\">\n\t<div class=\"head\">\n\t\t<div class=\"row url\">Shortened Module URL</div>\n\t\t<div class=\"row nodes\">Nodes</div>\n\t\t<div class=\"row actions\">Actions</div>\n\t</div>\n\t<div class=\"content\">\n\t\t<div>\n\t\t\t<div class=\"row\" sf-each=\"x in list\">\n\t\t\t\t<div class=\"column url\"><div>\n\t\t\t\t\t<b>{{ shortenLink(x._url, 'host') }}</b>\n\t\t\t\t\t{{ shortenLink(x._url, 'path') }}\n\t\t\t\t\t<b>{{ shortenLink(x._url, 'search') }}</b>\n\t\t\t\t\t<a title=\"Right click to copy link address, click to open on new tab\" target=\"_blank\" href=\"{{x._url}}\"><i class=\"fa fa-link\"></i></a>\n\t\t\t\t</div></div>\n\t\t\t\t<div class=\"column nodes\">\n\t\t\t\t\t{{ x._nodeLength }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"column actions\">\n\t\t\t\t\t<button title=\"Show this module on dropdown/module list\" @click=\"hideFromURL(x)\">\n\t\t\t\t\t\t <i class=\"fa fa-list\"></i>\n\t\t\t\t\t\t <i class=\"fa fa-slash\" style=\"\n\t\t\t\t\t\t    position: absolute;\n\t\t\t\t\t\t    margin-left: -15px;\n\t\t\t\t\t\t    display: {{ x._hidden ? 'inline-block' : 'none' }}\n\t\t\t\t\t\t\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button title=\"Reload this module again from URL\" @click=\"reloadURL(x)\">\n\t\t\t\t\t\t<i class=\"fa fa-sync\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button title=\"Remove any related nodes and also remove this module\" @click=\"deleteFromURL(x)\">\n\t\t\t\t\t\t<i class=\"fa fa-trash\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row\">\n\t\t\t<input class=\"column url-input\" type=\"text\" @keyup.Enter=\"addURL()\" sf-bind=\"newURL\" placeholder=\"Add module from URL here... (Then press enter)\">\n\t\t</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\n\t\t<div class=\"item\" @click=\"npmList\" title=\"Search from NPM\"><i class=\"fa fa-book-open\"></i></div>\n\t\t<div class=\"item\" @click=\"loadCachedList\" style=\"{{ firstInit ? '' : 'display: none' }}\" title=\"Load cached list\"><i class=\"fa fa-boxes\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"module-url\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tmin-width: 700px;\n\n\t.head{\n\t\tletter-spacing: 1px;\n\t\ttext-align: center;\n\t\tdisplay: flex;\n\t\tbackground: #00000040;\n\t\t.row{\n\t\t\tcolor: #fff;\n\t\t\tdisplay: inline-block;\n\t\t\toutline: 1px solid #000;\n\t\t\tcursor: default;\n\t\t\t&.url{\n\t\t\t\twidth: 58%;\n\t\t\t}\n\t\t\t&.nodes{\n\t\t\t\twidth: 19%;\n\t\t\t}\n\t\t\t&.actions{\n\t\t\t\twidth: 22%;\n\t\t\t}\n\t\t}\n\t}\n\n\t.content{\n\t\t.row{\n\t\t\tbackground: #00000094;\n\t\t\tdisplay: flex;\n\t\t\t.column{\n\t\t\t\tcolor: #fff;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 50%;\n\t\t\t\tpadding: 8px;\n\t\t\t\toutline: 1px solid #000;\n\t\t\t\t&.url{\n\t\t\t\t\twidth: 60%;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\tmargin-bottom: -10px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\tb{\n\t\t\t\t\t\tmargin-right: 4px;\n\t\t\t\t\t\tcolor: #696969;\n\t\t\t\t\t}\n\t\t\t\t\tdiv{\n\t\t\t\t\t\toverflow-x: scroll;\n\t\t\t\t\t\tpadding-bottom: 10px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t&.nodes{\n\t\t\t\t\twidth: 17.5%;\n\t\t\t\t}\n\t\t\t\t&.actions{\n\t\t\t\t\twidth: 22%;\n\t\t\t\t}\n\t\t\t\t&.url-input{\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tcolor: gray;\n\t\t\t\t\tbackground: #00000094;\n\t\t\t\t\tborder: none;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.actions{\n\t\t\tbutton{\n\t\t\t\tborder: 0;\n\t\t\t\tbackground: none;\n\t\t\t\tcolor: #fff;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.cross{\n\t\t\t\ttext-decoration: line-through;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: -50px;\n\t\ttop: -10px;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 2px solid #456357;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global.router\n={\n\ton: {\n\t\tcoming(){ _editorModuleURL.sortURL() }\n\t}\n}\n\n## js-global\nlet _editorModuleURL = sf.model('module-url', function(My){\n\tMy.list = Blackprint._modulesURL;\n\tMy.firstInit = !!localStorage.bpModuleURLList;\n\tMy.newURL = '';\n\n\tlet lastModuleList = localStorage.bpModuleURLList;\n\n\tMy.init = async function(){\n\t\t// First initialization cycle\n\t}\n\n\tMy.sortURL = function() {\n\t\tMy.list.sort((a, b) => a._url.localeCompare(b._url));\n\t\tMy.list.refresh();\n\n\t\tif(My.list.length === 0) return;\n\n\t\tlocalStorage.bpModuleURLList = JSON.stringify(My.list.map(v => v._url));\n\t}\n\n\tMy.shortenLink = function(url, which){\n\t\turl = new URL(url);\n\n\t\tif(which === 'search')\n\t\t\treturn url.search;\n\n\t\tif(which === 'host')\n\t\t\treturn url.host || location.host;\n\n\t\t// which === 'path'\n\t\tlet path = url.pathname;\n\t\tif(path.includes('@dist'))\n\t\t\treturn path.replace(/(cjs|mjs)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\n\n\t\treturn path.replace(/(cjs|mjs|dist)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\n\t}\n\n\tasync function loadModuleURL(url, options){\n\t\tlet temp = My.newURL;\n\t\tMy.newURL = '';\n\n\t\tlet progressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\n\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\n\t\tsf.loader.onProgress(function(loaded, total){\n\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\n\t\t});\n\n\t\ttry {\n\t\t\tawait Blackprint.loadModuleFromURL(url, options);\n\t\t\tawait sf.loader.task;\n\t\t\tSmallNotif.add(\"Module sucessfully loaded\", 'green');\n\t\t} catch(e) {\n\t\t\tSmallNotif.add(\"Failed to load module\", 'red');\n\t\t\tconsole.error(e);\n\t\t\tMy.newURL = temp;\n\t\t} finally {\n\t\t\tsf.loader.DOMWasLoaded = true; // reset flag\n\t\t}\n\n\t\t// Clear toast\n\t\tlet list = SmallNotif.list;\n\t\tlist.splice(list.indexOf(progressToast), 1);\n\n\t\tMy.sortURL();\n\t}\n\n\tMy.addURL = function(){\n\t\tlet list = My.list;\n\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlet temp = list[i];\n\t\t\tif(My.newURL === temp._url)\n\t\t\t\treturn;\n\n\t\t\tif(My.newURL.replace(/\\?.*?$/m, '') === temp._url.replace(/\\?.*?$/m, '')){\n\t\t\t\ttemp._url = My.newURL.replace(/\\?.*?$/m, '');\n\t\t\t\tloadModuleURL(temp._url, {\n\t\t\t\t\tloadBrowserInterface: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet url = My.newURL.replace(/\\?.*?$/m, '') + '?'+ (Date.now()/1000|0);\n\t\tloadModuleURL(url, {\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\n\t\t});\n\t}\n\n\tMy.reloadURL = function(item){\n\t\tif(/\\?[0-9]/.test(item._url))\n\t\t\titem._url = item._url.replace(/\\?([0-9]+)/, (full, num) => '?'+(1+Number(num)));\n\t\telse if(item._url.includes('?'))\n\t\t\titem._url = item._url.replace(/\\?.*?$/m, '')+'?1';\n\t\telse item._url += '?1';\n\n\t\tBlackprint.loadModuleFromURL(item._url);\n\t}\n\n\tlet { diveModuleURL } = Blackprint.utils;\n\tMy.hideFromURL = function(item){\n\t\tlet url = item._url.replace(/\\?.*?$/m, '');\n\t\tlet hidden = item._hidden = !item._hidden;\n\n\t\tdiveModuleURL(Blackprint.modulesURL[url], function(deepObject, deepProp, keys, bubble){\n\t\t\tdeepObject[deepProp].hidden = hidden;\n\n\t\t\t// Bubbling check if the parent has no child anymore\n\t\t\tfor (var i = bubble.length-1; i >= 0; i--) {\n\t\t\t\tlet ref = bubble[i];\n\n\t\t\t\tif(--ref.val._visibleNode <= 0){\n\t\t\t\t\tif(i === 0){\n\t\t\t\t\t\tBlackprint.nodes[keys[0]].hidden = hidden;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet parent = bubble[i-1];\n\t\t\t\t\tparent.val[ref.key].hidden = hidden;\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t});\n\t}\n\n\tMy.deleteFromURL = function(item){\n\t\tlet list = My.list;\n\t\tvar index = list.indexOf(item);\n\n\t\tif(index === -1) return;\n\t\tlet url = item._url.replace(/[?#].*?$/m, '');\n\n\t\tBlackprint.deleteModuleFromURL(url);\n\t}\n\n\tBlackprint.on('moduleDelete', { slot: 'bp-editor' }, function({ url }) {\n\t\tlet styles = document.styleSheets;\n\t\tlet simplifiedURL = url.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tlet style = styles[i];\n\t\t\tif(style.href == null) continue;\n\n\t\t\tlet temp = style.href.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\n\t\t\tif(temp === simplifiedURL){\n\t\t\t\tstyle.ownerNode.remove();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet list = My.list;\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tif(list[i]._url.includes(simplifiedURL)){\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\n\tMy.npmList = function(){\n\t\tmodal.goto('/npm-packages');\n\t}\n\n\tMy.loadCachedList = function(){\n\t\tlet list = lastModuleList;\n\t\tif(!list) return;\n\n\t\tlist = JSON.parse(list);\n\t\tif(list.length === 0) return;\n\n\t\tMy.firstInit = false;\n\n\t\tloadModuleURL(list, {\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\n\t\t});\n\t}\n\n\tMy.close = function(){\n\t\tModal.hide();\n\t\tmodal.goto('/');\n\t}\n});","## html\n<sf-m name=\"npm-package-info\">\n\t<div class=\"title\">{{ title }} (v{{ version }})</div>\n\t<div class=\"info\"><span>{{ author }}</span> <a style=\"display: {{ repository ? '' : 'none' }}\" href=\"{{ repository }}\" target=\"_blank\">(Repository)</a></div>\n\t<div class=\"description\">{{ description }}</div>\n\n\t<div class=\"list-info\">Please select module to import:</div>\n\t<div class=\"list\">\n\t\t<div class=\"item {{ x.active || '' }}\" sf-each=\"x in list\" @click=\"load(x)\">\n\t\t\t{{ x.url }} <i class=\"{{ x.active === 'loading' ? 'fa fa-spinner fa-spin' : '' }}\"></i>\n\t\t</div>\n\t</div>\n\t<div class=\"menu\">\n\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"npm-package-info\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t> .info{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tmargin-top: -20px;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t> .description {\n\t\tcolor: white;\n\t\tpadding: 0 10px;\n\t}\n\t> .list-info {\n\t\tmargin-top: 10px;\n\t\tborder-top: 1px dashed white;\n\t\tpadding: 5px 10px 0 10px;\n\t}\n\t> .title{\n\t\tpadding: 10px;\n\t\tmargin-right: 40px;\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t\ttext-decoration: underline;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\n\t> .list-info{\n\t\tcolor: white;\n\t}\n\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\n\t\t\t&.active{\n\t\t\t\tcolor: gray;\n\t\t\t}\n\t\t\t&.loading{\n\t\t\t\tcolor: burlywood;\n\t\t\t}\n\t\t}\n\t}\n\n\t.menu{\n\t\tposition: absolute;\n\t\tright: -5px;\n\t\ttop: -10px;\n\t\ttext-align: center;\n\t\t.item{\n\t\t\tcursor: pointer;\n\t\t\tpadding: 5px;\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder: 1px solid #000;\n\t\t\tborder-radius: 20px;\n\t\t\tbackground: #000000a8;\n\t\t\tcolor: #fff;\n\t\t\tbox-shadow: 0 0 5px black;\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('npm-package-info', function(My){\n\tMy.list = [];\n\tMy.title = '';\n\tMy.description = '';\n\tMy.version = '';\n\tMy.author = '';\n\tMy.date = '';\n\tMy.repository = '';\n\tMy.packageURL = '';\n\tMy.package = 0;\n\n\tMy.open = function(pkg, moduleList, exampleList){\n\t\tMy.list = moduleList;\n\t\tMy.exampleList = exampleList;\n\t\tMy.package = pkg;\n\t\tMy.title = pkg.name;\n\t\tMy.description = pkg.description || '';\n\t\tMy.version = pkg.version;\n\t\tMy.date = pkg.date.split('T')[0];\n\t\tMy.author = pkg.publisher.username || '';\n\t\tMy.repository = pkg.links.repository || '';\n\n\t\tMy.packageURL = `https://cdn.jsdelivr.net/npm/${pkg.name}@${pkg.version}`;\n\n\t\tlet temp = Blackprint.modulesURL;\n\t\tlet list = My.list;\n\t\tfor(let key in temp){\n\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\tlet item = list[i];\n\t\t\t\tif(key.includes(item.url))\n\t\t\t\t\titem.active = 'active';\n\t\t\t}\n\t\t}\n\n\t\tModal.goto('/npm-package-info');\n\t}\n\n\tlet progressToast, loading = false, loadCount = 0;\n\tfunction theProgress(finished){\n\t\tif(finished){\n\t\t\tif(loadCount !== 0){\n\t\t\t\tif(loadCount > 0) loadCount--;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!progressToast) return;\n\n\t\t\tlet list = SmallNotif.list;\n\t\t\tlist.splice(list.indexOf(progressToast), 1);\n\n\t\t\tprogressToast = false;\n\t\t\tloading = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif(loading) return;\n\t\tloading = true;\n\n\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\tsf.loader.onProgress(function(loaded, total){\n\t\t\tif(!progressToast) return;\n\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\n\t\t});\n\t}\n\n\tMy.load = async function(item){\n\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\n\n\t\tsetTimeout(()=> {\n\t\t\tif(loadCount !== 0) theProgress();\n\t\t}, 500);\n\n\t\tloadCount++;\n\t\titem.active = 'loading';\n\n\t\ttry{\n\t\t\tawait Blackprint.loadModuleFromURL([My.packageURL + item.url], {\n\t\t\t\tloadBrowserInterface: true // set to \"false\" for Node.js/Deno\n\t\t\t});\n\t\t} finally {\n\t\t\tsf.loader.DOMWasLoaded = true;\n\t\t\tloading = false;\n\t\t}\n\n\t\tif(My.exampleList.length !== 0)\n\t\t\tModuleExampleList.add(My.title, My.exampleList, My.packageURL);\n\n\t\titem.active = 'active';\n\t\tMy.package._active = true;\n\n\t\t// Clear toast\n\t\ttheProgress(true);\n\t}\n\n\tMy.back = function(){\n\t\tModal.goto('/npm-packages');\n\t}\n});","## html\n<sf-m name=\"npm-packages\">\n\t<div class=\"description\">\n\t\tSearch package on NPM repository\n\t\t<i class=\"{{ loading ? 'fa fa-spinner fa-spin' : '' }}\"></i>\n\t</div>\n\t<div class=\"mini-description\" title=\"especially if you're not a developer, always becareful if someone ask you to do something with Blackprint, like inputting password or private key\">Always becareful and verify the module's source code before going to production</div>\n\t<div class=\"search\">\n\t\t<input type=\"text\" sf-bind=\"search\" @keyup.Enter=\"refreshList\" placeholder=\"Search...\">\n\t</div>\n\t<div class=\"list\">\n\t\t<div class=\"item {{ x.package._active && 'active' }} {{ x.package._update && 'update' }}\" sf-each=\"x in list\" @click=\"open(x.package)\">\n\t\t\t<div>\n\t\t\t\t<div class=\"title\">{{ x.package.name }} <span>(v{{ x.package.version }})</span></div>\n\t\t\t\t<div class=\"author\">{{ x.package.publisher.username }}</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div class=\"description\">{{ x.package.description }}</div>\n\t\t\t\t<div class=\"date\">{{ x.package.date.split('T')[0] }}</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"npm-packages\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.search-info{\n\t\tcolor: white;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t\tmargin-bottom: 10px;\n\t}\n\t> .mini-description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tmargin-top: -20px;\n\t}\n\t> .description{\n\t\tpadding: 10px;\n\t\tcolor: white;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.search{\n\t\tpadding: 0 5px;\n\t\tinput{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\twidth: calc(100% - 22px);\n\t\t}\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tcursor: pointer;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px solid #000;\n\t\t\t&:hover{\n\t\t\t\tbackground: #000000de;\n\t\t\t}\n\n\t\t\t&.active{\n\t\t\t\tcolor: gray;\n\t\t\t}\n\n\t\t\t.title{\n\t\t\t\tfont-weight: bold;\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t\t.description{\n\t\t\t\tfont-weight: normal;\n\t\t\t\tpadding-right: 80px;\n\t\t\t}\n\t\t\t.author{\n\t\t\t\tfloat: right;\n\t\t\t\tmargin-top: -24px;\n\t\t\t}\n\t\t\t.date{\n\t\t\t\tfloat: right;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tmargin-top: -20px;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('npm-packages', function(My){\n\tlet query = 'https://registry.npmjs.org/-/v1/search?text=blackprint%20nodes';\n\tMy.list = [];\n\tMy.search = '';\n\tMy.loading = false;\n\n\tMy.init = function(){\n\t\tMy.refreshList();\n\t}\n\n\tMy.refreshList = async function(){\n\t\tlet _query = query;\n\t\tif(My.search !== '')\n\t\t\t_query += '%20'+My.search;\n\n\t\tMy.loading = true;\n\t\tlet list = (await $.getJSON(_query)).objects;\n\t\tMy.loading = false;\n\n\t\t// ToDo: check if version was different with current loaded module\n\t\tlet temp = Blackprint.modulesURL;\n\t\tfor(let key in temp){\n\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\tlet item = list[i].package;\n\n\t\t\t\tif(key.includes(item.name)){\n\t\t\t\t\titem._active = true;\n\t\t\t\t\titem._update = Blackprint.utils.packageIsNewer(key, item.name+'@'+item.version);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tMy.list = list;\n\t}\n\n\tMy.open = async function(pkg){\n\t\tMy.loading = true;\n\n\t\t// ToDo: do we need to sanitize URL? '-'\n\t\tlet dirs = await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${pkg.name}@${pkg.version}`);\n\t\tdirs = dirs.files;\n\n\t\tlet dist = [];\n\t\tlet example = [];\n\n\t\tfor (var i = 0; i < dirs.length; i++) {\n\t\t\tlet dir = dirs[i];\n\t\t\tif(dir.type !== 'directory') continue;\n\n\t\t\tif(dir.name === 'dist'){\n\t\t\t\tlet temp = dir.files;\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\n\t\t\t\t\tlet file = temp[a];\n\t\t\t\t\tif(file.type !== 'file') continue;\n\n\t\t\t\t\tlet name = file.name;\n\t\t\t\t\tif(/\\.(map|sf\\.mjs|sf\\.js|css)$/.test(name))\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdist.push({url: `/dist/${name}`});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(dir.name === 'example'){\n\t\t\t\tlet temp = dir.files;\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\n\t\t\t\t\tlet file = temp[a];\n\t\t\t\t\tif(file.type !== 'file') continue;\n\n\t\t\t\t\texample.push({url: `/example/${file.name}`});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tMy.loading = false;\n\t\tsf.model('npm-package-info').open(pkg, dist, example);\n\t}\n});","## html\n<sf-m name=\"sketch-importer\">\n\t<div class=\"description\" title=\"To avoid any risks if you have stored sensitive data on this editor, make sure you have verify the author of the nodes and the JSON to be imported.\">Please verify the author before importing</div>\n\t<div class=\"info-modules\">\n\t\t<div class=\"title\">These modules will be imported:</div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in modules\">\n\t\t\t\t{{ x }}\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-nodes\">\n\t\t<div class=\"title\">These nodes will be used:</div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in nodes\">\n\t\t\t\t{{ x.name }} ({{ x.count }})\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-clear\">\n\t\t<div class=\"title\">Please be careful if you saved any sensitive data<br>Click to clear the saved data:</div>\n\t\t<!-- Hi! can you contribute for clearing browser data like WebSQL or IndexedDB? -->\n\t\t<div class=\"button-clear\">\n\t\t\t<div @click=\"clear.localStorage\">\n\t\t\t\tLocal Storage ({{ savedKeys.localStorage.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sessionStorage\">\n\t\t\t\tSession Storage ({{ savedKeys.sessionStorage.length }})\n\t\t\t</div><br>\n\t\t\t<div @click=\"clear.environmentVariables\">\n\t\t\t\tEnvironment Variables ({{ savedKeys.environmentVariables.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sketchPages\">\n\t\t\t\tSketch Pages ({{ savedKeys.sketchPages.length }})\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"button-import\" @click=\"importNow\">\n\t\tImport Sketch\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"sketch-importer\"] {\n\tbackground: #1e1e1eab;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\tcolor: white;\n\tmax-width: 80vw;\n\t.description{\n\t\tpadding: 10px;\n\t\tmin-width: 500px;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tmargin-bottom: 10px;\n\t\ttext-decoration: underline;\n\t\tletter-spacing: 1px;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.info-modules, .info-nodes{\n\t\tbackground: #000000ab;\n\t\tpadding: 7px;\n\t\tborder-radius: 10px;\n\t\tmargin: 5px 2px;\n\t\t.title{\n\t\t\tcolor: gray;\n\t\t}\n\t}\n\t.info-clear{\n\t\tmargin-top: 10px;\n\t\t.title{\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t.list{\n\t\tlist-style-type: decimal;\n\t\tmargin: 5px 0;\n\t\tpadding: 0 30px;\n\t\tmax-height: 15vh;\n\t\toverflow: hidden scroll;\n\t}\n\t.button-clear{\n\t\ttext-align: center;\n\t\tdiv{\n\t\t\tdisplay: inline-block;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px dashed #000;\n\t\t\tpadding: 7px;\n\t\t\tbackground: #000000ad;\n\t\t\tborder-radius: 20px;\n\t\t\tcursor: pointer;\n\t\t\t&:hover{\n\t\t\t\tbackground: #181818ad;\n\t\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t\t}\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global\nvar SketchImporter = sf.model('sketch-importer', function(My){\n\tMy.modules = [];\n\tMy.nodes = [];\n\tMy.pendingLoad = void 0;\n\tMy.savedKeys = {\n\t\tlocalStorage:[],\n\t\tsessionStorage:[],\n\t\tenvironmentVariables:[],\n\t\tsketchPages:[],\n\t};\n\n\tlet progressToast = false;\n\tlet progressTriggered = true;\n\n\tMy.loadJSON = async function(json){\n\t\tModal.goto('/sketch-importer');\n\n\t\tif(json.constructor === String)\n\t\t\tjson = JSON.parse(json);\n\n\t\tMy.pendingLoad = json;\n\n\t\tlet metadata = json._;\n\t\tMy.modules = (metadata && metadata.moduleJS) || [];\n\n\t\tMy.nodes = [];\n\t\tfor(let key in json){\n\t\t\tif(key === '_') continue;\n\n\t\t\tMy.nodes.push({name: key, count: json[key].length});\n\t\t}\n\n\t\tMy.checkSavedData();\n\t}\n\n\tMy.importNow = function(){\n\t\tif(My.pendingLoad === void 0){\n\t\t\tlet msg = \"Please call 'SketchImport.loadJSON' first\";\n\t\t\tconsole.error(msg);\n\n\t\t\tSmallNotif.add(msg, 'yellow');\n\t\t\treturn false;\n\t\t}\n\n\t\tModal.hide();\n\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\n\t\tsketch.__importing = true;\n\n\t\tasync function pageShowed(){\n\t\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\n\n\t\t\t// Add listener only once until finish\n\t\t\tif(progressTriggered){\n\t\t\t\tsf.loader.onProgress(function(loaded, total){\n\t\t\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\n\t\t\t\t\tprogressTriggered = true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Import from JSON, and also load required modules if exist\n\t\t\ttry{\n\t\t\t\tawait sketch.importJSON(My.pendingLoad);\n\t\t\t} catch(e) {\n\t\t\t\tSmallNotif.add(\"Failed to import data\", 'red');\n\t\t\t\tthrow e;\n\t\t\t} finally {\n\t\t\t\tsf.loader.DOMWasLoaded = true;\n\t\t\t\tdelete sketch.__importing;\n\t\t\t\tMy.pendingLoad = void 0;\n\t\t\t}\n\n\t\t\t// Clear toast\n\t\t\tlet list = SmallNotif.list;\n\t\t\tlist.splice(list.indexOf(progressToast), 1);\n\t\t}\n\n\t\tif(views.currentPath === '/sketch/1'){\n\t\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\t\treturn setTimeout(pageShowed, 400);\n\t\t}\n\n\t\tviews.goto('/sketch/1');\n\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\tsetTimeout(pageShowed, 1000); // Wait page animation\n\t}\n\n\tMy.checkSavedData = function(){\n\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\tMy.savedKeys.sketchPages = SketchList;\n\t}\n\n\tMy.clear = {\n\t\tlocalStorage(){\n\t\t\tlet keys = Object.keys(localStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete localStorage[keys[i]];\n\n\t\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\t},\n\t\tsessionStorage(){\n\t\t\tlet keys = Object.keys(sessionStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete sessionStorage[keys[i]];\n\n\t\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\t},\n\t\tenvironmentVariables(){\n\t\t\tlet ref = Blackprint.Environment;\n\t\t\tlet keys = Object.keys(ref.map);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tref.delete(keys[i]);\n\n\t\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\t},\n\t\tsketchPages(){\n\t\t\tfor (var i = 0; i < SketchList.length; i++)\n\t\t\t\tSketchList[i].destroy();\n\n\t\t\tSketchList.splice(1);\n\t\t\tviews.goto('/sketch/1');\n\t\t}\n\t};\n});","## html\n<sf-m name=\"sketch-settings\">\n\t<div class=\"description\">Settings</div>\n\t<div class=\"list\">\n\t\t<div class=\"item\">\n\t\t\t<div class=\"title\">Theme:</div>\n\t\t\t<select sf-bind=\"theme\">\n\t\t\t\t<option value=\"default\">Default</option>\n\t\t\t\t<option value=\"darker\">Darker</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"sketch-settings\"] {\n\tbackground: #292929;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\t.description{\n\t\tpadding: 5px;\n\t\tcolor: white;\n\t\tborder-bottom: 1px solid black;\n\t\tbackground: #111;\n\t}\n\t.list{\n\t\tpadding: 5px;\n\t\t.item{\n\t\t\tcolor: #fff;\n\t\t\tbackground: #0000009e;\n\t\t\tborder: 1px solid #000;\n\t\t\tpadding: 5px;\n\t\t\tmargin: 5px;\n\t\t\t.title{\n\t\t\t\tdisplay: inline;\n\t\t\t\tmargin-right: 10px;\n\t\t\t}\n\t\t\tselect{\n\t\t\t\tbackground: black;\n\t\t\t\tborder: none;\n\t\t\t\tcolor: white;\n\t\t\t\toutline: none;\n\t\t\t\tpadding: 5px;\n\t\t\t}\n\t\t}\n\t}\n}\n\n## js-global\nsf.model('sketch-settings', function(My){\n\tMy.theme = 'default';\n\tMy.on$theme = function(now){\n\t\t$('body')\n\t\t\t.removeClass('node-ui-'+My.theme)\n\t\t\t.addClass('node-ui-'+now);\n\t}\n});","## html\n<sketch-page>\n\t<div class=\"bottom-message\">This editor still in development (≧▽≦)／<br>\nI want to make it better and easier to use.<br>\nPlease use right click to open drop down menu for the cable, node, container, or port.</div>\n\n\t<!-- This element will be replaced with 'My.space' -->\n\t<sf-slot for=\"space\"></sf-slot>\n</sketch-page>\n\n## scss-global\nsketch-page{\n\t.bottom-message{\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tcolor: #ababab;\n\t\twidth: 100%;\n\t\tpadding: 20px;\n\t\ttext-align: center;\n\t}\n\n\tsf-space[blackprint] .bg-tile{\n\t\tbackground: url('/assets/img/background/tile.png');\n\t\tbackground-size: 100px;\n\t\tfilter: brightness(38%);\n\t\tbackface-visibility: hidden;\n\t\topacity: 0.5;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: absolute;\n\t}\n}\n\n## js-global.router\n={\n\ton:{\n\t\tcoming(data){ // data === views.data\n\t\t\tconsole.log(\"Sketch page data:\", data);\n\t\t\tlet sketch = SketchList[data.page - 1];\n\n\t\t\tsf.model('header').cloneActive = sketch.page.cloneActive;\n\t\t},\n\t\tshowed(){\n\t\t\tsetTimeout(()=> {\n\t\t\t\tif(SketchList.length === 1 && SketchList[0].ifaceList.length === 0){\n\t\t\t\t\tif(SketchList[0].__importing) return;\n\t\t\t\t\tif(modal.currentPath === '/sketch-importer') return;\n\n\t\t\t\t\tModal.goto('/example-list');\n\t\t\t\t}\n\t\t\t}, 100);\n\n\t\t\t$('body > .background .tile').css('display', 'none');\n\t\t},\n\t\tleaving(){\n\t\t\tconsole.log(\"Leaving from sketch page data:\", arguments);\n\t\t\t$('body > .background .tile').css('display', '');\n\t\t}\n\t}\n}\n\n## js-global\n// Blackprint.space = Space (https://github.com/ScarletsFiction/ScarletsFrame/wiki)\n// sketch.scope = shortcut to obtain your model scope/context\nvar SketchList = [];\nsf.component('sketch-page', function(My){\n\t// URL: #page/sketch/{data.page}\n\tlet sketch = My.sketch = SketchList[views.data.page - 1] ??= new Blackprint.Sketch();\n\tsketch.page = My;\n\n\t// Please use sketch.on('...', callback) instead\n\t// This is used if no one listened to the event\n\tsketch._event.$_fallback = BlackprintEventFallback;\n\n\tBlackprint.settings('visualizeFlow', true);\n\tMy.space ??= sketch.cloneContainer();\n\n\tlet SketchPages = sf.model('sketch-pages');\n\tlet container = sketch.scope('container');\n\tlet header = sf.model('header');\n\n\tcontainer.onScale = function(scale){\n\t\theader.info.scale = Math.round(scale * 100);\n\t}\n\n\t// Will run when <sketch-page> inserted on DOM\n\tMy.init = async function(){\n\t\tlet sfm = $(My.space.firstElementChild);\n\t\tif(!sfm.eq(0).hasClass('bg-tile')){\n\t\t\tsfm.prepend('<div class=\"bg-tile\"></div>');\n\t\t}\n\t}\n\n\tMy.importJSON = json => sketch.importJSON(json);\n\tMy.clearNodes = ()=> sketch.clearNodes();\n\n\tMy.cloneActive = false;\n\tMy.cloneContainer = function(){\n\t\tMy.cloneActive = !My.cloneActive;\n\n\t\tif(My.cloneActive){\n\t\t\tif(My.switchVFXActive === false)\n\t\t\t\tMy.switchVFX();\n\n\t\t\t// Reset current container view\n\t\t\tvar container = sketch.scope('container');\n\t\t\tcontainer.pos.x = 0;\n\t\t\tcontainer.pos.y = 0;\n\t\t\tcontainer.scale = 1; // 100% scale\n\n\t\t\tvar mini;\n\t\t\tif(container.minimap)\n\t\t\t\tmini = container.minimap;\n\t\t\telse{\n\t\t\t\tmini = sketch.cloneContainer(true); // Clone and get the MiniMap\n\n\t\t\t\t// Remove the dropdown from minimap\n\t\t\t\t$('sf-m[name=\"dropdown\"]', mini).remove();\n\t\t\t}\n\n\t\t\t// Clone into new window\n\t\t\tnew sf.Window({\n\t\t\t\ttitle: \"Cloned Sketch Container\",\n\t\t\t\ttemplateHTML: sketch.cloneContainer() // Clone 2\n\t\t\t}, refreshViewport);\n\n\t\t\t// Put the mini container into DOM\n\t\t\tSketchPages.miniViewer.topRight = mini;\n\n\t\t\t// Refresh mini viewport size\n\t\t\t// I put it like this for a reason\n\t\t\trefreshViewport();\n\t\t\tfunction refreshViewport(){\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tcontainer.pos.x = -0.1;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tcontainer.pos.x = 0;\n\t\t\t\t\t}, 500);\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tSketchPages.miniViewer.topRight = null;\n\t\t\tsf.Window.destroy();\n\t\t}\n\t}\n\n\tsketch.on('node.menu', function({ iface, menu }){\n\t\tmenu.unshift({\n\t\t\ttitle: !iface.id ? \"Add ID\" : \"Modify ID\",\n\t\t\tasync callback(){\n\t\t\t\tlet ref = await Swal.fire({\n\t\t\t\t\ttitle: \"Write the new ID here\",\n\t\t\t\t\ttext: (iface.id ? \"Current ID: \"+iface.id : void 0),\n\t\t\t\t\tinput: \"text\",\n\t\t\t\t});\n\n\t\t\t\tif(ref.isConfirmed === false) return;\n\n\t\t\t\tlet sketch = SketchList[0];\n\t\t\t\tlet val = ref.value;\n\n\t\t\t\tif(val === ''){\n\t\t\t\t\tdelete sketch.iface[iface.id];\n\t\t\t\t\tiface.id = val;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(sketch.iface[val] !== void 0)\n\t\t\t\t\tthrow new Error(\"ID already exist\");\n\n\t\t\t\tiface.id = val;\n\t\t\t\tsketch.iface[val] = iface;\n\t\t\t}\n\t\t});\n\t});\n});"]}