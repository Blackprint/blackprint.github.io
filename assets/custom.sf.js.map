{"version":3,"sources":["component/dropdown.sf","component/sketch-panel-bottom.sf","component/sketch-panel-left.sf","component/sketch-panel-right.sf","component/SmallNotif.sf","component/tree-list.sf","model/Loading.sf","model/modal.sf","model/tooltip.sf","routes/+vw-ground/index.sf","routes/+vw-ground/sketch.sf","routes/+vw-modal/custom-node-editor.sf","routes/+vw-modal/dev-mode.sf","routes/+vw-modal/environment-variables.sf","routes/+vw-modal/example-list.sf","routes/+vw-modal/module-example-list-deep.sf","routes/+vw-modal/module-example-list.sf","routes/+vw-modal/module-url.sf","routes/+vw-modal/npm-package-info.sf","routes/+vw-modal/npm-packages.sf","routes/+vw-modal/remote-engine-connect.sf","routes/+vw-modal/remote-sketch-connect.sf","routes/+vw-modal/sketch-importer.sf","routes/+vw-modal/sketch-settings.sf","routes/+vw-ground/sketch+vw-page/_page.sf"],"names":["DropDown","sf","model","My","menus","onCancel","className","pendingDeepOpen","pendingDeepOpen_","icon","more","show","x","y","event","element","title","length","splice","backdropCreated","backdrop","insertBefore","Window","source","$el","setTimeout","addClass","$","on","backdropListener","once","ev","preventDefault","addBackdrop","rect","getBoundingClientRect","height","i","hide","push","getElement","deepRemove","removeBackdrop","target","parent","removeClass","remove","off","component","template","include","$item","visible","hidden","options","_parent","root","width","disabled","currentDeepLevel","init","el","ulElem","querySelector","afterRepaint","then","w","offsetWidth","offsetHeight","focus","innerWidth","innerHeight","opt","elem","getElements","deep","clearTimeout","hover","apply","context","args","callback","unhover","openDeep","yi","ul","scrollTop","append","children","offsetTop","$DropDown","$space","sf$noGC","removeBlur","css","opened","panels","bottom","openPanel","closePanel","stopPropagation","pendingRefresh","sketch","SketchList","views","data","page","deepCount","obj","len","key","temp","Function","refresh","preview","previewWidth","previewScale","scaledPreviewHeight","variables","functions","nodes","Blackprint","variableCount","functionCount","nodeCount","refreshCounter","availableNode","recheckPreviewSize","left","setPreview","disconnect","checkTime","checker","async","clientWidth","clientHeight","scale","Math","round","Date","now","ResizeObserver","items","observe","collapseTree","nextElementSibling","parentNode","collapseSubPanel","toggleClass","checkDragNode","getAttribute","ToolTip","set","evUp","closest","namespace","parentKey","offset","createNode","clientX","clientY","createVariable","SmallNotif","add","createFunction","createCustomNode","Modal","goto","nodeSelected","ifaceField","id","v2m$id","val","comment","v2m$comment","right","_firstTimeOpen","selectNode","iface","_bpeditorpanel","bppc","toLowerCase","split","join","bppcList","space","new","stem","list","on$list","create","animateKey","window","templates","message","color","delay","item","timer","indexOf","close","collapse","Loading","showed","desc","text","hotReloaded","Views","listSelector","outside","path","_listener","toWorkspace","openExamples","miniViewer","topRight","topRightHidden","on$topRight","content","monaco","loader","js","monaco_loader","container","recreate","editor","dispose","statusEl","find","value","language","theme","minimap","enabled","run","eval","getValue","emit","setValue","code","url","localStorage","BPModuleServer","placeholder","location","origin","connectDefault","changeServer","clearOnFail","_url","slice","___browserSync___","e","socketUrl","socket","onConnected","console","log","connected","nsp","io","uri","connect","newModuleLoaded","moduleList","Object","values","getJSON","loadModuleFromURL","loadBrowserInterface","pendingResources","size","hotReload","caretFocusOnLastItem","Environment","newValue","newKey","v2m$newKey","validateKey","itemChanged","_refreshEnvironment","map","uniq","Set","has","delete","Number","isNaN","replace","toUpperCase","modal","open","sampleList","clearNodes","Sketch","__importing","SketchImporter","pendingLoad","importNow","packageName","baseUrl","openModal","pkg","examples","name","packageURL","openExample","loadJSON","back","ModuleExampleList","EditorHeader","_moduleExampleList","cache","bpModuleExampleList","JSON","parse","ref","sort","a","b","localeCompare","stringify","_editorModuleURL","_modulesURL","firstInit","newURL","lastModuleList","bpModuleURLList","loadModuleURL","progressToast","DOMWasLoaded","onProgress","loaded","total","task","error","sortURL","v","shortenLink","which","URL","search","host","pathname","includes","addURL","reloadURL","test","full","num","_remote","syncModuleList","diveModuleURL","utils","hideFromURL","_hidden","modulesURL","deepObject","deepProp","keys","bubble","_visibleNode","deleteFromURL","deleteModuleFromURL","slot","styles","document","styleSheets","simplifiedURL","style","href","ownerNode","npmList","loadCachedList","theProgress","intv","setInterval","loadedContent","totalContent","clearInterval","description","version","author","date","repository","package","exampleList","publisher","username","links","active","load","_active","loading","refreshList","_query","objects","_update","packageIsNewer","dirs","files","dist","example","dir","type","file","BPRemoteEngine","allowModuleSync","allowRemoteImport","allowDataOutSync","client","instance","RemoteControl","enable","destroy","time","sendSketchToRemote","importRemoteJSON","disablePorts","onImport","onModule","onSyncIn","onSyncOut","BPSketchRelayServer","RemoteSketch","modules","savedKeys","sessionStorage","environmentVariables","sketchPages","progressTriggered","json","constructor","String","metadata","_","moduleJS","count","checkSavedData","msg","pageShowed","importJSON","currentPath","clear","on$theme","background","bpBackgroundURL","on$background","hideUnusedPort","bpHideUnusedPort","on$hideUnusedPort","scope","nodeScope","_event","$_fallback","BlackprintEventFallback","SuggestNodeTypeCaster","port","PortHoverInfo","NodeHoverInfo","ctrlKey","afterCreated","suggestedNode","suggestNodeForPort","menu","settings","cloneContainer","SketchPages","header","onScale","info","sfm","firstElementChild","eq","hasClass","prepend","cloneActive","disableVFXActive","disableVFX","mini","refreshViewport","pos","templateHTML","unshift","Swal","fire","input","isConfirmed","Error","openNodeSource"],"mappings":"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","sourcesContent":["## comment, This will be used for sf-each for above element\r\n## html\r\n<drop-down class=\"dropdown-menu {{hidden}}\" style=\"\r\n    display: {{visible ? 'block' : 'none'}};\r\n    transform: translate({{ x | 0 }}px, {{ y | 0 }}px);\r\n  \">\r\n  <div class=\"first\" style=\"display: {{ !title && 'none' }}\">{{ title || '' }}</div>\r\n  <ul>\r\n    <li sf-each=\"x in options\" :class=\"{{ x.divider ? 'divider' : '' }} {{ x.disabled ? 'disabled' : '' }}\" title=\"{{ x.info || '' }}\">\r\n      {{@if x.title !== undefined:\r\n      \t{[ <a> ]} // Begin\r\n\r\n      \t// Icon on the left\r\n      \tif(x.icon !== void 0){\r\n      \t\tif(x.icon.includes('//'))\r\n      \t\t\t{[ <img class=\"dropdown-icon\" :src=\"{{x.icon}}\"> ]};\r\n      \t\telse\r\n      \t\t\t{[ <i class=\"dropdown-icon {{x.icon}}\"></i> ]};\r\n      \t}\r\n\r\n      \t// Always use { [ enclosed template ]} to avoid vulnerability\r\n      \t// like the text being parsed as HTML\r\n      \t{[ <div>{{ x.title }}</div> ]} // Content\r\n\r\n      \t// Add icon if the has deep menu\r\n      \tif(x.deep !== void 0)\r\n      \t\t{[ <i class=\"{{ root.icon.more }} has-deep\"></i> ]};\r\n\r\n      \t{[ </a> ]} // End\r\n      }}\r\n    </li>\r\n  </ul>\r\n</drop-down>\r\n\r\n## scss-global\r\n.dropdown-menu {\r\n\tz-index: 10000;\r\n\topacity: 0.9;\r\n\r\n\tmargin-top: 7px;\r\n\tbackground-color: rgba(255, 255, 255, 0.96);\r\n\tbox-shadow: 1px 1px 11px 3px black;\r\n    border: inherit;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 0;\r\n    border-radius: 3px;\r\n    background: white;\r\n\r\n    // transition: 0.3s ease-out;\r\n    // transition-property: visibility, opacity;\r\n    &.hidden{\r\n\t\tvisibility: hidden;\r\n\t\topacity: 0;\r\n    }\r\n    ul{\r\n    \toverflow-x: hidden;\r\n    \toverflow-y: auto;\r\n    \tmax-height: 300px;\r\n    }\r\n\r\n\tli {\r\n\t\tposition: relative;\r\n\t\tvertical-align: baseline;\r\n\t\tdisplay: inherit !important;\r\n\t\tpadding: 8px 16px 8px 8px;\r\n\t\tmin-width: 110px;\r\n\t\tborder-bottom: 1px dashed darkgray;\r\n\t\tfont-size: 16px;\r\n\r\n\t\t> * {\r\n\t\t\tpointer-events: none;\r\n\t\t}\r\n\r\n\t\t&:hover{\r\n\t\t\tbackground: lightgray;\r\n\t\t}\r\n\r\n\t\tcursor: pointer;\r\n    \tcolor: black;\r\n\t}\r\n\r\n\tul li .has-deep{\r\n\t\ttop: 11px;\r\n\t\tposition: absolute;\r\n\t\tright: 5px;\r\n\t}\r\n}\r\n\r\ndrop-down.dropdown-menu drop-down{\r\n\topacity: 1;\r\n}\r\n\r\n.ground-backdrop{\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: rgba(0,0,0,.4);\r\n\tz-index: 10000;\r\n\tvisibility: hidden;\r\n\topacity: 0;\r\n\ttransition-duration: .2s;\r\n\r\n\t&.show{\r\n\t\topacity: 1;\r\n\t\tvisibility: visible;\r\n\t}\r\n}\r\n\r\ndrop-down{\r\n\t&> .first {\r\n\t\tdisplay: block;\r\n\t\tpadding: 5px 10px;\r\n\t\ttext-align: center;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 16px;\r\n\t\ttext-transform: capitalize;\r\n\t\tletter-spacing: 1px;\r\n\t\tcolor: white;\r\n\t\tbackground: #ba2f63;\r\n\t\tbox-shadow: 0 0 5px #d12867;\r\n\t}\r\n\tul{\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\r\n\t\tli a {\r\n\t\t\tdisplay: flex;\r\n\t\t\tdiv{\r\n\t\t\t\tpadding-left: 5px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.dropdown-icon {\r\n\t\t\tpadding-right: 5px;\r\n\t\t\tfloat: left;\r\n\t\t\talign-self: center;\r\n\t\t}\r\n\r\n\t\tli.disabled, li.disabled:hover{\r\n\t\t\tcursor: default !important;\r\n\t\t\tbackground: #888;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\n// =====================================================================\r\n// ============== Model <sf-m name=\"dropdown\"></sf-m> ==================\r\n// =====================================================================\r\nvar DropDown = sf.model('dropdown', function(My){\r\n\tMy.menus = [];\r\n\tMy.onCancel = void 0;\r\n\tMy.className = '';\r\n\tMy.pendingDeepOpen = false;\r\n\tMy.pendingDeepOpen_ = 0;\r\n\r\n\tMy.icon = {\r\n\t\tmore: 'fa fa-chevron-right'\r\n\t};\r\n\r\n\t// menus: [{title, callback}, {title, deep:[{...}]}, ...]\r\n\tMy.show = function(menus, { x, y, event, element, title, className }){\r\n\t\t// Remove last dropdown if haven't been closed\r\n\t\tif(My.menus.length !== 0)\r\n\t\t\tMy.menus.splice(0);\r\n\t\telse\r\n\t\t\taddBackdrop();\r\n\r\n\t\tmenus.title = title;\r\n\r\n\t\tif(element !== void 0){\r\n\t\t\tlet rect = element.getBoundingClientRect();\r\n\t\t\tmenus.x = rect.x + 5;\r\n\t\t\tmenus.y = rect.y + rect.height;\r\n\t\t}\r\n\t\telse if(x !== void 0){\r\n\t\t\tmenus.x = x;\r\n\t\t\tmenus.y = y;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tmenus.x = event.x;\r\n\t\t\tmenus.y = event.y;\r\n\t\t\tmenus.event = event;\r\n\t\t}\r\n\r\n\t\tfor (var i = menus.length - 1; i >= 0; i--) {\r\n\t\t\tif(menus[i].hide)\r\n\t\t\t\tmenus.splice(i, 1);\r\n\t\t}\r\n\r\n\t\tMy.className = className || '';\r\n\t\tMy.menus.push(menus);\r\n\t\treturn My;\r\n\t}\r\n\r\n\tMy.hide = function(){\r\n\t\tfor (var i = 0; i < My.menus.length; i++)\r\n\t\t\tMy.menus.getElement(i).model.deepRemove();\r\n\r\n\t\tMy.pendingDeepOpen = false;\r\n\t\tMy.pendingDeepOpen_ = 0;\r\n\t\tMy.menus.splice(0);\r\n\t\tremoveBackdrop();\r\n\r\n\t\tMy.className = '';\r\n\t}\r\n\r\n\tvar backdropCreated = false;\r\n\tfunction backdropListener(ev){\r\n\t\tif($(ev.target).parent('sf-m')[0] === sf.Window.source(My.$el))\r\n\t\t\treturn;\r\n\r\n\t\tremoveBackdrop();\r\n\r\n\t\tMy.hide();\r\n\t\tMy.onCancel && My.onCancel();\r\n\t}\r\n\r\n\tvar backdrop = $('<div class=\"ground-backdrop\"></div>');\r\n\tfunction addBackdrop(){\r\n\t\tif(backdropCreated) return;\r\n\r\n\t\tbackdrop.insertBefore(sf.Window.source(My.$el));\r\n\t\tsetTimeout(function(){\r\n\t\t\tbackdrop.addClass('show');\r\n\t\t\t$(sf.Window).on('pointerdown', backdropListener);\r\n\t\t\t$(sf.Window).once('contextmenu', ev => ev.preventDefault());\r\n\t\t\tbackdropCreated = true;\r\n\t\t}, 10);\r\n\t}\r\n\r\n\tfunction removeBackdrop(){\r\n\t\tbackdropCreated = false;\r\n\t\tbackdrop.removeClass('show');\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tbackdrop.remove();\r\n\t\t}, 200);\r\n\r\n\t\t$(sf.Window).off('pointerdown', backdropListener);\r\n\t}\r\n});\r\n\r\n// =====================================================================\r\n// ============== Component <drop-down></drop-down> ====================\r\n// =====================================================================\r\nsf.component('drop-down', {template: #this.path}, function(My, include, $item){\r\n\tMy.visible = false;\r\n\tMy.hidden = 'hidden'; // We also need to hide it before repaint\r\n\r\n\tMy.options = $item;\r\n\tMy._parent = $item._parent;\r\n\tMy.x = $item.x;\r\n\tMy.y = $item.y;\r\n\tMy.root = include('dropdown');\r\n\tMy.width = 0;\r\n\tMy.height = 0;\r\n\tMy.disabled = $item.disabled === true;\r\n\r\n\tfor (var i = $item.length - 1; i >= 0; i--) {\r\n\t\tif($item[i].hide)\r\n\t\t\t$item.splice(i, 1);\r\n\t}\r\n\r\n\t// First dropdown title\r\n\tMy.title = $item.title;\r\n\r\n\tvar currentDeepLevel, $el;\r\n\tMy.init = function(){\r\n\t\tif($item.event !== void 0){\r\n\t\t\tvar el = sf.Window.source(My.$el, $item.event);\r\n\t\t\tif(el === null) return;\r\n\t\t\t$el = $(el);\r\n\t\t}\r\n\t\telse $el = My.$el;\r\n\r\n\t\tMy.visible = true;\r\n\r\n\t\t// Check position when the element rendered\r\n\t\tvar ulElem = sf.Window.source(My.$el, $item.event).querySelector('ul');\r\n\t\t$.afterRepaint().then(function(){\r\n\t\t\tlet x = 0, y = 0;\r\n\t\t\tlet parent = My._parent;\r\n\t\t\tlet w = parent !== void 0 ? parent.width : 0;\r\n\r\n\t\t\twhile(parent !== void 0){\r\n\t\t\t\tx += parent.x;\r\n\t\t\t\ty += parent.y;\r\n\t\t\t\tparent = parent._parent;\r\n\t\t\t}\r\n\r\n\t\t\tMy.width = ulElem.offsetWidth;\r\n\t\t\tMy.height = ulElem.offsetHeight;\r\n\r\n\t\t\tif(x + My.x + My.width > sf.Window.focus.innerWidth)\r\n\t\t\t\tMy.x -= My.width + w;\r\n\r\n\t\t\tif(y + My.y + My.height > sf.Window.focus.innerHeight)\r\n\t\t\t\tMy.y -= My.height;\r\n\r\n\t\t\tMy.hidden = '';\r\n\t\t});\r\n\r\n\t\t// Find nested options and add event listener on mouse hover\r\n\t\tvar options = My.options;\r\n\t\tfor (var i = 0; i < options.length; i++) {\r\n\t\t\tlet opt = options[i];\r\n\t\t\tconst elem = $(options.getElements(i));\r\n\r\n\t\t\tif(opt.deep !== void 0){\r\n\t\t\t\tfunction openDeep(ev){\r\n\t\t\t\t\tif(currentDeepLevel !== void 0)\r\n\t\t\t\t\t\tMy.deepRemove();\r\n\r\n\t\t\t\t\tif(opt.hover !== void 0)\r\n\t\t\t\t\t\topt.hover.apply(opt.context, opt.args);\r\n\r\n\t\t\t\t\tvar deep = opt.deep;\r\n\t\t\t\t\tdeep.event = ev;\r\n\t\t\t\t\tdeep._parent = My;\r\n\r\n\t\t\t\t\t// Use the cache instead\r\n\t\t\t\t\tif(deep.el !== void 0){\r\n\t\t\t\t\t\tcurrentDeepLevel = deep.el;\r\n\t\t\t\t\t\tdeep.el.model.y = deep.yi - (deep.ul?.scrollTop || 0);\r\n\t\t\t\t\t\t$el.append(deep.el);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeep.ul = My.$el.children('ul')[0];\r\n\r\n\t\t\t\t\t// Initialize position once\r\n\t\t\t\t\tdeep.x = ulElem.offsetWidth;\r\n\t\t\t\t\tdeep.yi = ev.target.offsetTop - 7;\r\n\t\t\t\t\tdeep.y = deep.yi - (deep.ul?.scrollTop || 0);\r\n\r\n\t\t\t\t\t// Create dropdown in current sf-space\r\n\t\t\t\t\tdeep.el = currentDeepLevel = new $DropDown(deep, My.$space);\r\n\t\t\t\t\tcurrentDeepLevel.sf$noGC = true; // Avoid framework's GC\r\n\t\t\t\t\t$el.append(currentDeepLevel);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telem.on('mouseover', function(ev){\r\n\t\t\t\t\tMy.root.pendingDeepOpen = ev.target;\r\n\t\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\r\n\r\n\t\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\r\n\t\t\t\t\t\tif(My.root.pendingDeepOpen === ev.target)\r\n\t\t\t\t\t\t\topenDeep(ev);\r\n\t\t\t\t\t}, 200);\r\n\t\t\t\t});\r\n\r\n\t\t\t\telem.on('click', openDeep);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\telem.on('mouseover', function(ev){\r\n\t\t\t\tMy.root.pendingDeepOpen = ev.target;\r\n\t\t\t\tclearTimeout(My.root.pendingDeepOpen_);\r\n\r\n\t\t\t\tMy.root.pendingDeepOpen_ = setTimeout(()=> {\r\n\t\t\t\t\tif(currentDeepLevel !== void 0){\r\n\t\t\t\t\t\tMy.deepRemove();\r\n\t\t\t\t\t\tcurrentDeepLevel = void 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\topt.hover && opt.hover.apply(opt.context, opt.args);\r\n\t\t\t\t}, 200);\r\n\t\t\t});\r\n\r\n\t\t\tif(opt.callback){\r\n\t\t\t\telem.on('click', function(ev){\r\n\t\t\t\t\tif(opt.unhover !== void 0)\r\n\t\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\r\n\r\n\t\t\t\t\topt.callback.apply(opt.context, opt.args);\r\n\t\t\t\t\tMy.root.hide();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(opt.unhover){\r\n\t\t\t\telem.on('mouseout', function(ev){\r\n\t\t\t\t\topt.unhover.apply(opt.context, opt.args);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tMy.deepRemove = function(){\r\n\t\tif(currentDeepLevel === void 0)\r\n\t\t\treturn;\r\n\r\n\t\tcurrentDeepLevel.remove();\r\n\t\tcurrentDeepLevel.model.deepRemove();\r\n\t}\r\n});","## html\n<sketch-panel-bottom class=\"panel {{ opened ? 'opened' : ''}}\" @contextmenu=\"SmallNotif.add('Some panels still WIP')\">\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'down' : 'up' }}\"></i>\n\t</div>\n\t<div class=\"content\">\n\t\tThis editor still in development (≧▽≦)／<br>\n\t\tI want to make it better and easier to use.<br>\n\t\tPlease use right click to open drop down menu for the cable, node, container, or port.\n\t</div>\n</sketch-panel-bottom>\n\n## scss-global\nbody sketch-page > .panels sketch-panel-bottom {\n\tbackdrop-filter: blur(1px); // Long CSS rule = more priority\n}\n\nsketch-page > .panels sketch-panel-bottom {\n    position: absolute;\n    left: 50%;\n\twidth: calc(100% - 200px - 240px - 80px);\n\tmargin-left: -20px;\n\tbottom: 0;\n\ttransform: translate(-50%, 90px);\n\ttransition: 0.3s ease-out transform;\n\tdisplay: flex;\n\tbackground: #00000085;\n\talign-items: center;\n\t.content {\n\t\tvisibility: hidden;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\theight: 80px;\n\t\twidth: 100%;\n\t\tpadding: 10px;\n\t\tcolor: #ffffff8a;\n\t}\n\t.opener{\n\t\tcursor: pointer;\n\t\theight: 10px;\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: center;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\ti {\n\t\t\tcolor: #ffffff70;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tfont-size: 12px;\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\t&.opened {\n\t\ttransform: translate(-50%, 0);\n\t\t.content {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}\n\n## js-global\nsf.component('sketch-panel-bottom', {template: #this.path}, function(My){\n\tMy.opened = false;\n\n\tMy.init = function(){\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\n\t\tsketchPage.panels.bottom = My;\n\t}\n\n\tfunction removeBlur(){\n\t\tMy.$el.css('backdrop-filter', 'none');\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\n\t}\n\n\tMy.openPanel = function(){\n\t\tremoveBlur();\n\t\tMy.opened = true;\n\t}\n\n\tMy.closePanel = function(ev){\n\t\tremoveBlur();\n\t\tev.stopPropagation();\n\t\tMy.opened = false;\n\t}\n});","## html\r\n<sketch-panel-left class=\"panel {{ opened ? 'opened' : ''}}\">\r\n\t<div class=\"content\">\r\n\t\t<div class=\"preview\" style=\"height: {{ scaledPreviewHeight }}px\">\r\n\t\t\t<div class=\"zoom\" style=\"transform: scale({{ previewScale }})\">\r\n\t\t\t\t<sf-slot for=\"preview\"></sf-slot>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"variable-list collapsed\">\r\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this)\">Variables ({{ variableCount }})</div>\r\n\t\t\t<div class=\"button\" @click=\"createVariable\"><i class=\"fa fa-plus-square\"></i></div>\r\n\r\n\t\t\t<!-- /src/component/tree-list.sf -->\r\n\t\t\t<div class=\"tree-view\" @pointerdown=\"checkDragNode\">\r\n\t\t\t\t<div class=\"tree-item collapsed\" sf-each=\"key, val in variables\"\r\n\t\t\t\t\tstyle=\"display: {{ val.hidden ? 'none' : '' }}\">\r\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\r\n\r\n\t\t\t\t\t{{@if val.constructor === Object:\r\n\t\t\t\t\t\t@return new $TreeList({parentKey: '', key, val});\r\n\t\t\t\t\t}}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"function-list collapsed\">\r\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this)\">Functions ({{ functionCount }})</div>\r\n\t\t\t<div class=\"button\" @click=\"createFunction\"><i class=\"fa fa-plus-square\"></i></div>\r\n\r\n\t\t\t<!-- /src/component/tree-list.sf -->\r\n\t\t\t<div class=\"tree-view\" @pointerdown=\"checkDragNode\">\r\n\t\t\t\t<div class=\"tree-item collapsed\" sf-each=\"key, val in functions\"\r\n\t\t\t\t\tstyle=\"display: {{ val.hidden ? 'none' : '' }}\">\r\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\r\n\r\n\t\t\t\t\t{{@if val.constructor === Object:\r\n\t\t\t\t\t\t@return new $TreeList({parentKey: '', key, val});\r\n\t\t\t\t\t}}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"node-list\">\r\n\t\t\t<div class=\"title\" @click=\"collapseSubPanel(this)\">Nodes ({{ nodeCount }})</div>\r\n\t\t\t<div class=\"button\" @click=\"createCustomNode\"><i class=\"fa fa-plus-square\"></i></div>\r\n\r\n\t\t\t<!-- /src/component/tree-list.sf -->\r\n\t\t\t<div class=\"tree-view\" @pointerdown=\"checkDragNode\">\r\n\t\t\t\t<div class=\"tree-item collapsed\" sf-each=\"key, val in nodes\"\r\n\t\t\t\t\tstyle=\"display: {{ val.hidden ? 'none' : '' }}\">\r\n\t\t\t\t\t<div class=\"title\" @click=\"collapseTree(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\r\n\r\n\t\t\t\t\t{{@if val.constructor === Object:\r\n\t\t\t\t\t\t@return new $TreeList({parentKey: '', key, val});\r\n\t\t\t\t\t}}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\r\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'left' : 'right' }}\"></i>\r\n\t</div>\r\n</sketch-panel-left>\r\n\r\n## scss-global\r\nbody sketch-page > .panels sketch-panel-left {\r\n\tbackdrop-filter: blur(1px); // Long CSS rule = more priority\r\n}\r\n\r\nsketch-page > .panels sketch-panel-left {\r\n\tposition: absolute;\r\n\tdisplay: flex;\r\n\tleft: 0;\r\n\twidth: 200px;\r\n\theight: 100%;\r\n\ttransform: translate(-190px, 0);\r\n\ttransition: 0.3s ease-out transform;\r\n\t// position: relative;\r\n\tbackground: #00000085;\r\n\talign-items: center;\r\n\t.content {\r\n\t\talign-self: baseline;\r\n\t\tvisibility: hidden;\r\n\t\t.preview{\r\n\t\t\t// border-bottom: 1px dashed white;\r\n\t\t\tmax-width: 200px;\r\n\t\t\tmax-height: 200px;\r\n\t\t\toverflow: hidden;\r\n\t\t\t.zoom{\r\n\t    \t\ttransform-origin: left top;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.variable-list, .function-list, .node-list {\r\n\t\tcolor: white;\r\n\t\tposition: relative;\r\n\t\twidth: 190px;\r\n\t\tborder-top: 1px solid white;\r\n\t\tpadding: 5px 5px;\r\n\t\t// border-bottom: 1px dashed white;\r\n\t\t.title, .button{\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t\t.button{\r\n\t\t\tmargin-right: 10px;\r\n\t\t\tfloat: right;\r\n\t\t}\r\n\t\t.tree-view{\r\n\t\t\tposition: relative;\r\n\t\t\tmax-height: 500px;\r\n\t\t\twidth: 185px;\r\n\t\t\toverflow: auto;\r\n\t\t}\r\n\t\t&.collapsed {\r\n\t\t\t.tree-view {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.opener{\r\n\t\tcursor: pointer;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px 0 10px 10px;\r\n\t\tposition: absolute;\r\n\t\tright: 0;\r\n\t\ti {\r\n\t\t\tcolor: #ffffff70;\r\n\t\t\tposition: absolute;\r\n\t\t\tright: 0;\r\n\t\t\tfont-size: 12px;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\t&.opened {\r\n\t\ttransform: translate(0px, 0);\r\n\t\t.content {\r\n\t\t\tvisibility: visible;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.component('sketch-panel-left', {template: #this.path}, function(My){\r\n\tlet sketch = My.sketch = SketchList[views.data.page - 1];\r\n\r\n\tMy.opened = false;\r\n\tMy.preview = null;\r\n\tMy.previewWidth = 200;\r\n\tMy.previewScale = 1;\r\n\tMy.scaledPreviewHeight = 1;\r\n\r\n\tMy.variables = sketch.variables;\r\n\tMy.functions = sketch.functions;\r\n\tMy.nodes = Blackprint.nodes;\r\n\r\n\tMy.variableCount = 0;\r\n\tMy.functionCount = 0;\r\n\tMy.nodeCount = 0;\r\n\r\n\tfunction deepCount(obj){\r\n\t\tlet len = 0;\r\n\t\tif(obj.hidden) return len;\r\n\r\n\t\tfor(let key in obj){\r\n\t\t\tlet temp = obj[key];\r\n\t\t\tif(temp == null) continue;\r\n\r\n\t\t\tif(temp instanceof Function)\r\n\t\t\t\tlen++;\r\n\t\t\telse len += deepCount(temp);\r\n\t\t}\r\n\r\n\t\tobj.refresh?.();\r\n\t\treturn len;\r\n\t}\r\n\t\r\n\tlet pendingRefresh;\r\n\tconst refreshCounter = () => {\r\n\t\tclearTimeout(pendingRefresh);\r\n\r\n\t\tpendingRefresh = setTimeout(() => {\r\n\t\t\tMy.nodeCount = deepCount(Blackprint.availableNode);\r\n\t\t}, 500);\r\n\t}\r\n\t\r\n\tBlackprint.on('moduleAdded', refreshCounter);\r\n\tBlackprint.on('moduleDelete', refreshCounter);\r\n\tBlackprint.on('moduleUpdate', refreshCounter);\r\n\tBlackprint.on('bp_editorNodeAvailability', refreshCounter);\r\n\t$(refreshCounter);\r\n\r\n\tMy.init = function(){\r\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\r\n\t\tsketchPage.panels.left = My;\r\n\t}\r\n\r\n\tlet recheckPreviewSize;\r\n\tMy.setPreview = function(el){\r\n\t\tif(el == null || My.preview !== el){\r\n\t\t\trecheckPreviewSize?.disconnect();\r\n\t\t\trecheckPreviewSize = null;\r\n\t\t}\r\n\r\n\t\tMy.preview = el;\r\n\t\tMy.previewScale = 1;\r\n\t\tMy.scaledPreviewHeight = 1;\r\n\r\n\t\tif(recheckPreviewSize != null || el == null)\r\n\t\t\treturn;\r\n\r\n\t\tlet checkTime = 0;\r\n\t\tlet checker = async function(){\r\n\t\t\tawait $.afterRepaint();\r\n\r\n\t\t\tlet width = el.clientWidth;\r\n\t\t\tlet height = el.clientHeight;\r\n\t\t\tlet scale = My.previewWidth / width;\r\n\r\n\t\t\tcheckTime = Math.round(Date.now() / 100);\r\n\r\n\t\t\tMy.previewScale = scale;\r\n\t\t\tMy.scaledPreviewHeight = height * scale;\r\n\t\t}\r\n\r\n\t\trecheckPreviewSize = new ResizeObserver(function(items){\r\n\t\t\tif(checkTime === Math.round(Date.now() / 100)) return;\r\n\t\t\tsetTimeout(checker, 200);\r\n\t\t});\r\n\t\trecheckPreviewSize.observe(el);\r\n\r\n\t\tsetTimeout(checker, 100);\r\n\t}\r\n\r\n\tfunction removeBlur(){\r\n\t\tMy.$el.css('backdrop-filter', 'none');\r\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\r\n\t}\r\n\r\n\tMy.openPanel = function(){\r\n\t\tremoveBlur();\r\n\t\tMy.opened = true;\r\n\t}\r\n\r\n\tMy.closePanel = function(ev){\r\n\t\tremoveBlur();\r\n\t\tev.stopPropagation();\r\n\t\tMy.opened = false;\r\n\t}\r\n\r\n\tMy.collapseTree = function(el){\r\n\t\tel = el.nextElementSibling;\r\n\t\tif(el == null) return;\r\n\r\n\t\tlet hidden = el.model.hidden = !el.model.hidden;\r\n\r\n\t\tif(hidden)\r\n\t\t\t$(el.parentNode).addClass(\"collapsed\");\r\n\t\telse $(el.parentNode).removeClass(\"collapsed\");\r\n\t}\r\n\r\n\tMy.collapseSubPanel = el => {\r\n\t\t$(el).parent().toggleClass(\"collapsed\");\r\n\t}\r\n\r\n\tMy.checkDragNode = ev => {\r\n\t\tlet focus = ev.target;\r\n\t\tif(focus.nextElementSibling != null) return;\r\n\r\n\t\tlet key = focus.parentNode.getAttribute('tree-item-key');\r\n\t\tif(key == null) return;\r\n\r\n\t\tlet parent = $(focus).parent(\".tree-item.has-child > tree-list\")[0];\r\n\t\tif(parent == null) return;\r\n\r\n\t\tToolTip.set(\"Create node\");\r\n\t\t$(sf.Window).once('pointerup', evUp => {\r\n\t\t\tToolTip.set();\r\n\r\n\t\t\tif(evUp.target.closest('sketch-page') == null) return;\r\n\t\t\tif(evUp.target.closest('sf-m.cables') != null){\r\n\t\t\t\tlet namespace = parent.model.parentKey + '/' + key;\r\n\t\t\t\t$.afterRepaint().then(function(){\r\n\t\t\t\t\tlet offset = evUp.target.getBoundingClientRect();\r\n\r\n\t\t\t\t\tsketch.createNode(namespace, {\r\n\t\t\t\t\t\tx: evUp.clientX - offset.x,\r\n\t\t\t\t\t\ty: evUp.clientY - offset.y\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tMy.createVariable = ev => {\r\n\t\tSmallNotif.add(\"Still under development\");\r\n\t}\r\n\r\n\tMy.createFunction = ev => {\r\n\t\tSmallNotif.add(\"Still under development\");\r\n\t}\r\n\r\n\tMy.createCustomNode = ev => {\r\n\t\tModal.goto('/custom-node-editor');\r\n\t}\r\n});","## html\r\n<sketch-panel-right class=\"panel {{ opened ? 'opened' : ''}} {{ nodeSelected == null ? 'hide' : '' }}\">\r\n\t<div class=\"content\">\r\n\t\t<div class=\"panel-title\">Properties</div>\r\n\t\t<div class=\"bpsprf-default\">\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\">Title:</span> <span> {{ data.title }}</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\" title=\"Registered node path\">Namespace:</span> <span style=\"font-size:12px\"> {{ data.namespace }}</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\" title=\"Add an ID so you can easily reference to this node from scripts\">Node ID:</span>\r\n\t\t\t\t<input sf-bind=\"data.id\" placeholder=\"...\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<span class=\"name\">Comment:</span>\r\n\t\t\t\t<textarea sf-bind=\"data.comment\" placeholder=\"Add node comment here...\"></textarea>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"bpsprf-iface\">\r\n\t\t\t<sf-slot for=\"ifaceField\"></sf-slot>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"opener\" @click=\"opened ? closePanel(event) : openPanel()\">\r\n\t\t<i class=\"fas fa-chevron-{{ opened ? 'right' : 'left' }}\"></i>\r\n\t</div>\r\n</sketch-panel-right>\r\n\r\n## scss-global\r\nbody sketch-page > .panels sketch-panel-right {\r\n\tbackdrop-filter: blur(8px); // Long CSS rule = more priority\r\n}\r\n\r\nsketch-page > .panels sketch-panel-right {\r\n\tposition: absolute;\r\n\t// visibility: hidden;\r\n\tbottom: 0;\r\n\tright: 0;\r\n\twidth: 240px;\r\n\theight: calc(100% - 200px);\r\n\ttransform: translate(230px, 0);\r\n\ttransition: 0.3s ease-out transform;\r\n\tdisplay: flex;\r\n\t// position: relative;\r\n\tbackground: #00000085;\r\n\talign-items: center;\r\n\t.content {\r\n\t\tvisibility: hidden;\r\n\t\tword-break: break-word;\r\n\t\twidth: 100%;\r\n\t\ttop: 0;\r\n\t\tposition: absolute;\r\n\t\tpadding: 6px 0;\r\n\t\tcolor: #ffffff8a;\r\n\r\n\t\t.panel-title{\r\n\t\t\tcolor: white;\r\n\t\t\tfont-size: 18px;\r\n\t\t\tfont-weight: bold;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t}\r\n\t.opener{\r\n\t\tcursor: pointer;\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 10px 10px 10px 0;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ti {\r\n\t\t\tcolor: #ffffff70;\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\tfont-size: 12px;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\t&.hide{\r\n\t\tdisplay: none;\r\n\t}\r\n\t&.opened {\r\n\t\ttransform: translate(0px, 0);\r\n\t\t.content {\r\n\t\t\tvisibility: visible;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// bpsprf = Blackprint Sketch Panel Right Field\r\n.bpsprf-default, .bpsprf-iface {\r\n\t// border-bottom: 1px dashed #ffffff2e;\r\n\r\n\t.field {\r\n\t\tborder-top: 1px dashed #ffffff2e;\r\n\t\tmargin-top: 4px;\r\n\t\tpadding-top: 2px;\r\n\t\tpadding-left: 5px;\r\n\t}\r\n\t.field > .name {\r\n\t\tcolor: white;\r\n\t}\r\n\tinput, textarea {\r\n\t\tbackground: rgba(0, 0, 0, 0.63);\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t\tpadding: 4px;\r\n\t\twidth: calc(100% - 12px);\r\n\t\tborder-radius: 10px;\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.component('sketch-panel-right', {template: #this.path}, function(My){\r\n\tMy.opened = false;\r\n\tMy.nodeSelected = null;\r\n\tMy.ifaceField = null;\r\n\r\n\tMy.data = {title:'', namespace:'',\r\n\t\tid:'',\r\n\t\tv2m$id(val){ My.nodeSelected.id = val },\r\n\t\tcomment:'',\r\n\t\tv2m$comment(val){ My.nodeSelected.comment = val },\r\n\t};\r\n\r\n\tMy.init = function(){\r\n\t\tlet sketchPage = My.$el.parent('sketch-page')[0].model;\r\n\t\tsketchPage.panels.right = My;\r\n\t}\r\n\r\n\tfunction removeBlur(){\r\n\t\tMy.$el.css('backdrop-filter', 'none');\r\n\t\tsetTimeout(()=> My.$el.css('backdrop-filter', ''), 300);\r\n\t}\r\n\r\n\tMy.hide = function(){\r\n\t\tMy.nodeSelected = null;\r\n\t}\r\n\r\n\tlet _firstTimeOpen = true;\r\n\tMy.selectNode = function(iface){\r\n\t\tMy.nodeSelected = iface;\r\n\t\tMy.data.title = iface.title;\r\n\t\tMy.data.namespace = iface.namespace;\r\n\t\tMy.data.id = iface.id || '';\r\n\t\tMy.data.comment = iface.comment || '';\r\n\r\n\t\tif(iface._bpeditorpanel == null){\r\n\t\t\t// Blackprint Panel Component\r\n\t\t\tlet bppc = 'bppc-' + iface.namespace.toLowerCase().split('/').join('-');\r\n\t\t\tlet bppcList = Blackprint.space.component(bppc);\r\n\t\t\t\r\n\t\t\tif(bppcList.new != null){\r\n\t\t\t\tlet element = bppcList.new.stem(iface);\r\n\t\t\t\tiface._bpeditorpanel = element;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMy.ifaceField = iface._bpeditorpanel || null;\r\n\r\n\t\tif(_firstTimeOpen){\r\n\t\t\tsetTimeout(()=>{\r\n\t\t\t\t_firstTimeOpen = false;\r\n\t\t\t\tMy.opened = true;\r\n\t\t\t}, 500);\r\n\t\t}\r\n\t}\r\n\r\n\tMy.openPanel = function(){\r\n\t\tremoveBlur();\r\n\t\tMy.opened = true;\r\n\t}\r\n\r\n\tMy.closePanel = function(ev){\r\n\t\tremoveBlur();\r\n\t\tev.stopPropagation();\r\n\t\tMy.opened = false;\r\n\t}\r\n});","Small Notification\r\n\r\nYou can call this from anywhere\r\n```js\r\nSmallNotif.add('message', 'color', /* delay in ms*/);\r\n```\r\n\r\n## comment, this will automatically appended to body\r\n## html\r\n<!-- /src/component/SmallNotif.sf -->\r\n<sf-m name=\"small.notif\">\r\n  <div class=\"notify-container right-top\">\r\n    <div sf-each=\"x in list\" class=\"notify-base notify-{{ x.color }}\">\r\n      <span>{{ x.message }}</span>\r\n      <button @click=\"close(x)\" class=\"close\">×</button>\r\n    </div>\r\n  </div>\r\n</sf-m>\r\n\r\n## js-global\r\nvar SmallNotif = sf.model('small.notif', function(My){\r\n  const $ = sf.$;\r\n\r\n  My.list = [];\r\n  My.on$list = {\r\n    create(el){\r\n      $(el).animateKey('fadeInUp');\r\n    },\r\n    remove(el, remove){\r\n      $(el).animateKey('fadeOutUp', remove);\r\n      setTimeout(remove, 500); // To make sure it's removed\r\n      return true;\r\n    }\r\n  };\r\n\r\n  $(function(){\r\n    if($('sf-m[name=\"small.notif\"]').length !== 0) return;\r\n    $('body').append($(window.templates[#this.path]));\r\n  });\r\n\r\n  My.add = function(message, color, delay){\r\n    var item = {message, color:color || 'yellow'};\r\n    My.list.push(item);\r\n\r\n    if(delay !== false){\r\n      item.timer = setTimeout(()=> {\r\n        My.list.splice(My.list.indexOf(item), 1);\r\n      }, delay || (1000 + 100 * message.length));\r\n    }\r\n\r\n    return item;\r\n  }\r\n\r\n  My.close = function(item){\r\n    My.list.splice(My.list.indexOf(item), 1);\r\n  }\r\n});\r\n\r\n## scss-global\r\n.notify-base{\r\n  font-weight: bold;\r\n  padding: 6px 18px 6px 14px;\r\n  color: #222;\r\n  // text-shadow: 0 0 rgba(0, 0, 0, 0.5);\r\n  background-color: rgba(255, 255, 255, 0.97);\r\n  border: 1px solid;\r\n  border-color: rgba(255, 255, 255, 0.97);\r\n  box-shadow: 0 0 7px 0px rgba(255, 255, 255, 0.97);\r\n  border-radius: 4px;\r\n  min-width: 51%;\r\n  white-space: nowrap;\r\n  position: relative;\r\n  max-width: 100%;\r\n  margin: 10px 10px 0 10px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  span{\r\n    white-space: pre-line;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  button {\r\n    outline: none;\r\n    &.close {\r\n        appearance: none;\r\n        padding: 0;\r\n        cursor: pointer;\r\n        background: 0 0;\r\n        border: 0;\r\n        width: inherit;\r\n    }\r\n  }\r\n\r\n  .close {\r\n    float: right;\r\n    font-size: 23px;\r\n    font-weight: 700;\r\n    line-height: 0.8;\r\n    right: 6px;\r\n    position: absolute;\r\n    color: #000;\r\n    text-shadow: 0 1px 0 #fff;\r\n    opacity: .2;\r\n  }\r\n}\r\n\r\n.notify-container{\r\n  max-width: 95%;\r\n  position: fixed;\r\n  z-index: 9999;\r\n  display: grid;\r\n\r\n  &.right-top{\r\n    right: 10px;\r\n    top: 0;\r\n\r\n    .notify-base{\r\n      float: right;\r\n      margin: 10px 0 0 0;\r\n    }\r\n  }\r\n  &.left-top{\r\n    left: 0;\r\n    top: 0;\r\n\r\n    .notify-base{\r\n      float: left;\r\n      margin: 10px 0 0 10px;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin notify-color($name, $txt, $bg, $border){\r\n  .notify-#{$name}{\r\n    color: #{$txt};\r\n    background-color: #{$bg};\r\n    border-color: #{$border};\r\n    box-shadow: 0 0 5px 0px #{$border};\r\n  }\r\n}\r\n\r\n@include notify-color('red', #B94A48, rgba(242, 222, 222, 0.97), #EED3D7);\r\n@include notify-color('yellow', #C09853, rgba(252, 248, 227, 0.97), #FBEED5);\r\n@include notify-color('blue', #3A87AD, rgba(217, 237, 247, 0.97), #BCE8F1);\r\n@include notify-color('green', #468847, rgba(223, 240, 216, 0.97), #D6E9C6);","## html\r\n<tree-list class=\"tree-list-menu {{ hidden ? 'hidden' : '' }}\">\r\n\t<div class=\"tree-item\" sf-each=\"key, val in deep\" tree-item-key=\"{{ key }}\">\r\n\t\t<div class=\"title\" @click=\"collapse(this)\"><i class=\"fa tree-icon\"></i> {{ key }}</div>\r\n\t\t{{@if val.constructor === Object:\r\n\t\t\t@return new $TreeList({parentKey: parentKey, key, val});\r\n\t\t}}\r\n\t</div>\r\n</tree-list>\r\n\r\n## scss-global\r\n.tree-list-menu.hidden {\r\n\tdisplay: none;\r\n}\r\n\r\n.tree-item{\r\n\tpadding-left: 20px;\r\n\t&.has-child {\r\n\t\tpadding-left: 10px;\r\n\t}\r\n\t.title {\r\n\t\tuser-select: none;\r\n\t\tcursor: pointer;\r\n\t}\r\n}\r\n\r\n.tree-item.has-child > .title .tree-icon:before {\r\n\tcolor: gray;\r\n\tcontent: \"\\f0d7\";\r\n\tpadding-right: 5px;\r\n}\r\n\r\n.tree-item.has-child.collapsed > .title .tree-icon:before {\r\n\tcontent: \"\\f0da\";\r\n}\r\n\r\n## js-global\r\nsf.component('tree-list', {template: #this.path}, function(My, include, $item={}){\r\n\tMy.parentKey = $item.parentKey ?? '';\r\n\tMy.parentKey += $item.key && My.parentKey !== '' ? `/${$item.key}` : ($item.key ?? '');\r\n\r\n\tMy.deep = $item.val ?? {};\r\n\tMy.hidden = true;\r\n\r\n\tMy.init = function(){\r\n\t\tMy.$el.parent().addClass(\"has-child\").addClass(\"collapsed\");\r\n\t}\r\n\r\n\tMy.collapse = function(el){\r\n\t\tel = el.nextElementSibling;\r\n\t\tif(el == null) return;\r\n\r\n\t\tlet hidden = el.model.hidden = !el.model.hidden;\r\n\r\n\t\tif(hidden)\r\n\t\t\t$(el.parentNode).addClass(\"collapsed\");\r\n\t\telse $(el.parentNode).removeClass(\"collapsed\");\r\n\t}\r\n});","## html.append-to-body\r\n<!-- /src/model/loading.sf -->\r\n<sf-m name=\"loading\" class=\"{{ showed && 'show' }}\">\r\n\t<span class=\"icon\"><i class=\"fa fa-fan fa-spin\"></i></span>\r\n\t<span class=\"desc\">{{ desc }}</span>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"loading\"]{\r\n\tdisplay: none;\r\n\tbackground: #000000ba;\r\n\tpointer-events: none;\r\n\tpadding: 7px 15px;\r\n\tborder-radius: 20px;\r\n\tbox-shadow: 0 0 11px white;\r\n\tposition: fixed;\r\n\ttop: 60px;\r\n\tcolor: white;\r\n\tright: 10px;\r\n\tz-index: 100;\r\n\r\n\t&.show{\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\t.icon{\r\n\t\tpadding-right: 5px;\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar Loading = sf.model('loading', function(My){\r\n\tMy.showed = false;\r\n\tMy.desc = '';\r\n\r\n\tMy.set = function(text){\r\n\t\tif(text && My.showed === false)\r\n\t\t\tMy.showed = true;\r\n\t\telse My.showed = false;\r\n\r\n\t\tMy.desc = text;\r\n\t}\r\n});","## html.append-to-body\r\n<!-- /src/model/modal.sf -->\r\n<sf-m name=\"modal\" class=\"modal {{ showed && 'show' }}\">\r\n  <div class=\"modal-dialog\">\r\n    <vw-modal></vw-modal>\r\n  </div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m.modal{\r\n\tgrid-template-columns: auto minmax(0, 1fr) auto;\r\n\tdisplay: none;\r\n\tposition: fixed;\r\n\tz-index: 1001;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tbox-sizing: border-box;\r\n\tgrid-template-areas:\r\n\t    \"top-start top top-end\"\r\n\t    \"center-start center center-end\"\r\n\t    \"bottom-start bottom-center bottom-end\"\r\n\t    \"gap gap gap\";\r\n\tgrid-template-rows: auto auto auto .625em;\r\n\theight: 100%;\r\n\tpadding: .625em .625em 0;\r\n\toverflow-x: hidden;\r\n\tbackground: #00000000;\r\n\ttransition: background 0.3 linear;\r\n\r\n\t&.show{\r\n\t\tdisplay: grid;\r\n\t\tbackground: #00000060;\r\n\t\t.modal-dialog{\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\r\n\t.modal-dialog{\r\n\t\tdisplay: grid;\r\n\t\ttransition: opacity;\r\n\t\topacity: 0;\r\n\t\tgrid-column: 2;\r\n\t\tgrid-row: 2;\r\n\t\talign-self: center;\r\n\t\tjustify-self: center;\r\n\t\tposition: relative;\r\n\t\tbox-sizing: border-box;\r\n\t\tmax-width: 100%;\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar Modal = sf.model('modal', function(My){\r\n\tMy.showed = false;\r\n\r\n\tMy.init = My.hotReloaded = function(){\r\n\t\tMy.views = sf.Views.listSelector['vw-modal'];\r\n\t}\r\n\r\n\tMy.hide = function(){\r\n\t\tMy.showed = false;\r\n\t\tMy.$el('.modal-dialog').off('pointerdown', My.hide, {outside: true});\r\n\t}\r\n\r\n\tMy.goto = function(path){\r\n\t\tMy.views.goto(path);\r\n\t\tMy.showed = true;\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tMy.$el('.modal-dialog').on('pointerdown', My.hide, {outside: true});\r\n\t\t}, 400);\r\n\t}\r\n});","## html.append-to-body\r\n<!-- /src/model/tooltip.sf -->\r\n<sf-m name=\"tooltip\" class=\"{{ showed && 'show' }}\" style=\"transform: translate({{ x }}px, {{ y }}px);\">\r\n\t<div class=\"desc\">{{ desc }}</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"tooltip\"]{\r\n\tvisibility: hidden;\r\n\tbackground: #000000da;\r\n\tpointer-events: none;\r\n\tpadding: 2px 8px;\r\n\tborder-radius: 5px;\r\n\tbox-shadow: 0 0 2px white;\r\n\tposition: fixed;\r\n\ttop: 15px;\r\n\tleft: 10px;\r\n\tcolor: white;\r\n\topacity: 0;\r\n\tz-index: 1;\r\n\ttransition: 0.3s ease-in opacity;\r\n\r\n\t.desc{\r\n\t    white-space: pre-wrap;\r\n\t    // font-size: 14px;\r\n\t}\r\n\r\n\t&.show{\r\n\t\tvisibility: visible;\r\n\t\topacity: 1;\r\n\t}\r\n\r\n\t.icon{\r\n\t\tpadding-right: 5px;\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar ToolTip = sf.model('tooltip', function(My){\r\n\tMy.showed = false;\r\n\tMy.desc = '';\r\n\tMy.x = 0;\r\n\tMy.y = 0;\r\n\r\n\tMy._listener = function(ev){\r\n\t\tMy.x = ev.clientX;\r\n\t\tMy.y = ev.clientY;\r\n\t}\r\n\r\n\tMy.set = function(text, ev){\r\n\t\tif(ev != null){\r\n\t\t\tMy.x = ev.x;\r\n\t\t\tMy.y = ev.y;\r\n\t\t}\r\n\r\n\t\tif(text && My.showed === false){\r\n\t\t\tMy.showed = true;\r\n\t\t\t$(window).on('pointermove', My._listener);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tMy.showed = false;\r\n\t\t\t$(window).off('pointermove', My._listener);\r\n\t\t}\r\n\r\n\t\tMy.desc = text;\r\n\t}\r\n});","## html\r\n<!-- Filling the default page if haven't being routed -->\r\n<sf-m name=\"welcome-text\" class=\"welcome-text\">\r\n\t<h1>Welcome to Blackprint Editor!</h1>\r\n\t<div class=\"description\">This editor haven't being designed for mobile screen.</div>\r\n\t<div class=\"content\">\r\n\t\t<div class=\"item\" @click=\"toWorkspace\">\r\n\t\t\t<i class=\"fas fa-torii-gate\"></i> Go to sketch page\r\n\t\t</div>\r\n\t\t<div class=\"item\" @click=\"openExamples\">\r\n\t\t\t<i class='fa fa-map-signs'></i> <span>Open examples</span>\r\n\t\t</div>\r\n\t\t<div class=\"item\" style=\"cursor: default\">\r\n\t\t\t<i class='fa fa-book-open'></i> <span style=\"text-decoration: line-through\">Learn from editor</span>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"available-engine\">\r\n\t\t<div class=\"title\">Blackprint Engine also available for:</div>\r\n\t\t<div class=\"list\">\r\n\t\t\t<!-- python, csharp, java/kotlin, cplusplus, go, rust, docker -->\r\n\t\t\t<!-- css3, html5 -->\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\r\n\t\t\t\t<img src=\"/assets/img/icon/denojs.svg\">\r\n\t\t\t\t<div class=\"name\">Deno</div>\r\n\t\t\t</a>\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-js\" target=\"_blank\">\r\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/nodejs/nodejs-plain.svg\">\r\n\t\t\t\t<div class=\"name\">Node.js</div>\r\n\t\t\t</a>\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-php\" target=\"_blank\">\r\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@v2.14.0/icons/php/php-plain.svg\">\r\n\t\t\t\t<div class=\"name\">PHP</div>\r\n\t\t\t</a>\r\n\t\t\t<a class=\"item\" href=\"https://github.com/Blackprint/engine-go\" target=\"_blank\">\r\n\t\t\t\t<img src=\"https://cdn.jsdelivr.net/gh/devicons/devicon@2.14.0/icons/go/go-original-wordmark.svg\">\r\n\t\t\t\t<div class=\"name\">Golang</div>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n<div class=\"welcome-left\">\r\n\t<a target=\"_blank\" href=\"https://ko-fi.com/stefansarya\">\r\n\t\t<i class=\"fas fa-mug-hot\"></i> Ko-fi\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint\">\r\n\t\t<i class=\"fab fa-github\"></i> GitHub\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://stefansarya.gitbook.io/blackprint\">\r\n\t\t<i class=\"fa fa-book-open\"></i> Documentation\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://github.com/Blackprint/Blackprint/discussions\">\r\n\t\t<i class=\"fa fa-comments\"></i> Discussions\r\n\t</a>\r\n</div>\r\n\r\n<div class=\"welcome-right\">\r\n\t<a target=\"_blank\" style=\"cursor: pointer;\" onclick=\"Modal.goto('/npm-packages')\">\r\n\t\tPackage List <i class=\"fas fa-boxes\"></i>\r\n\t</a>\r\n\t<a target=\"_blank\" href=\"https://www.npmjs.com/search?q=keywords:blackprint\">\r\n\t\tnpm.js <i class=\"fas fa-box\"></i>\r\n\t</a>\r\n</div>\r\n\r\n## scss-global\r\n.welcome-text{\r\n\tcolor: white;\r\n\ttext-align: center;\r\n\tpadding: 0 20px;\r\n\r\n\t> .description{\r\n\t\twhite-space: pre-line;\r\n\t}\r\n\r\n\t> .content{\r\n\t\tmax-width: 750px;\r\n\t\twidth: 90vw;\r\n\t\tdisplay: inline-flex;\r\n\r\n\t\t.item{\r\n\t\t\tpadding: 10px;\r\n\t\t\twidth: 200px;\r\n\t\t\tmargin: 10px 14px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 10px;\r\n\t\t\tbox-shadow: 0px 0px 3px white;\r\n\t\t\tborder: 1px solid #c5c5c5;\r\n\t\t\tbackground: #0000008a;\r\n\t\t}\r\n\t}\r\n\r\n\t.available-engine{\r\n\t\tbottom: 0;\r\n\t\twidth: 100vw;\r\n\t\tleft: 0;\r\n\t\tposition: absolute;\r\n\t\t.title{\r\n\r\n\t\t}\r\n\t\t.list .item{\r\n\t\t\twidth: 50px;\r\n\t\t\timg{\r\n\t\t\t\tmax-width: 50px;\r\n\t\t\t\tfilter: brightness(0) invert(1);\r\n\t\t\t}\r\n\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tcolor: white;\r\n\t\t\tmargin: 0 5px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.welcome-left{\r\n\tdisplay: grid;\r\n\tposition: absolute;\r\n\tcolor: #a0a0a0;\r\n\tbottom: 0;\r\n\tleft: 10px;\r\n\ti{\r\n\t\tmargin-right: 5px;\r\n\t}\r\n}\r\n\r\n.welcome-right{\r\n\tdisplay: grid;\r\n\tposition: absolute;\r\n\tcolor: #a0a0a0;\r\n\tbottom: 0;\r\n\tright: 10px;\r\n\ttext-align: right;\r\n\ti{\r\n\t\tmargin-left: 5px;\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('welcome-text', function(My){\r\n\tMy.toWorkspace = function(){\r\n\t\tif(SketchList.length === 0){\r\n\t\t\tMy.openExamples();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tviews.goto('/sketch/1');\r\n\t}\r\n\r\n\tMy.openExamples = function(){\r\n\t\tModal.goto('/example-list');\r\n\t}\r\n});","## html\r\n<sf-m name=\"sketch-pages\">\r\n\t<!-- /src/routes/+vw-ground/sketch.sf -->\r\n\t<vw-page></vw-page>\r\n\r\n\t<div class=\"mini-blackprint disable-effect {{ miniViewer.topRightHidden && 'hidden' }}\">\r\n\t\t<!-- Will be replaced with element returned by Blackprint.cloneContainer(true) -->\r\n\t\t<sf-slot for=\"miniViewer.topRight\"></sf-slot>\r\n\t</div>\r\n</sf-m>\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tshowed(){\r\n\t\t\t// Show sketch options\r\n\t\t\tsf.model('header').showOptions = true;\r\n\t\t},\r\n\t\thidden(){\r\n\t\t\tsf.model('header').showOptions = false;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tshowed: Sketch container have been loaded,\r\n\t\tcoming: The cable would have wrong position because the DOM still hidden,\r\n\t\tleaving: Maybe we can uninitialize something,\r\n\t\thidden: Animate something maybe\r\n\t\t*/\r\n\t}\r\n}\r\n\r\n## scss-global\r\nvw-page{\r\n\tposition: absolute;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\r\n\t&.page-current{\r\n\t\ttop: 0;\r\n\t}\r\n}\r\n.mini-blackprint{\r\n\twidth: 240px;\r\n\theight: 190px;\r\n\tposition: absolute;\r\n\ttop: 5px;\r\n\tright: 0;\r\n\toverflow: hidden;\r\n\tbox-shadow: 0 0 6px #ffffff6b;\r\n\tbackground: #ffffff40;\r\n\tborder-radius: 10px;\r\n\tpointer-events: none;\r\n\r\n\t&.hidden{\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('sketch-pages', function(My){\r\n\tMy.miniViewer = {\r\n\t\ttopRight: null,\r\n\t\ttopRightHidden: true,\r\n\t\ton$topRight(now){\r\n\t\t\tif(now === null)\r\n\t\t\t\treturn My.miniViewer.topRightHidden = true;\r\n\r\n\t\t\tMy.miniViewer.topRightHidden = false;\r\n\t\t\t// now => <sf-space>\r\n\t\t\t// $(now)\r\n\t\t}\r\n\t};\r\n});","## html\r\n<sf-m name=\"custom-node-editor\">\r\n\t<div class=\"editor\" @keydown.ctrl.Enter.prevent=\"run\">\r\n\t\t<div class=\"bp-loading-status\" style=\"color: white; padding: 20px\">Loading Monaco Editor...</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"run\" title=\"Execute (Ctrl + Enter)\"><i class=\"fa fa-play\"></i></div>\r\n\t\t<!-- <div class=\"item\" @click=\"Modal.hide()\" title=\"Minimize\"><i class=\"fa fa-window-minimize\"></i></div> -->\r\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"custom-node-editor\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\r\n\t.editor{\r\n\t\twidth: 80vw;\r\n\t\tmax-width: 900px;\r\n\t\theight: 90vh;\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: 0px;\r\n\t\ttop: 0;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tshowed(){\r\n\t\t\tlet model = sf.model('custom-node-editor');\r\n\t\t\tmodel.recreate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('custom-node-editor', function(My){\r\n\tMy.content = '// After execute this, you can test it by connecting\\n// Input -> Slider and Logger to this node\\n\\nlet EventSlot = {slot: \\'my-unique\\'}; // To avoid duplicate listener\\n\\nBlackprint.registerNode(\\'Test/Hello\\',\\nclass extends Blackprint.Node {\\n\\tstatic input = { // Port\\n\\t\\t\\'Give Input\\': Number\\n\\t}\\n\\t\\n\\tstatic output = { // Port\\n\\t\\tOut: Number\\n\\t}\\n\\n\\tconstructor(instance){\\n\\t\\tsuper(instance);\\n\\n\\t\\t// You can remove this if you want to use default node interface/HTML\\n\\t\\tlet iface = this.setInterface(\\'BPIC/Test/Hello\\');\\n\\n\\t\\tiface.title = \\'Add +5\\';\\n\\t\\tiface.description = \\'Add 5 to any number\\';\\n\\t}\\n});\\n\\n// You can remove this if you\\'re using default node interface/HTML\\nBlackprint.Sketch.registerInterface(\\'BPIC/Test/Hello\\', {\\n\\thtml: `\\n<div class=\"node {{ type || \\'general\\' }}\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\\n\\n  <div class=\"content\">\\n\\t<div class=\"left-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\\n\\t</div>\\n\\t\\n\\t<div style=\"display: inline-block; color: yellow\">\\n\\t\\t{{ log }}\\n\\t</div>\\n    \\n\\t<div class=\"right-port\">\\n\\t  <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\\n\\t</div>\\n  </div>\\n</div>`\\n}, class extends Blackprint.Interface {\\n\\tconstructor(node){\\n\\t\\tsuper(node);\\n\\n\\t\\tthis.log = 0;\\n\\t}\\n\\n\\t// HTML/Interface Init\\n\\tinit(el){\\n\\t\\tlet iface = this;\\n\\t\\t\\n\\t\\tconst {\\n\\t\\t\\tIInput, IOutput, // Port interface (event, utils, etc)\\n\\t\\t\\tInput, Output, // Node Port (get/set value)\\n\\t\\t} = iface.ref;\\n\\n\\t\\tIInput[\\'Give Input\\'].on(\\'value\\', EventSlot, function({ cable }){\\n\\t\\t\\tlet val = cable.value;\\n\\n\\t\\t\\tiface.log = val + 5; // Give Input -> {{ log }}\\n\\t\\t\\tOutput.Out = val + 5; // Give Input -> Out\\n\\t\\t});\\n\\t}\\n\\n\\t// Run init again to hot reload this node\\n\\thotReloaded(){\\n\\t\\tthis.init();\\n\\t}\\n\\n\\t// When this node UI was cloned somewhere\\n\\t// You can reinit some HTML element if needed\\n\\tinitClone(el){}\\n});';\r\n\r\n\tMy.init = async function(){\r\n\t\tif(window.monaco === void 0){\r\n\t\t\tawait sf.loader.js(['https://cdn.jsdelivr.net/npm/@monaco-editor/loader@1.2.0/lib/umd/monaco-loader.min.js']);\r\n\t\t\tawait monaco_loader.init();\r\n\t\t}\r\n\r\n\t\tMy.container = My.$el('.editor');\r\n\t\tMy.recreate();\r\n\t}\r\n\r\n\tMy.recreate = function(){\r\n\t\tif(window.monaco === void 0) return;\r\n\t\tif(My.editor) return;\r\n\r\n\t\tMy.editor && My.editor.dispose();\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tlet statusEl = My.container.find('.bp-loading-status');\r\n\r\n\t\t\tMy.editor = monaco.editor.create(My.container[0], {\r\n\t\t\t\tvalue: My.content,\r\n\t\t\t\tlanguage: 'javascript',\r\n\t\t\t\ttheme: 'vs-dark',\r\n\t\t\t\tminimap: { enabled: false }\r\n\t\t\t});\r\n\r\n\t\t\tstatusEl.css('display', 'none');\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tMy.run = function(){\r\n\t\teval(My.editor.getValue());\r\n\r\n\t\tBlackprint.emit('bp_editorNodeAvailability');\r\n\t}\r\n\r\n\tMy.setValue = function(code){\r\n\t\tif(My.editor != null)\r\n\t\t\tMy.editor.setValue(code);\r\n\r\n\t\tMy.content = code;\r\n\t}\r\n\r\n\tMy.close = function(){\r\n\t\tModal.hide();\r\n\r\n\t\t// My.editor.dispose();\r\n\t\t// My.editor = null;\r\n\t\t// modal.goto('/');\r\n\r\n\t\t// My.container.find('.bp-loading-status').css('display', '');\r\n\t}\r\n});","## html\r\n<sf-m name=\"modal-dev-mode\">\r\n\t<div class=\"description\">Please set the Blackprint module server URL</div>\r\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default server)</div>\r\n\t<div class=\"text-input\">\r\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\r\n\t</div>\r\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"modal-dev-mode\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t}\r\n\t.note{\r\n\t\ttext-align: center;\r\n\t\tfont-size: 12px;\r\n\t\tpadding: 0;\r\n\t\tcolor: gray;\r\n\t\tmargin-top: -10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.text-input{\r\n\t\tpadding: 10px;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\r\n\t\tinput{\r\n\t\t\twidth: 100%;\r\n\t\t\tborder: 1px solid black;\r\n\t\t\tbackground: #161616;\r\n\t\t\tpadding: 5px;\r\n\t\t\tcolor: white;\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\t.button-import{\r\n\t\tposition: relative;\r\n\t\tborder-radius: 10px;\r\n\t\tbackground: #125c15;\r\n\t\tborder: 1px solid #65a122;\r\n\t\tmargin: 0 auto 5px auto;\r\n\t\twidth: 120px;\r\n\t\tpadding: 7px 10px;\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\t&:hover{\r\n\t\t\tbackground: #65a122;\r\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\r\n\t\t\t}, 500);\r\n\t\t},\r\n\t\tshowed(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-dev-mode').$el('input').focus();\r\n\t\t\t}, 100);\r\n\t\t},\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('modal-dev-mode', function(My){\r\n\tMy.url = localStorage.BPModuleServer ??= \"\";\r\n\tMy.placeholder = location.origin;\r\n\r\n\tMy.connectDefault = function(){\r\n\t\tlocalStorage.BPModuleServer = My.url = \"\";\r\n\t\tMy.changeServer();\r\n\t}\r\n\r\n\tMy.changeServer = async function(clearOnFail){\r\n\t\tlet url = My.url;\r\n\t\tif(!url) url = My.placeholder;\r\n\t\t// url = 'http://localhost:6791';\r\n\r\n\t\tlet _url = url;\r\n\r\n\t\tif(url.slice(-1) === '/')\r\n\t\t\turl = url.slice(0, -1);\r\n\t\turl += '/browser-sync';\r\n\r\n\t\tif(window.___browserSync___ === void 0){\r\n\t\t\ttry{\r\n\t\t\t\tawait sf.loader.js([url+'/browser-sync-client.js?v=2']);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tSmallNotif.add(\"Failed to load client\", \"red\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t___browserSync___.socketUrl = url;\r\n\r\n\t\tlet socket = ___browserSync___.socket;\r\n\t\tsocket.disconnect();\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(socket.connected) return;\r\n\t\t\tconsole.log(\"Failed to connect to Blackprint module server:\", url);\r\n\t\t\tSmallNotif.add(\"Failed to connect to Blackprint module server\", \"red\");\r\n\t\t\tsocket.disconnect();\r\n\t\t\tsocket.off('connect', onConnected);\r\n\r\n\t\t\t// Unset the value if this was failing on startup time\r\n\t\t\tif(clearOnFail)\r\n\t\t\t\tlocalStorage.BPModuleServer = \"\";\r\n\t\t}, 8000);\r\n\r\n\t\tfunction onConnected(){\r\n\t\t\tconsole.log(\"Connected to Blackprint module server:\", url);\r\n\t\t\tSmallNotif.add(\"Connected to Blackprint module server\", \"green\");\r\n\t\t\tlocalStorage.BPModuleServer = My.url;\r\n\t\t}\r\n\r\n\t\tsocket.once('connect', onConnected);\r\n\r\n\t\tsocket.nsp = '/browser-sync';\r\n\t\tsocket.io.uri = url;\r\n\t\tsocket.connect();\r\n\r\n\t\tlet newModuleLoaded = false;\r\n\t\ttry{\r\n\t\t\tlet moduleList = Object.values(await $.getJSON(_url+'/api/module-list'));\r\n\t\t\tfor (var i = 0; i < moduleList.length; i++)\r\n\t\t\t\tmoduleList[i] = _url+moduleList[i];\r\n\r\n\t\t\tif(moduleList.length !== 0){\r\n\t\t\t\tSmallNotif.add(`Loading ${moduleList.length} new modules`, \"yellow\");\r\n\r\n\t\t\t\tawait Blackprint.loadModuleFromURL(moduleList, {\r\n\t\t\t\t\tloadBrowserInterface: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\tSmallNotif.add(`New modules have been loaded`, \"green\");\r\n\t\t\t}\r\n\r\n\t\t\tnewModuleLoaded = true;\r\n\t\t} catch(e) {\r\n\t\t\tSmallNotif.add(`Failed to load new modules`, \"red\");\r\n\t\t\tthrow e;\r\n\t\t}\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(newModuleLoaded) return;\r\n\t\t\tSmallNotif.add(`Loading modules was taking longer than 10s`, \"red\");\r\n\r\n\t\t\tif(sf.loader.pendingResources.size !== 0)\r\n\t\t\t\tconsole.log(\"Pending resources:\", sf.loader.pendingResources);\r\n\t\t}, 10000);\r\n\r\n\t\tif(Modal.showed)\r\n\t\t\tModal.hide();\r\n\t}\r\n\r\n\tif(My.url !== '' && sf.hotReload !== void 0){\r\n\t\t$(() => setTimeout(()=> My.changeServer(true), 200));\r\n\t}\r\n});","## html\r\n<sf-m name=\"environment-variables\">\r\n\t<div class=\"title\">Environment Variables</div>\r\n\t<div class=\"head\">\r\n\t\t<div class=\"row\">Key</div>\r\n\t\t<div class=\"row\">Value</div>\r\n\t</div>\r\n\t<div class=\"content\">\r\n\t\t<div>\r\n\t\t\t<div class=\"row\" sf-each=\"x in list\" @keyup=\"itemChanged(x)\">\r\n\t\t\t\t<input class=\"column key\" type=\"text\" @input=\"(this.value = x.key = validateKey(this.value))\" sf-bind=\"x.key\" placeholder=\"...\">\r\n\t\t\t\t<input class=\"column\" type=\"text\" sf-bind=\"x.value\" placeholder=\"...\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"row\">\r\n\t\t\t<input class=\"column key\" type=\"text\" @input=\"this.value = newKey = validateKey(this.value)\" sf-bind=\"newKey\" placeholder=\"Add new key...\">\r\n\t\t\t<input class=\"column\" type=\"text\" sf-bind=\"newValue\" placeholder=\"...\">\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"environment-variables\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\r\n\t.title{\r\n\t\ttext-align: center;\r\n\t\tmin-width: 300px;\r\n\t\tpadding: 5px;\r\n\t\tcolor: #fff;\r\n\t\tfont-weight: bold;\r\n\t\tletter-spacing: 1px;\r\n\t\tborder-bottom: 1px solid #000;\r\n\t\tbackground: #0009;\r\n\t\tcursor: default;\r\n\t}\r\n\r\n\t.head{\r\n\t\ttext-align: center;\r\n\t\tdisplay: flex;\r\n\t\tbackground: #00000070;\r\n\t\t.row{\r\n\t\t\tcolor: #fff;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\twidth: 50%;\r\n\t\t\toutline: 1px solid #000;\r\n\t\t\tcursor: default;\r\n\t\t}\r\n\t}\r\n\r\n\t.content{\r\n\t\t.row{\r\n\t\t\tdisplay: flex;\r\n\t\t\t.column{\r\n\t\t\t\tcolor: #fff;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\twidth: 50%;\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t\toutline: 1px solid #000;\r\n\t\t\t}\r\n\r\n\t\t\tinput{\r\n\t\t\t\tcolor: gray;\r\n\t\t\t\tbackground: #00000094;\r\n\t\t\t\tborder: none;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -5px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('environment-variables', function(My){\r\n\tMy.list = Blackprint.Environment.list;\r\n\tMy.newValue = '';\r\n\tMy.newKey = '';\r\n\r\n\t// Blackprint.Environment.import([{key: 'TEST', value:'123'}]);\r\n\r\n\tMy.v2m$newKey = function(now){\r\n\t\tnow = My.validateKey(now);\r\n\r\n\t\tif(now.length !== 0){\r\n\t\t\tBlackprint.Environment.set(now, My.newValue);\r\n\t\t\tMy.newKey = My.newValue = '';\r\n\t\t\tcaretFocusOnLastItem();\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\tfunction caretFocusOnLastItem(){\r\n\t\t$('input', My.list.getElement(My.list.length-1))[0].focus();\r\n\t}\r\n\r\n\tMy.itemChanged = function(item){\r\n\t\trefreshEnvironment();\r\n\r\n\t\tif(item.key.length === 0 && (Number.isNaN(item.value) || !item.value)){\r\n\t\t\tMy.list.splice(My.list.indexOf(item), 1);\r\n\t\t\tcaretFocusOnLastItem();\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tlet _refreshEnvironment = 0;\r\n\tfunction refreshEnvironment(){\r\n\t\tclearTimeout(_refreshEnvironment);\r\n\t\t_refreshEnvironment = setTimeout(function(){\r\n\t\t\tlet { map, list } =  Blackprint.Environment;\r\n\t\t\tlet uniq = new Set();\r\n\r\n\t\t\t// Assign the value of each list on the map\r\n\t\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\t\tlet item = list[i];\r\n\t\t\t\tmap[item.key] = item.value;\r\n\t\t\t\tuniq.add(item.key);\r\n\t\t\t}\r\n\r\n\t\t\t// Remove key that not exist on the list\r\n\t\t\tfor(let key in map){\r\n\t\t\t\tif(!uniq.has(key))\r\n\t\t\t\t\tBlackprint.Environment.delete(key, true);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tMy.validateKey = function(value){\r\n\t\treturn value.replace(/[ \\-]+/gm, '_').replace(/\\W+/gm, '').replace(/^[0-9]+/gm, '').toUpperCase();\r\n\t}\r\n\r\n\tMy.close = function(){\r\n\t\tModal.hide();\r\n\t\tmodal.goto('/');\r\n\t}\r\n});","## html\r\n<sf-m name=\"example-list\">\r\n\t<div class=\"description\">Please select one of these example (<a href=\"https://github.com/Blackprint/blackprint.github.io/blob/develop/src/global/sampleList.js\">source</a>)</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\r\n\t\t\t{{ x }}\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"example-list\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsf.model('example-list').list = Object.keys(sampleList);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('example-list', function(My){\r\n\tMy.list = [];\r\n\r\n\tMy.open = function(key){\r\n\t\tlet obj = sampleList[key];\r\n\t\tfor (var i = 0; i < SketchList.length; i++)\r\n\t\t\tSketchList[i].clearNodes();\r\n\r\n\t\tModal.hide();\r\n\r\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\r\n\t\tsketch.__importing = true;\r\n\r\n\t\tSketchImporter.pendingLoad = obj;\r\n\t\tSketchImporter.importNow();\r\n\t}\r\n});","## html\r\n<sf-m name=\"module-example-list-deep\">\r\n\t<div class=\"description\">Examples for: <b>{{ packageName }}</b></div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"openExample(x)\">\r\n\t\t\t{{ x.name }}\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"module-example-list-deep\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\tmargin-right: 40px;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -5px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('module-example-list-deep', function(My){\r\n\tMy.packageName = '';\r\n\tMy.baseUrl = '';\r\n\tMy.list = [];\r\n\r\n\tMy.openModal = function(pkg){\r\n\t\tMy.packageName = pkg.packageName;\r\n\r\n\t\tlet list = pkg.examples;\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tlet temp = list[i];\r\n\r\n\t\t\tif(!temp.name){\r\n\t\t\t\ttemp.name = temp.url\r\n\t\t\t\t\t.replace('example/', '')\r\n\t\t\t\t\t.replace(/^\\//, '')\r\n\t\t\t\t\t.replace('.json', '')\r\n\t\t\t\t\t.replace(/\\-/g, ' ');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMy.list = list;\r\n\t\tMy.baseUrl = pkg.packageURL;\r\n\t}\r\n\r\n\tMy.openExample = async function(item){\r\n\t\tSmallNotif.add(\"Loading information..\");\r\n\r\n\t\tlet url = item.url;\r\n\t\tif(url.slice(0, 1) !== '/')\r\n\t\t\turl = `/${url}`;\r\n\r\n\t\tlet obj = await $.getJSON(My.baseUrl+url);\r\n\t\tSketchImporter.loadJSON(obj);\r\n\t}\r\n\r\n\tMy.back = function(){\r\n\t\tModal.goto('/module-example-list');\r\n\t}\r\n});","## html\r\n<sf-m name=\"module-example-list\">\r\n\t<div class=\"description\">Please select one of the module to load the example list</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\" sf-each=\"x in list\" @click=\"open(x)\">\r\n\t\t\t{{ x.packageName }}\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"module-example-list\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){ }\r\n\t}\r\n}\r\n\r\n## js-global\r\nvar ModuleExampleList = sf.model('module-example-list', function(My){\r\n\tMy.list = EditorHeader._moduleExampleList;\r\n\r\n\tinit();\r\n\tfunction init() {\r\n\t\tlet cache = localStorage.bpModuleExampleList;\r\n\t\tif(!cache) return;\r\n\r\n\t\tMy.list.push(...JSON.parse(cache));\r\n\t}\r\n\r\n\tMy.open = function(x) {\r\n\t\tsf.model('module-example-list-deep').openModal(x);\r\n\t\tModal.goto('/module-example-list-deep');\r\n\t}\r\n\r\n\tMy.add = function(packageName, list, packageURL){\r\n\t\tlet ref = My.list;\r\n\t\tfor (var i = 0; i < ref.length; i++) {\r\n\t\t\tif(ref[i].packageName === packageName) break;\r\n\t\t}\r\n\r\n\t\t// new example\r\n\t\tif(i === ref.length){\r\n\t\t\tref.push({\r\n\t\t\t\tpackageName,\r\n\t\t\t\tpackageURL,\r\n\t\t\t\texamples: list,\r\n\t\t\t});\r\n\r\n\t\t\tMy.list = ref = ref.sort((a, b) => a.packageName.localeCompare(b.packageName));\r\n\r\n\t\t\ttry{\r\n\t\t\t\t// This may give error if this modal was never been opened since startup\r\n\t\t\t\tref.refresh();\r\n\t\t\t} catch(e){}\r\n\r\n\t\t\tSmallNotif.add(`\"${packageName}\" example has been added`, 'green');\r\n\t\t}\r\n\t\telse ref[i].examples = list;\r\n\r\n\t\tlocalStorage.bpModuleExampleList = JSON.stringify(My.list);\r\n\t}\r\n});","## html\r\n<div style=\"height:70vh\">\r\n\t<sf-m name=\"module-url\">\r\n\t\t<div class=\"head\">\r\n\t\t\t<div class=\"row url\">Shortened Module URL</div>\r\n\t\t\t<div class=\"row nodes\">Nodes</div>\r\n\t\t\t<div class=\"row actions\">Actions</div>\r\n\t\t</div>\r\n\t\t<div class=\"content\">\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"row\" sf-each=\"x in list\">\r\n\t\t\t\t\t<div class=\"column url\"><div>\r\n\t\t\t\t\t\t<b>{{ shortenLink(x._url, 'host') }}</b>\r\n\t\t\t\t\t\t{{ shortenLink(x._url, 'path') }}\r\n\t\t\t\t\t\t<b>{{ shortenLink(x._url, 'search') }}</b>\r\n\t\t\t\t\t\t<a title=\"Right click to copy link address, click to open on new tab\" target=\"_blank\" href=\"{{x._url}}\"><i class=\"fa fa-link\"></i></a>\r\n\t\t\t\t\t</div></div>\r\n\t\t\t\t\t<div class=\"column nodes\">\r\n\t\t\t\t\t\t{{ x._nodeLength }}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"column actions\">\r\n\t\t\t\t\t\t<button title=\"Show this module on dropdown/module list\" @click=\"hideFromURL(x)\">\r\n\t\t\t\t\t\t\t <i class=\"fa fa-list\"></i>\r\n\t\t\t\t\t\t\t <i class=\"fa fa-slash\" style=\"\r\n\t\t\t\t\t\t\t    position: absolute;\r\n\t\t\t\t\t\t\t    margin-left: -15px;\r\n\t\t\t\t\t\t\t    display: {{ x._hidden ? 'inline-block' : 'none' }}\r\n\t\t\t\t\t\t\t\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button title=\"Reload this module again from URL\" @click=\"reloadURL(x)\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-sync\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button title=\"Remove any related nodes and also remove this module\" @click=\"deleteFromURL(x)\">\r\n\t\t\t\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<input class=\"column url-input\" type=\"text\" @keyup.Enter=\"addURL()\" sf-bind=\"newURL\" placeholder=\"Add module from URL here... (Then press enter)\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"menu\">\r\n\t\t\t<div class=\"item\" @click=\"close\" title=\"Close\"><i class=\"fa fa-times\"></i></div>\r\n\t\t\t<div class=\"item\" @click=\"npmList\" title=\"Search from NPM\"><i class=\"fa fa-book-open\"></i></div>\r\n\t\t\t<div class=\"item\" @click=\"loadCachedList\" style=\"{{ firstInit ? '' : 'display: none' }}\" title=\"Load cached list\"><i class=\"fa fa-boxes\"></i></div>\r\n\t\t</div>\r\n\t</sf-m>\r\n</div>\r\n\r\n## scss-global\r\nsf-m[name=\"module-url\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tmin-width: 700px;\r\n\r\n\t.head{\r\n\t\tletter-spacing: 1px;\r\n\t\ttext-align: center;\r\n\t\tdisplay: flex;\r\n\t\tbackground: #00000040;\r\n\t\t.row{\r\n\t\t\tcolor: #fff;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\toutline: 1px solid #000;\r\n\t\t\tcursor: default;\r\n\t\t\t&.url{\r\n\t\t\t\twidth: 58%;\r\n\t\t\t}\r\n\t\t\t&.nodes{\r\n\t\t\t\twidth: 19%;\r\n\t\t\t}\r\n\t\t\t&.actions{\r\n\t\t\t\twidth: 22%;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.content{\r\n\t\t.row{\r\n\t\t\tbackground: #00000094;\r\n\t\t\tdisplay: flex;\r\n\t\t\t.column{\r\n\t\t\t\tcolor: #fff;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\twidth: 50%;\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t\toutline: 1px solid #000;\r\n\t\t\t\t&.url{\r\n\t\t\t\t\twidth: 60%;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\twhite-space: nowrap;\r\n\t\t\t\t\tmargin-bottom: -10px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t\tfont-size: 14px;\r\n\t\t\t\t\tb{\r\n\t\t\t\t\t\tmargin-right: 4px;\r\n\t\t\t\t\t\tcolor: #696969;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv{\r\n\t\t\t\t\t\toverflow-x: scroll;\r\n\t\t\t\t\t\tpadding-bottom: 10px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t&.nodes{\r\n\t\t\t\t\twidth: 17.5%;\r\n\t\t\t\t}\r\n\t\t\t\t&.actions{\r\n\t\t\t\t\twidth: 22%;\r\n\t\t\t\t}\r\n\t\t\t\t&.url-input{\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tcolor: gray;\r\n\t\t\t\t\tbackground: #00000094;\r\n\t\t\t\t\tborder: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.actions{\r\n\t\t\tbutton{\r\n\t\t\t\tborder: 0;\r\n\t\t\t\tbackground: none;\r\n\t\t\t\tcolor: #fff;\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t\t.cross{\r\n\t\t\t\ttext-decoration: line-through;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -50px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 2px solid #456357;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton: {\r\n\t\tcoming(){ _editorModuleURL.sortURL() }\r\n\t}\r\n}\r\n\r\n## js-global\r\nlet _editorModuleURL = sf.model('module-url', function(My){\r\n\tMy.list = Blackprint._modulesURL;\r\n\tMy.firstInit = false && !!localStorage.bpModuleURLList; // disable it for now\r\n\tMy.newURL = '';\r\n\r\n\tlet lastModuleList = localStorage.bpModuleURLList;\r\n\r\n\tMy.init = async function(){\r\n\t\t// First initialization cycle\r\n\t}\r\n\r\n\tMy.sortURL = function() {\r\n\t\tMy.list.sort((a, b) => a._url.localeCompare(b._url));\r\n\t\tMy.list.refresh();\r\n\r\n\t\tif(My.list.length === 0) return;\r\n\r\n\t\tlocalStorage.bpModuleURLList = JSON.stringify(My.list.map(v => v._url));\r\n\t}\r\n\r\n\tMy.shortenLink = function(url, which){\r\n\t\turl = new URL(url);\r\n\r\n\t\tif(which === 'search')\r\n\t\t\treturn url.search;\r\n\r\n\t\tif(which === 'host')\r\n\t\t\treturn url.host || location.host;\r\n\r\n\t\t// which === 'path'\r\n\t\tlet path = url.pathname;\r\n\t\tif(path.includes('@dist'))\r\n\t\t\treturn path.replace(/(cjs|mjs)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\r\n\r\n\t\treturn path.replace(/(cjs|mjs|dist)\\/|\\.(min|mjs|js)/g, '').split('/').slice(-2).join('/');\r\n\t}\r\n\r\n\tasync function loadModuleURL(url, options){\r\n\t\tlet temp = My.newURL;\r\n\t\tMy.newURL = '';\r\n\r\n\t\tlet progressToast = SmallNotif.add(\"Loading\", 'yellow', false);\r\n\r\n\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\r\n\t\tsf.loader.onProgress(function(loaded, total){\r\n\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tawait Blackprint.loadModuleFromURL(url, options);\r\n\t\t\tawait sf.loader.task;\r\n\t\t\tSmallNotif.add(\"Module sucessfully loaded\", 'green');\r\n\t\t} catch(e) {\r\n\t\t\tSmallNotif.add(\"Failed to load module\", 'red');\r\n\t\t\tconsole.error(e);\r\n\t\t\tMy.newURL = temp;\r\n\t\t} finally {\r\n\t\t\tsf.loader.DOMWasLoaded = true; // reset flag\r\n\t\t}\r\n\r\n\t\t// Clear toast\r\n\t\tlet list = SmallNotif.list;\r\n\t\tlist.splice(list.indexOf(progressToast), 1);\r\n\r\n\t\tMy.sortURL();\r\n\t}\r\n\r\n\tMy.addURL = function(){\r\n\t\tlet list = My.list;\r\n\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tlet temp = list[i];\r\n\t\t\tif(My.newURL === temp._url)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(My.newURL.replace(/\\?.*?$/m, '') === temp._url.replace(/\\?.*?$/m, '')){\r\n\t\t\t\ttemp._url = My.newURL.replace(/\\?.*?$/m, '');\r\n\t\t\t\tloadModuleURL(temp._url, {\r\n\t\t\t\t\tloadBrowserInterface: true\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = My.newURL.replace(/\\?.*?$/m, '') + '?'+ (Date.now()/1000|0);\r\n\t\tloadModuleURL(url, {\r\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\r\n\t\t});\r\n\t}\r\n\r\n\tMy.reloadURL = function(item){\r\n\t\tif(/\\?[0-9]/.test(item._url))\r\n\t\t\titem._url = item._url.replace(/\\?([0-9]+)/, (full, num) => '?'+(1+Number(num)));\r\n\t\telse if(item._url.includes('?'))\r\n\t\t\titem._url = item._url.replace(/\\?.*?$/m, '')+'?1';\r\n\t\telse item._url += '?1';\r\n\r\n\t\tfor (var i = 0; i < SketchList.length; i++)\r\n\t\t\tSketchList[i]._remote?.syncModuleList();\r\n\r\n\t\tBlackprint.loadModuleFromURL(item._url);\r\n\t}\r\n\r\n\tlet { diveModuleURL } = Blackprint.utils;\r\n\tMy.hideFromURL = function(item){\r\n\t\tlet url = item._url.replace(/\\?.*?$/m, '');\r\n\t\tlet hidden = item._hidden = !item._hidden;\r\n\r\n\t\tdiveModuleURL(Blackprint.modulesURL[url], function(deepObject, deepProp, keys, bubble){\r\n\t\t\tdeepObject[deepProp].hidden = hidden;\r\n\r\n\t\t\t// Bubbling check if the parent has no child anymore\r\n\t\t\tfor (var i = bubble.length-1; i >= 0; i--) {\r\n\t\t\t\tlet ref = bubble[i];\r\n\r\n\t\t\t\tif(--ref.val._visibleNode <= 0){\r\n\t\t\t\t\tif(i === 0){\r\n\t\t\t\t\t\tBlackprint.nodes[keys[0]].hidden = hidden;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet parent = bubble[i-1];\r\n\t\t\t\t\tparent.val[ref.key].hidden = hidden;\r\n\t\t\t\t}\r\n\t\t\t\telse break;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tBlackprint.emit('bp_editorNodeAvailability');\r\n\t}\r\n\r\n\tMy.deleteFromURL = function(item){\r\n\t\tlet list = My.list;\r\n\t\tvar index = list.indexOf(item);\r\n\r\n\t\tif(index === -1) return;\r\n\t\tlet url = item._url.replace(/[?#].*?$/m, '');\r\n\r\n\t\tBlackprint.deleteModuleFromURL(url);\r\n\t}\r\n\r\n\tBlackprint.on('moduleDelete', { slot: 'bp-editor' }, function({ url }) {\r\n\t\tlet styles = document.styleSheets;\r\n\t\tlet simplifiedURL = url.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\r\n\r\n\t\tfor (var i = 0; i < styles.length; i++) {\r\n\t\t\tlet style = styles[i];\r\n\t\t\tif(style.href == null) continue;\r\n\r\n\t\t\tlet temp = style.href.replace(/[?#].*?$/m, '').replace(/\\.(sf|js|css|min|mjs)\\b/g, '');\r\n\t\t\tif(temp === simplifiedURL){\r\n\t\t\t\tstyle.ownerNode.remove();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet list = My.list;\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tif(list[i]._url.includes(simplifiedURL)){\r\n\t\t\t\tlist.splice(i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tMy.npmList = function(){\r\n\t\tmodal.goto('/npm-packages');\r\n\t}\r\n\r\n\tMy.loadCachedList = function(){\r\n\t\tlet list = lastModuleList;\r\n\t\tif(!list) return;\r\n\r\n\t\tlist = JSON.parse(list);\r\n\t\tif(list.length === 0) return;\r\n\r\n\t\tMy.firstInit = false;\r\n\r\n\t\tloadModuleURL(list, {\r\n\t\t\tloadBrowserInterface: true // Also load the related .sf.js and .sf.css if exist\r\n\t\t});\r\n\t}\r\n\r\n\tMy.close = function(){\r\n\t\tModal.hide();\r\n\t\tmodal.goto('/');\r\n\t}\r\n});","## html\r\n<sf-m name=\"npm-package-info\">\r\n\t<div class=\"title\">{{ title }} (v{{ version }})</div>\r\n\t<div class=\"info\"><span>{{ author }}</span> <a style=\"display: {{ repository ? '' : 'none' }}\" href=\"{{ repository }}\" target=\"_blank\">(Repository)</a></div>\r\n\t<div class=\"description\">{{ description }}</div>\r\n\r\n\t<div class=\"list-info\">Please select module to import:</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item {{ x.active || '' }}\" sf-each=\"x in list\" @click=\"load(x)\">\r\n\t\t\t{{ x.url }} <i class=\"{{ x.active === 'loading' ? 'fa fa-spinner fa-spin' : '' }}\"></i>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"menu\">\r\n\t\t<div class=\"item\" @click=\"back\" title=\"Back\"><i class=\"fa fa-reply\"></i></div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"npm-package-info\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t> .info{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-top: -20px;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t> .description {\r\n\t\tcolor: white;\r\n\t\tpadding: 0 10px;\r\n\t}\r\n\t> .list-info {\r\n\t\tmargin-top: 10px;\r\n\t\tborder-top: 1px dashed white;\r\n\t\tpadding: 5px 10px 0 10px;\r\n\t}\r\n\t> .title{\r\n\t\tpadding: 10px;\r\n\t\tmargin-right: 40px;\r\n\t\tcolor: white;\r\n\t\tfont-weight: bold;\r\n\t\ttext-decoration: underline;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\r\n\t> .list-info{\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\r\n\t\t\t&.active{\r\n\t\t\t\tcolor: gray;\r\n\t\t\t}\r\n\t\t\t&.loading{\r\n\t\t\t\tcolor: burlywood;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.menu{\r\n\t\tposition: absolute;\r\n\t\tright: -5px;\r\n\t\ttop: -10px;\r\n\t\ttext-align: center;\r\n\t\t.item{\r\n\t\t\tcursor: pointer;\r\n\t\t\tpadding: 5px;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin: 10px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tborder-radius: 20px;\r\n\t\t\tbackground: #000000a8;\r\n\t\t\tcolor: #fff;\r\n\t\t\tbox-shadow: 0 0 5px black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('npm-package-info', function(My){\r\n\tMy.list = [];\r\n\tMy.title = '';\r\n\tMy.description = '';\r\n\tMy.version = '';\r\n\tMy.author = '';\r\n\tMy.date = '';\r\n\tMy.repository = '';\r\n\tMy.packageURL = '';\r\n\tMy.package = 0;\r\n\r\n\tMy.open = function(pkg, moduleList, exampleList){\r\n\t\tMy.list = moduleList;\r\n\t\tMy.exampleList = exampleList;\r\n\t\tMy.package = pkg;\r\n\t\tMy.title = pkg.name;\r\n\t\tMy.description = pkg.description || '';\r\n\t\tMy.version = pkg.version;\r\n\t\tMy.date = pkg.date.split('T')[0];\r\n\t\tMy.author = pkg.publisher.username || '';\r\n\t\tMy.repository = pkg.links.repository || '';\r\n\r\n\t\tMy.packageURL = `https://cdn.jsdelivr.net/npm/${pkg.name}@${pkg.version}`;\r\n\r\n\t\tlet temp = Blackprint.modulesURL;\r\n\t\tlet list = My.list;\r\n\t\tfor(let key in temp){\r\n\t\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\t\tlet item = list[i];\r\n\t\t\t\tif(key.includes(item.url))\r\n\t\t\t\t\titem.active = 'active';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tModal.goto('/npm-package-info');\r\n\t}\r\n\r\n\tlet progressToast;\r\n\tasync function theProgress(){\r\n\t\tif(progressToast) return;\r\n\r\n\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\r\n\r\n\t\t// todo: fix: sf.loader.onProgress\r\n\t\tlet temp = (function(loaded, total){\r\n\t\t\tif(loaded === total){\r\n\t\t\t\tsf.loader.DOMWasLoaded = true;\r\n\t\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\r\n\r\n\t\t\t\tprogressToast = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!progressToast) return;\r\n\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\r\n\t\t});\r\n\r\n\t\tlet intv = setInterval(()=> {\r\n\t\t\ttemp(sf.loader.loadedContent, sf.loader.totalContent);\r\n\t\t}, 500);\r\n\r\n\t\ttry{\r\n\t\t\tawait sf.loader.task;\r\n\t\t} catch(e){\r\n\t\t\tSmallNotif.add(e.message, 'red');\r\n\t\t\tconsole.error(e);\r\n\t\t}\r\n\r\n\t\tclearInterval(intv);\r\n\r\n\t\tlet list = SmallNotif.list;\r\n\t\tlist.splice(list.indexOf(progressToast), 1);\r\n\t}\r\n\r\n\tMy.load = async function(item){\r\n\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(sf.loader.totalContent !== sf.loader.loadedContent)\r\n\t\t\t\ttheProgress();\r\n\t\t}, 500);\r\n\r\n\t\titem.active = 'loading';\r\n\r\n\t\ttry{\r\n\t\t\tawait Blackprint.loadModuleFromURL([My.packageURL + item.url], {\r\n\t\t\t\tloadBrowserInterface: true // set to \"false\" for Node.js/Deno\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tif(sf.loader.totalContent === sf.loader.loadedContent)\r\n\t\t\t\tsf.loader.DOMWasLoaded = true;\r\n\t\t}\r\n\r\n\t\tif(My.exampleList.length !== 0)\r\n\t\t\tModuleExampleList.add(My.title, My.exampleList, My.packageURL);\r\n\r\n\t\titem.active = 'active';\r\n\t\tMy.package._active = true;\r\n\t}\r\n\r\n\tMy.back = function(){\r\n\t\tModal.goto('/npm-packages');\r\n\t}\r\n});","## html\r\n<sf-m name=\"npm-packages\">\r\n\t<div class=\"description\">\r\n\t\tSearch package on NPM repository\r\n\t\t<i class=\"{{ loading ? 'fa fa-spinner fa-spin' : '' }}\"></i>\r\n\t</div>\r\n\t<div class=\"mini-description\" title=\"especially if you're not a developer, always becareful if someone ask you to do something with Blackprint, like inputting password or private key\">Always becareful and verify the module's source code before going to production</div>\r\n\t<div class=\"search\">\r\n\t\t<input type=\"text\" sf-bind=\"search\" @keyup.Enter=\"refreshList\" placeholder=\"Search...\">\r\n\t</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item {{ x.package._active && 'active' }} {{ x.package._update && 'update' }}\" sf-each=\"x in list\" @click=\"open(x.package)\">\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"title\">{{ x.package.name }} <span>(v{{ x.package.version }})</span></div>\r\n\t\t\t\t<div class=\"author\">{{ x.package.publisher.username }}</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div class=\"description\">{{ x.package.description }}</div>\r\n\t\t\t\t<div class=\"date\">{{ x.package.date.split('T')[0] }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"npm-packages\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.search-info{\r\n\t\tcolor: white;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t> .mini-description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-top: -20px;\r\n\t}\r\n\t> .description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t\ta{\r\n\t\t\tcolor: skyblue;\r\n\t\t}\r\n\t}\r\n\t.search{\r\n\t\tpadding: 0 5px;\r\n\t\tinput{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\twidth: calc(100% - 22px);\r\n\t\t}\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tcursor: pointer;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tbackground: #000000de;\r\n\t\t\t}\r\n\r\n\t\t\t&.active{\r\n\t\t\t\tcolor: gray;\r\n\t\t\t}\r\n\r\n\t\t\t.title{\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\ttext-decoration: underline;\r\n\t\t\t}\r\n\t\t\t.description{\r\n\t\t\t\tfont-weight: normal;\r\n\t\t\t\tpadding-right: 80px;\r\n\t\t\t}\r\n\t\t\t.author{\r\n\t\t\t\tfloat: right;\r\n\t\t\t\tmargin-top: -24px;\r\n\t\t\t}\r\n\t\t\t.date{\r\n\t\t\t\tfloat: right;\r\n\t\t\t\tvertical-align: middle;\r\n\t\t\t\tmargin-top: -20px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('npm-packages', function(My){\r\n\tlet query = 'https://registry.npmjs.org/-/v1/search?text=blackprint%20nodes';\r\n\tMy.list = [];\r\n\tMy.search = '';\r\n\tMy.loading = false;\r\n\r\n\tMy.init = function(){\r\n\t\tMy.refreshList();\r\n\t}\r\n\r\n\tMy.refreshList = async function(){\r\n\t\tlet _query = query;\r\n\t\tif(My.search !== '')\r\n\t\t\t_query += '%20'+My.search;\r\n\r\n\t\tMy.loading = true;\r\n\t\tlet list = (await $.getJSON(_query)).objects;\r\n\t\tMy.loading = false;\r\n\r\n\t\t// ToDo: check if version was different with current loaded module\r\n\t\tlet temp = Blackprint.modulesURL;\r\n\t\tfor(let key in temp){\r\n\t\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\t\tlet item = list[i].package;\r\n\r\n\t\t\t\tif(key.includes(item.name)){\r\n\t\t\t\t\titem._active = true;\r\n\t\t\t\t\titem._update = Blackprint.utils.packageIsNewer(key, item.name+'@'+item.version);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMy.list = list;\r\n\t}\r\n\r\n\tMy.open = async function(pkg){\r\n\t\tMy.loading = true;\r\n\r\n\t\t// ToDo: do we need to sanitize URL? '-'\r\n\t\tlet dirs = await $.getJSON(`https://data.jsdelivr.com/v1/package/npm/${pkg.name}@${pkg.version}`);\r\n\t\tdirs = dirs.files;\r\n\r\n\t\tlet dist = [];\r\n\t\tlet example = [];\r\n\r\n\t\tfor (var i = 0; i < dirs.length; i++) {\r\n\t\t\tlet dir = dirs[i];\r\n\t\t\tif(dir.type !== 'directory') continue;\r\n\r\n\t\t\tif(dir.name === 'dist'){\r\n\t\t\t\tlet temp = dir.files;\r\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\tlet file = temp[a];\r\n\t\t\t\t\tif(file.type !== 'file') continue;\r\n\r\n\t\t\t\t\tlet name = file.name;\r\n\t\t\t\t\tif(/\\.(map|sf\\.mjs|sf\\.js|css)$/.test(name))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tdist.push({url: `/dist/${name}`});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(dir.name === 'example'){\r\n\t\t\t\tlet temp = dir.files;\r\n\t\t\t\tfor (var a = 0; a < temp.length; a++) {\r\n\t\t\t\t\tlet file = temp[a];\r\n\t\t\t\t\tif(file.type !== 'file') continue;\r\n\r\n\t\t\t\t\texample.push({url: `/example/${file.name}`});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tMy.loading = false;\r\n\t\tsf.model('npm-package-info').open(pkg, dist, example);\r\n\t}\r\n});","## html\r\n<sf-m name=\"modal-remote-engine-connect\">\r\n\t<div class=\"description\">Please set the remote engine URL</div>\r\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default localhost server)</div>\r\n\t<div class=\"text-input\">\r\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\r\n\t</div>\r\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"modal-remote-engine-connect\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t}\r\n\t.note{\r\n\t\ttext-align: center;\r\n\t\tfont-size: 12px;\r\n\t\tpadding: 0;\r\n\t\tcolor: gray;\r\n\t\tmargin-top: -10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.text-input{\r\n\t\tpadding: 10px;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\r\n\t\tinput{\r\n\t\t\twidth: 100%;\r\n\t\t\tborder: 1px solid black;\r\n\t\t\tbackground: #161616;\r\n\t\t\tpadding: 5px;\r\n\t\t\tcolor: white;\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\t.button-import{\r\n\t\tposition: relative;\r\n\t\tborder-radius: 10px;\r\n\t\tbackground: #125c15;\r\n\t\tborder: 1px solid #65a122;\r\n\t\tmargin: 0 auto 5px auto;\r\n\t\twidth: 120px;\r\n\t\tpadding: 7px 10px;\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\t&:hover{\r\n\t\t\tbackground: #65a122;\r\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-engine-connect').$el('input').focus();\r\n\t\t\t}, 500);\r\n\t\t},\r\n\t\tshowed(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-engine-connect').$el('input').focus();\r\n\t\t\t}, 100);\r\n\t\t},\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('modal-remote-engine-connect', function(My){\r\n\tMy.url = localStorage.BPRemoteEngine ??= \"\";\r\n\tMy.placeholder = 'http://localhost:2345';\r\n\tMy.allowModuleSync = true;\r\n\tMy.allowRemoteImport = true;\r\n\tMy.allowDataOutSync = true;\r\n\tMy.client = null;\r\n\tMy.socket = null;\r\n\r\n\tMy.connectDefault = function(){\r\n\t\tlocalStorage.BPRemoteEngine = My.url = \"\";\r\n\t\tMy.changeServer();\r\n\t}\r\n\r\n\tlet isConnectOnStartup = false;\r\n\tMy.changeServer = async function(clearOnFail){\r\n\t\tlet url = My.url;\r\n\t\tif(!url) url = My.placeholder;\r\n\r\n\t\tif(window.io == null)\r\n\t\t\tawait sf.loader.js(['https://cdn.socket.io/4.4.1/socket.io.min.js']);\r\n\r\n\t\tlet instance = window.SketchList[0];\r\n\t\tlet client = My.client ??= new Blackprint.RemoteControl(instance);\r\n\t\tMy.client.enable?.();\r\n\r\n\t\tMy.socket?.destroy();\r\n\t\tlet socket = My.socket = io(url);\r\n\r\n\t\tsocket.on('startup-time', time => {\r\n\t\t\tif((Date.now() - time) < 10e3) // younger than 10 sec\r\n\t\t\t\tclient.sendSketchToRemote();\r\n\t\t\telse {\r\n\t\t\t\tclient.importRemoteJSON();\r\n\t\t\t\tclient.once('empty.json.import', function(){\r\n\t\t\t\t\tclient.sendSketchToRemote();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tclient.on('disabled', ()=> SmallNotif.add(\"Remote sync was disabled\", 'red'));\r\n\t\tclient.on('remote-save.begin', function(){\r\n\t\t\tSmallNotif.add('Sketch saved on remote');\r\n\t\t});\r\n\r\n\t\t// instance.syncDataOut = false;\r\n\t\tinstance.disablePorts = true;\r\n\r\n\t\t// Allow import/module sync\r\n\t\tclient.onImport = v=> My.allowRemoteImport;\r\n\t\tclient.onModule = v=> My.allowModuleSync;\r\n\r\n\t\tsocket.on('relay', v => client.onSyncIn(v));\r\n\t\tclient.onSyncOut = v => socket.emit('relay', v);\r\n\r\n\t\tif(Modal.showed) Modal.hide();\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(socket.connected) return;\r\n\t\t\tconsole.log(\"Failed to connect to remote engine:\", url);\r\n\t\t\tSmallNotif.add(\"Failed to connect to remote engine\", \"red\");\r\n\t\t\tsocket.destroy();\r\n\r\n\t\t\t// Unset the value if this was failing on startup time\r\n\t\t\tif(clearOnFail)\r\n\t\t\t\tlocalStorage.BPRemoteEngine = \"\";\r\n\t\t}, 8000);\r\n\r\n\t\tsocket.on('disconnect', ()=> SmallNotif.add(\"Disconnected from remote engine\"));\r\n\t\tsocket.on('connect', function(){\r\n\t\t\tconsole.log(\"Connected to remote engine:\", url);\r\n\t\t\tSmallNotif.add(\"Connected to remote engine\", \"green\");\r\n\t\t\tlocalStorage.BPRemoteEngine = url;\r\n\t\t});\r\n\t}\r\n\r\n\tif(My.url !== '' && Blackprint.RemoteControl != null){\r\n\t\t$(() => setTimeout(()=> My.changeServer(true), 200));\r\n\t}\r\n});","## html\r\n<sf-m name=\"modal-remote-sketch-connect\">\r\n\t<div class=\"description\">Please set the remote sketch's relay URL</div>\r\n\t<div class=\"note\" style=\"display: {{ url === '' || url === placeholder ? 'none':'' }}\" @click=\"connectDefault\">(Click here to connect to default localhost server)</div>\r\n\t<div class=\"text-input\">\r\n\t\t<input placeholder=\"{{ placeholder }}\" type=\"text\" sf-bind=\"url\" @keyup.Enter=\"changeServer\">\r\n\t</div>\r\n\t<div class=\"button-import\" @click=\"changeServer\">Connect</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"modal-remote-sketch-connect\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 10px;\r\n\t\tcolor: white;\r\n\t}\r\n\t.note{\r\n\t\ttext-align: center;\r\n\t\tfont-size: 12px;\r\n\t\tpadding: 0;\r\n\t\tcolor: gray;\r\n\t\tmargin-top: -10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.text-input{\r\n\t\tpadding: 10px;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\r\n\t\tinput{\r\n\t\t\twidth: 100%;\r\n\t\t\tborder: 1px solid black;\r\n\t\t\tbackground: #161616;\r\n\t\t\tpadding: 5px;\r\n\t\t\tcolor: white;\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\t.button-import{\r\n\t\tposition: relative;\r\n\t\tborder-radius: 10px;\r\n\t\tbackground: #125c15;\r\n\t\tborder: 1px solid #65a122;\r\n\t\tmargin: 0 auto 5px auto;\r\n\t\twidth: 120px;\r\n\t\tpadding: 7px 10px;\r\n\t\ttext-align: center;\r\n\t\tcursor: pointer;\r\n\t\tcolor: white;\r\n\t\t&:hover{\r\n\t\t\tbackground: #65a122;\r\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-sketch-connect').$el('input').focus();\r\n\t\t\t}, 500);\r\n\t\t},\r\n\t\tshowed(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tsf.model('modal-remote-sketch-connect').$el('input').focus();\r\n\t\t\t}, 100);\r\n\t\t},\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('modal-remote-sketch-connect', function(My){\r\n\tMy.url = localStorage.BPSketchRelayServer ??= \"\";\r\n\tMy.placeholder = 'http://localhost:2345';\r\n\tMy.allowModuleSync = true;\r\n\tMy.allowRemoteImport = true;\r\n\tMy.allowDataOutSync = true;\r\n\tMy.client = null;\r\n\tMy.socket = null;\r\n\r\n\tMy.connectDefault = function(){\r\n\t\tlocalStorage.BPSketchRelayServer = My.url = \"\";\r\n\t\tMy.changeServer();\r\n\t}\r\n\r\n\tMy.changeServer = async function(clearOnFail){\r\n\t\tlet url = My.url;\r\n\r\n\t\tif(window.io == null)\r\n\t\t\tawait sf.loader.js(['https://cdn.socket.io/4.4.1/socket.io.min.js']);\r\n\r\n\t\tlet instance = window.SketchList[0];\r\n\t\tlet client = My.client ??= new Blackprint.RemoteSketch(instance);\r\n\t\tMy.client.enable?.();\r\n\r\n\t\t// Allow import/module sync\r\n\t\tclient.onImport = v=> My.allowRemoteImport;\r\n\t\tclient.onModule = v=> My.allowModuleSync;\r\n\t\tclient.on('disabled', ()=> SmallNotif.add(\"Remote sync was disabled\", 'red'));\r\n\r\n\t\tMy.socket?.destroy();\r\n\t\tlet socket = My.socket = io(url);\r\n\r\n\t\tsocket.on('relay', v => client.onSyncIn(v));\r\n\t\tclient.onSyncOut = v => socket.emit('relay', v);\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tif(socket.connected) return;\r\n\t\t\tconsole.log(\"Failed to connect to sketch's relay server:\", url);\r\n\t\t\tSmallNotif.add(\"Failed to connect to sketch's relay server\", \"red\");\r\n\t\t\tsocket.destroy();\r\n\r\n\t\t\t// Unset the value if this was failing on startup time\r\n\t\t\tif(clearOnFail)\r\n\t\t\t\tlocalStorage.BPSketchRelayServer = '';\r\n\t\t}, 8000);\r\n\r\n\t\tsocket.on('disconnect', ()=> SmallNotif.add(\"Disconnected from relay server\"));\r\n\t\tsocket.on('connect', function(){\r\n\t\t\tconsole.log(\"Connected to sketch's relay server:\", url);\r\n\t\t\tSmallNotif.add(\"Connected to sketch's relay server\", \"green\");\r\n\t\t\tlocalStorage.BPSketchRelayServer = url;\r\n\t\t});\r\n\r\n\t\tif(Modal.showed) Modal.hide();\r\n\t}\r\n\r\n\tif(My.url !== '' && Blackprint.RemoteSketch != null){\r\n\t\t$(() => setTimeout(()=> My.changeServer(true), 200))\r\n\t}\r\n});","## html\n<sf-m name=\"sketch-importer\">\n\t<div class=\"description\" title=\"To avoid any risks if you have stored sensitive data on this editor, make sure you have verify the author of the nodes and the JSON to be imported.\">Please verify the author before importing</div>\n\t<div class=\"info-modules\">\n\t\t<div class=\"title\">These modules will be imported:</div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in modules\">\n\t\t\t\t{{ x }}\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-nodes\">\n\t\t<div class=\"title\">These nodes will be used:</div>\n\t\t<ul class=\"list\">\n\t\t\t<li class=\"item\" sf-each=\"x in nodes\">\n\t\t\t\t{{ x.name }} ({{ x.count }})\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class=\"info-clear\">\n\t\t<div class=\"title\">Please be careful if you saved sensitive data on this editor<br>You can click below to clear the saved data:</div>\n\t\t<!-- Hi! can you contribute for clearing browser data like WebSQL or IndexedDB? -->\n\t\t<div class=\"button-clear\">\n\t\t\t<div @click=\"clear.localStorage\">\n\t\t\t\tLocal Storage ({{ savedKeys.localStorage.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sessionStorage\">\n\t\t\t\tSession Storage ({{ savedKeys.sessionStorage.length }})\n\t\t\t</div><br>\n\t\t\t<div @click=\"clear.environmentVariables\">\n\t\t\t\tEnvironment Variables ({{ savedKeys.environmentVariables.length }})\n\t\t\t</div>\n\t\t\t<div @click=\"clear.sketchPages\">\n\t\t\t\tSketch Pages ({{ savedKeys.sketchPages.length }})\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"button-import\" @click=\"importNow\">\n\t\tImport Sketch\n\t</div>\n</sf-m>\n\n## scss-global\nsf-m[name=\"sketch-importer\"] {\n\tbackground: #1e1e1eab;\n\tborder-radius: 10px;\n\tborder: 2px solid black;\n\tposition: relative;\n\tbox-shadow: 0 0 20px 0px white;\n\tcolor: white;\n\tmax-width: 80vw;\n\t.description{\n\t\tpadding: 10px;\n\t\tmin-width: 500px;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tmargin-bottom: 10px;\n\t\ttext-decoration: underline;\n\t\tletter-spacing: 1px;\n\t\ta{\n\t\t\tcolor: skyblue;\n\t\t}\n\t}\n\t.info-modules, .info-nodes{\n\t\tbackground: #000000ab;\n\t\tpadding: 7px;\n\t\tborder-radius: 10px;\n\t\tmargin: 5px 2px;\n\t\t.title{\n\t\t\tcolor: gray;\n\t\t}\n\t}\n\t.info-clear{\n\t\tmargin-top: 10px;\n\t\t.title{\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t.list{\n\t\tlist-style-type: decimal;\n\t\tmargin: 5px 0;\n\t\tpadding: 0 30px;\n\t\tmax-height: 15vh;\n\t\toverflow: hidden auto;\n\t}\n\t.button-clear{\n\t\ttext-align: center;\n\t\tdiv{\n\t\t\tdisplay: inline-block;\n\t\t\tmargin: 5px;\n\t\t\tborder: 1px dashed #000;\n\t\t\tpadding: 7px;\n\t\t\tbackground: #000000ad;\n\t\t\tborder-radius: 20px;\n\t\t\tcursor: pointer;\n\t\t\t&:hover{\n\t\t\t\tbackground: #181818ad;\n\t\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t\t}\n\t\t}\n\t}\n\t.button-import{\n\t\tposition: relative;\n\t\tborder-radius: 10px;\n\t\tbackground: #125c15;\n\t\tborder: 1px solid #65a122;\n\t\tmargin: 0 auto 5px auto;\n\t\twidth: 120px;\n\t\tpadding: 7px 10px;\n\t\ttext-align: center;\n\t\tcursor: pointer;\n\t\t&:hover{\n\t\t\tbackground: #65a122;\n\t\t\tbox-shadow: 0 0 9px #c6ebbd;\n\t\t}\n\t}\n}\n\n## js-global\nvar SketchImporter = sf.model('sketch-importer', function(My){\n\tMy.modules = [];\n\tMy.nodes = [];\n\tMy.pendingLoad = void 0;\n\tMy.savedKeys = {\n\t\tlocalStorage:[],\n\t\tsessionStorage:[],\n\t\tenvironmentVariables:[],\n\t\tsketchPages:[],\n\t};\n\n\tlet progressToast = false;\n\tlet progressTriggered = true;\n\n\tMy.loadJSON = async function(json){\n\t\tModal.goto('/sketch-importer');\n\n\t\tif(json.constructor === String)\n\t\t\tjson = JSON.parse(json);\n\n\t\tMy.pendingLoad = json;\n\n\t\tlet metadata = json._;\n\t\tMy.modules = (metadata && metadata.moduleJS) || [];\n\n\t\tMy.nodes = [];\n\t\tfor(let key in json){\n\t\t\tif(key === '_') continue;\n\n\t\t\tMy.nodes.push({name: key, count: json[key].length});\n\t\t}\n\n\t\tMy.checkSavedData();\n\t}\n\n\tMy.importNow = function(){\n\t\tif(My.pendingLoad === void 0){\n\t\t\tlet msg = \"Please call 'SketchImport.loadJSON' first\";\n\t\t\tconsole.error(msg);\n\n\t\t\tSmallNotif.add(msg, 'yellow');\n\t\t\treturn false;\n\t\t}\n\n\t\tModal.hide();\n\n\t\tlet sketch = SketchList[0] ??= new Blackprint.Sketch();\n\t\tsketch.__importing = true;\n\n\t\tasync function pageShowed(){\n\t\t\tsf.loader.DOMWasLoaded = false; // flag because we may load new module\n\n\t\t\t// Add listener only once until finish\n\t\t\tif(progressTriggered){\n\t\t\t\tsf.loader.onProgress(function(loaded, total){\n\t\t\t\t\tprogressToast.message = `Loading ${loaded}/${total}`;\n\t\t\t\t\tprogressTriggered = true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Import from JSON, and also load required modules if exist\n\t\t\ttry{\n\t\t\t\tawait sketch.importJSON(My.pendingLoad);\n\t\t\t} catch(e) {\n\t\t\t\tSmallNotif.add(\"Failed to import data\", 'red');\n\t\t\t\tthrow e;\n\t\t\t} finally {\n\t\t\t\tsf.loader.DOMWasLoaded = true;\n\t\t\t\tdelete sketch.__importing;\n\t\t\t\tMy.pendingLoad = void 0;\n\t\t\t}\n\n\t\t\t// Clear toast\n\t\t\tlet list = SmallNotif.list;\n\t\t\tlist.splice(list.indexOf(progressToast), 1);\n\t\t}\n\n\t\tif(views.currentPath === '/sketch/1'){\n\t\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\t\treturn setTimeout(pageShowed, 400);\n\t\t}\n\n\t\tviews.goto('/sketch/1');\n\t\tprogressToast = SmallNotif.add(\"Loading\", 'yellow', false);\n\t\tsetTimeout(pageShowed, 1000); // Wait page animation\n\t}\n\n\tMy.checkSavedData = function(){\n\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\tMy.savedKeys.sketchPages = SketchList;\n\t}\n\n\tMy.clear = {\n\t\tlocalStorage(){\n\t\t\tlet keys = Object.keys(localStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete localStorage[keys[i]];\n\n\t\t\tMy.savedKeys.localStorage = Object.keys(localStorage);\n\t\t},\n\t\tsessionStorage(){\n\t\t\tlet keys = Object.keys(sessionStorage);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tdelete sessionStorage[keys[i]];\n\n\t\t\tMy.savedKeys.sessionStorage = Object.keys(sessionStorage);\n\t\t},\n\t\tenvironmentVariables(){\n\t\t\tlet ref = Blackprint.Environment;\n\t\t\tlet keys = Object.keys(ref.map);\n\n\t\t\tfor(let i=0; i < keys.length; i++)\n\t\t\t\tref.delete(keys[i]);\n\n\t\t\tMy.savedKeys.environmentVariables = Object.keys(Blackprint.Environment.map);\n\t\t},\n\t\tsketchPages(){\n\t\t\tfor (var i = 0; i < SketchList.length; i++)\n\t\t\t\tSketchList[i].destroy();\n\n\t\t\tSketchList.splice(1);\n\t\t\tviews.goto('/sketch/1');\n\t\t}\n\t};\n});","## html\r\n<sf-m name=\"sketch-settings\">\r\n\t<div class=\"description\">Settings</div>\r\n\t<div class=\"list\">\r\n\t\t<div class=\"item\">\r\n\t\t\t<div class=\"title\">Theme:</div>\r\n\t\t\t<select sf-bind=\"theme\">\r\n\t\t\t\t<option value=\"default\">Default</option>\r\n\t\t\t\t<option value=\"darker\">Darker</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div class=\"item\">\r\n\t\t\t<div class=\"title\">Background:</div>\r\n\t\t\t<input type=\"text\" sf-bind=\"background\" placeholder=\"https://...\">\r\n\t\t</div>\r\n\t\t<div class=\"item\">\r\n\t\t\t<div class=\"title\">Hide unused port</div>\r\n\t\t\t<input type=\"checkbox\" sf-bind=\"hideUnusedPort\">\r\n\t\t</div>\r\n\t</div>\r\n</sf-m>\r\n\r\n## scss-global\r\nsf-m[name=\"sketch-settings\"] {\r\n\tbackground: #292929;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid black;\r\n\tposition: relative;\r\n\tbox-shadow: 0 0 20px 0px white;\r\n\t.description{\r\n\t\tpadding: 5px;\r\n\t\tcolor: white;\r\n\t\tborder-bottom: 1px solid black;\r\n\t\tbackground: #111;\r\n\t}\r\n\t.list{\r\n\t\tpadding: 5px;\r\n\t\t.item{\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #0000009e;\r\n\t\t\tborder: 1px solid #000;\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 5px;\r\n\t\t\t.title{\r\n\t\t\t\tdisplay: inline;\r\n\t\t\t\tmargin-right: 10px;\r\n\t\t\t}\r\n\t\t\tselect, input{\r\n\t\t\t\tbackground: black;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tcolor: white;\r\n\t\t\t\toutline: none;\r\n\t\t\t\tpadding: 5px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\nsf.model('sketch-settings', function(My){\r\n\tMy.theme = 'default';\r\n\tMy.on$theme = function(now){\r\n\t\t$('body')\r\n\t\t\t.removeClass('node-ui-'+My.theme)\r\n\t\t\t.addClass('node-ui-'+now);\r\n\t}\r\n\r\n\tMy.background = localStorage.bpBackgroundURL || '';\r\n\tMy.on$background = function(now){\r\n\t\t$('body > .background > .img')\r\n\t\t\t.css('background-image', \"url('\"+(now || '/assets/img/background/black3.jpg')+\"')\")\r\n\t\t\t.css('background-size', \"cover\");\r\n\r\n\t\tlocalStorage.bpBackgroundURL = now;\r\n\t}\r\n\r\n\tMy.hideUnusedPort = localStorage.bpHideUnusedPort == 'true' || false;\r\n\tMy.on$hideUnusedPort = function(now){\r\n\t\tfor (var i = 0; i < SketchList.length; i++) {\r\n\t\t\tlet container = SketchList[i].scope('container');\r\n\t\t\tcontainer.hideUnusedPort = now;\r\n\r\n\t\t\tlet nodes = container.nodeScope.list;\r\n\t\t\tfor (var a = 0; a < nodes.length; a++)\r\n\t\t\t\tnodes[a].hideUnusedPort = now;\r\n\t\t}\r\n\r\n\t\tlocalStorage.bpHideUnusedPort = now;\r\n\t}\r\n\r\n\tif(My.background) My.on$background(My.background);\r\n});","## html\r\n<sketch-page>\r\n\t<!-- This element will be replaced with 'My.space' -->\r\n\t<sf-slot for=\"space\"></sf-slot>\r\n\r\n\t<!-- Panels -->\r\n\t<div class=\"panels\">\r\n\t\t<!-- /src/component/sketch-panel-left.sf -->\r\n\t\t<sketch-panel-left></sketch-panel-left>\r\n\r\n\t\t<!-- /src/component/sketch-panel-bottom.sf -->\r\n\t\t<sketch-panel-bottom></sketch-panel-bottom>\r\n\r\n\t\t<!-- /src/component/sketch-panel-right.sf -->\r\n\t\t<sketch-panel-right></sketch-panel-right>\r\n\t</div>\r\n</sketch-page>\r\n\r\n## scss-global\r\nsketch-page{\r\n\t&> .bottom-message {\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\tcolor: #ababab;\r\n\t\twidth: 100%;\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t&> .panels {\r\n\t\tsketch-panel-left, sketch-panel-bottom, sketch-panel-right {\r\n\t\t\tz-index: 1;\r\n\t\t\tbackdrop-filter: blur(1px);\r\n\t\t\tbox-shadow: 0 0 8px 0 black;\r\n\t\t}\r\n\t}\r\n\r\n\t@media(max-width: 900px){\r\n\t\t&> .bottom-message {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\r\n\t&> sf-space[blackprint] .bg-tile{\r\n\t\tbackground: url('/assets/img/background/tile.png');\r\n\t\tbackground-size: 100px;\r\n\t\tfilter: brightness(38%);\r\n\t\tbackface-visibility: hidden;\r\n\t\topacity: 0.5;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tposition: absolute;\r\n\t}\r\n}\r\n\r\n## js-global.router\r\n={\r\n\ton:{\r\n\t\tcoming(data){ // data === views.data\r\n\t\t\tconsole.log(\"Sketch page data:\", data);\r\n\t\t\tlet sketch = SketchList[data.page - 1];\r\n\r\n\t\t\tsf.model('header').cloneActive = sketch.page.cloneActive;\r\n\t\t\t$('body > .background .tile').css('display', 'none');\r\n\r\n\t\t\tif(sketch.ifaceList.length === 0 && !sketch.__importing)\r\n\t\t\t\tsketch.page.panels.bottom.openPanel();\r\n\t\t},\r\n\t\tleaving(){\r\n\t\t\tconsole.log(\"Leaving from sketch page data:\", arguments);\r\n\t\t\t$('body > .background .tile').css('display', '');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n## js-global\r\n// Blackprint.space = Space (https://github.com/ScarletsFiction/ScarletsFrame/wiki)\r\n// sketch.scope = shortcut to obtain your model scope/context\r\nvar SketchList = [];\r\nsf.component('sketch-page', function(My){\r\n\t// URL: #page/sketch/{data.page}\r\n\tlet sketch = My.sketch = SketchList[views.data.page - 1] ??= new Blackprint.Sketch();\r\n\tsketch.page = My;\r\n\r\n\t// Will be filled by each panel component after initialized\r\n\tMy.panels = {left: null, bottom: null, right: null};\r\n\r\n\t// Please use sketch.on('...', callback) instead\r\n\t// This is used if no one listened to the event\r\n\tsketch._event.$_fallback = BlackprintEventFallback;\r\n\r\n\t// path: /src/global/SuggestNodeTypeCaster.js\r\n\tsketch.on('port.cable.test', {slot: 'bp-editor'}, SuggestNodeTypeCaster);\r\n\tsketch.on('port.hover node.hover', {slot: 'bp-editor'}, ev => {\r\n\t\tev.instance = sketch;\r\n\r\n\t\tif(ev.port != null) PortHoverInfo(ev, true);\r\n\t\tif(ev.iface != null) NodeHoverInfo(ev, true);\r\n\t});\r\n\tsketch.on('port.unhover node.unhover', {slot: 'bp-editor'}, ev => {\r\n\t\tev.instance = sketch;\r\n\r\n\t\tif(ev.port != null) PortHoverInfo(ev, false);\r\n\t\tif(ev.iface != null) NodeHoverInfo(ev, false);\r\n\t});\r\n\tsketch.on('cable.dropped', {slot: 'bp-editor'}, ev => {\r\n\t\tif(ev.event.ctrlKey || !ev.afterCreated) return;\r\n\t\tif(ev.event.target.parentNode.model !== sketch.scope('cables')) return;\r\n\r\n\t\tlet suggestedNode = Blackprint.Sketch.suggestNodeForPort(ev.port);\r\n\t\tcontainer.nodeScope.menu(ev.event, suggestedNode);\r\n\t});\r\n\r\n\t// This may cause one memory leak because this will never being cleared\r\n\tsketch.on('node.click', {slot: 'bp-editor'}, ev => {\r\n\t\tMy.panels.right.selectNode(ev.iface);\r\n\t\tNodeHoverInfo(ev, false);\r\n\t});\r\n\r\n\tBlackprint.settings('visualizeFlow', true);\r\n\tMy.space ??= sketch.cloneContainer();\r\n\r\n\tlet SketchPages = sf.model('sketch-pages');\r\n\tlet container = sketch.scope('container');\r\n\tlet header = sf.model('header');\r\n\r\n\tcontainer.hideUnusedPort = sf.model('sketch-settings').hideUnusedPort;\r\n\r\n\tcontainer.onScale = function(scale){\r\n\t\theader.info.scale = Math.round(scale * 100);\r\n\t}\r\n\r\n\t// Will run when <sketch-page> inserted on DOM\r\n\tMy.init = async function(){\r\n\t\tlet sfm = $(My.space.firstElementChild);\r\n\t\tif(!sfm.eq(0).hasClass('bg-tile')){\r\n\t\t\tsfm.prepend('<div class=\"bg-tile\"></div>');\r\n\t\t}\r\n\t}\r\n\r\n\tMy.importJSON = json => sketch.importJSON(json);\r\n\tMy.clearNodes = ()=> sketch.clearNodes();\r\n\r\n\tMy.cloneActive = false;\r\n\tMy.cloneContainer = function(){\r\n\t\tMy.cloneActive = !My.cloneActive;\r\n\r\n\t\tif(My.cloneActive){\r\n\t\t\tif(My.disableVFXActive === false)\r\n\t\t\t\tMy.disableVFX();\r\n\r\n\t\t\t// Reset current container view\r\n\t\t\tvar container = sketch.scope('container');\r\n\t\t\tcontainer.pos.x = 0;\r\n\t\t\tcontainer.pos.y = 0;\r\n\t\t\tcontainer.scale = 1; // 100% scale\r\n\r\n\t\t\tvar mini;\r\n\t\t\tif(container.minimap)\r\n\t\t\t\tmini = container.minimap;\r\n\t\t\telse{\r\n\t\t\t\tmini = sketch.cloneContainer(true); // Clone and get the MiniMap\r\n\r\n\t\t\t\t// Remove the dropdown from minimap\r\n\t\t\t\t$('sf-m[name=\"dropdown\"]', mini).remove();\r\n\t\t\t}\r\n\r\n\t\t\t// Clone into new window\r\n\t\t\tnew sf.Window({\r\n\t\t\t\ttitle: \"Cloned Sketch Container\",\r\n\t\t\t\ttemplateHTML: sketch.cloneContainer() // Clone 2\r\n\t\t\t}, refreshViewport);\r\n\r\n\t\t\t// Put the mini container into DOM\r\n\t\t\tSketchPages.miniViewer.topRight = mini;\r\n\r\n\t\t\t// Refresh mini viewport size\r\n\t\t\t// I put it like this for a reason\r\n\t\t\trefreshViewport();\r\n\t\t\tfunction refreshViewport(){\r\n\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\tcontainer.pos.x = -0.1;\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\tcontainer.pos.x = 0;\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tSketchPages.miniViewer.topRight = null;\r\n\t\t\tsf.Window.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\tsketch.on('node.menu', function({ iface, menu }){\r\n\t\tmenu.unshift({\r\n\t\t\ttitle: !iface.id ? \"Add ID\" : \"Modify ID\",\r\n\t\t\tasync callback(){\r\n\t\t\t\tlet ref = await Swal.fire({\r\n\t\t\t\t\ttitle: \"Write the new ID here\",\r\n\t\t\t\t\ttext: (iface.id ? \"Current ID: \"+iface.id : void 0),\r\n\t\t\t\t\tinput: \"text\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif(ref.isConfirmed === false) return;\r\n\r\n\t\t\t\tlet sketch = SketchList[0];\r\n\t\t\t\tlet val = ref.value;\r\n\r\n\t\t\t\tif(val === ''){\r\n\t\t\t\t\tdelete sketch.iface[iface.id];\r\n\t\t\t\t\tiface.id = val;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(sketch.iface[val] !== void 0)\r\n\t\t\t\t\tthrow new Error(\"ID already exist\");\r\n\r\n\t\t\t\tiface.id = val;\r\n\t\t\t\tsketch.iface[val] = iface;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\ttitle: \"View source code\",\r\n\t\t\tasync callback(){\r\n\t\t\t\tlet code = await utils.openNodeSource(iface);\r\n\t\t\t\tif(!code) return;\r\n\r\n\t\t\t\tlet editor = sf.model('custom-node-editor');\r\n\t\t\t\teditor.setValue(code);\r\n\r\n\t\t\t\tModal.goto('/custom-node-editor');\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});"]}