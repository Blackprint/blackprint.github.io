$((function(){var e=window.sketch=new Blackprint.Sketch;e.settings("visualizeFlow",!0);var t=!1;if(void 0!==navigator.maxTouchPoints)t=navigator.maxTouchPoints>0;else if(void 0!==navigator.msMaxTouchPoints)t=navigator.msMaxTouchPoints>0;else{var n=window.matchMedia&&matchMedia("(pointer:coarse)");if(n&&"(pointer:coarse)"===n.media)t=!!n.matches;else{var o=navigator.userAgent;t=/\b(BlackBerry|webOS|iPhone|IEMobile)\b/i.test(o)||/\b(Android|Windows Phone|iPad|iPod)\b/i.test(o)}}t&&$(document.body).addClass("disable-effect"),Blackprint.registerNode("example/math/multiply",(function(e,t){t.title="Multiply",e.outputs={Result:Number};const n=e.outputs,o=e.inputs={Exec:Blackprint.PortTrigger((function(){n.Result=i(),console.log("Result has been set:",n.Result)})),A:Number,B:Blackprint.PortValidator(Number,(function(e){return console.log(t.title,"- Port B got input:",e),Number(e)}))};function i(){return console.log("Multiplying",o.A,"with",o.B),o.A*o.B}e.update=function(e){n.Result=i()},e.init=function(){t.on("cable.connect",(function(e,t){console.log(`Cable connected from ${e.iface.title} (${e.name}) to ${t.iface.title} (${t.name})`)}))},setTimeout((function(){void 0===t.x?console.log("Node from Interpreter:",t):console.log("Node from Sketch:",t)}),10)})),Blackprint.registerNode("example/math/random",(function(e,t){t.title="Random",t.description="Number (0-100)";const n=e.outputs={Out:Number};var o=!1;e.inputs={"Re-seed":Blackprint.PortTrigger((function(){o=!0,n.Out=Math.round(100*Math.random())}))},e.request=function(t,n){if(!0===o)return!1;console.warn("Value request for port:",t.name,"from node:",n.title),e.inputs["Re-seed"]()}})),Blackprint.registerNode("example/display/logger",(function(e,t){t.title="Logger",t.description="Print anything into text",t.interface="nodes/logger";const n=e.inputs={Any:Blackprint.PortArrayOf(null)};function o(e){null===e?t.log="null":void 0===e?t.log="undefined":e.constructor===Function?t.log=e.toString():e.constructor===String||e.constructor===Number?t.log=e:t.log=JSON.stringify(e)}e.init=function(){t.on("cable.connect cable.disconnect",(function(){console.log("A cable was changed on Logger, now refresing the input element"),o(n.Any)})),t.inputs.Any.on("value",(function(e){console.log("I connected to",e.name,"port from",e.iface.title,"that have new value:",e.value),o(n.Any)}))}})),Blackprint.registerNode("example/button/simple",(function(e,t){t.title="Button",t.interface="nodes/button";const n=e.outputs={Clicked:Function};e.clicked=function(e){console.log("button/simple: got",e,"time to trigger to the other node"),n.Clicked(e)}})),Blackprint.registerNode("example/input/simple",(function(e,t){t.title="Input",t.interface="nodes/input";const n=e.outputs={Changed:Function,Value:String};t.options={value:"..."},e.imported=function(e){console.warn("Old options:",JSON.stringify(t.options)),console.warn("Imported options:",JSON.stringify(e)),t.options=e,n.Value=e.value},e.changed=function(e,o){!1===t.importing&&(console.log("The input box have new value:",e),n.Value=t.options.value,n.Changed())}})),Blackprint.registerNode("example/dummy/test",(function(e,t){t.title="Do nothing",e.inputs={"Input 1":Boolean,"Input 2":String},e.outputs={"Output 1":Object,"Output 2":Number},e.properties={"Property 1":Boolean,"Property 2":Number}}));var i=window.sampleList={"Default sample":{"example/math/random":[{id:0,x:298,y:73,outputs:{Out:[{id:2,name:"A"}]}},{id:1,x:298,y:239,outputs:{Out:[{id:2,name:"B"}]}}],"example/math/multiply":[{id:2,x:525,y:155,outputs:{Result:[{id:3,name:"Any"}]}}],"example/display/logger":[{id:3,x:763,y:169}],"example/button/simple":[{id:4,x:41,y:59,outputs:{Clicked:[{id:2,name:"Exec"}]}}],"example/input/simple":[{id:5,x:38,y:281,options:{value:"saved input"},outputs:{Changed:[{id:1,name:"Re-seed"}],Value:[{id:3,name:"Any"}]}}]}},r=window.interpreter=new Blackprint.Interpreter;console.log("-- Do you want to run a sample for interpreter-js?"),console.log("-- Call interpreterTest() from this console"),window.interpreterTest=function(){var t=Blackprint.nodes;console.log("-- The sketch and the console was imported from same JSON example, but they're imported in different interpreter. Any modification from the sketch page will not change the imported console nodes."),e.clearNodes(),e.importJSON(i["Default sample"]),Blackprint.Interpreter.registerNode("example/math/multiply",t.example.math.multiply),Blackprint.Interpreter.registerNode("example/math/random",t.example.math.random),Blackprint.Interpreter.registerNode("example/display/logger",t.example.display.logger),Blackprint.Interpreter.registerNode("example/button/simple",t.example.button.simple),Blackprint.Interpreter.registerNode("example/input/simple",t.example.input.simple),r.importJSON(i["Default sample"]),setTimeout((function(){console.warn('The interpreter nodes on this console is using default sample\n> sampleList["Default sample"]'),console.warn("If you want to import your JSON, don't forget to run interpreter.clearNodes() first"),console.log("For obtain interpreter node:%c\nvar button = interpreter.getNodes('example/button/simple')[0];\nvar input = interpreter.getNodes('example/input/simple')[0];\nvar logger = interpreter.getNodes('example/display/logger')[0];\n","color: gray"),console.log("To click on invisible button: %cbutton.clicked()","color: gray"),console.log("To set the invisible input: %cinput.options.value = 'hello'","color: gray"),console.log("Or send the input to the handle output directly: %cinput.const.Output.Value = 'hello'","color: gray"),console.log("To get the logger value: %clogger.const.Input.Any","color: gray")}),2e3)};var a=0;Blackprint.registerInterface("nodes/button",(function(e){e.clicked=function(t){console.log("Element: 'Trigger' button clicked, going to run the handler"),e.node.clicked&&e.node.clicked(t)}})),Blackprint.Interpreter.registerInterface("nodes/button",(function(e){e.clicked=function(t){console.log("Interpreter: 'Trigger' button clicked, going to run the handler"),e.node.clicked&&e.node.clicked(t)}})),Blackprint.registerInterface("nodes/input",(function(e){e.options={value:"",on$value:function(t){var n=e.$el("textarea");n[0].offsetWidth>150||n[0].offsetHeight>60||(t.length<8?n.attr("style",""):t.length>=8&&t.length<14?n.attr("style","width:"+10*t.length+"px"):t.length>=14&&n.attr("style","width:140px;height:50px"))}},e.textChanged=function(t){e.node.changed(t.target.value)},e.init=e.hotReloaded=function(){e.node.changed&&e.$el("textarea").on("input",e.textChanged)}})),Blackprint.Interpreter.registerInterface("nodes/input",(function(e,t){var n="...";t({options:{set value(t){n=t,void 0!==e.node.changed&&e.node.changed(t)},get value(){return n}}})})),Blackprint.registerInterface("nodes/logger",(function(e){e.log="...",e.m2v$log=function(t){var n=e.$el("textarea");n[0].offsetWidth>150||n[0].offsetHeight>60||(t.length<8?n.attr("style",""):t.length>=8&&t.length<14?n.attr("style","width:"+10*t.length+"px"):t.length>=14&&n.attr("style","width:140px;height:50px"))}})),Blackprint.Interpreter.registerInterface("nodes/logger",(function(e,t){var n="...";t({get log(){return n},set log(e){n=e,console.log("Logger:",e)}})})),sf.model("header",(function(t,n){var o;function i(e){var n=e.split(""),o=setInterval((function(){t.description+=n.shift(),0===n.length&&clearInterval(o)}),50)}t.message="Hello",t.description="Developers! ",t.showOptions=!1,t.info={scale:100},t.init=function(){sf.url.parse(),sf.url.hashes.ground&&"/"!==sf.url.hashes.ground?(t.description="Developers! ",i("Welcome to the example!"),t.showOptions=!0,e.scope("container").onScale=function(e){t.info.scale=Math.round(100*e)}):setTimeout((function(){i("Let's getting started!"),o=setInterval((function(){t.$el(".right").animateKey("fadeOut")}),2e3)}),2e3)},t.toHome=function(){l.goto("/")},t.toWorkspace=function(){clearInterval(o),l.goto("/page/1",(function(){t.description="Developers! ",setTimeout((function(){i("Welcome to the example!")}),1e3)}))},t.cloneActive=!1,t.cloneContainer=function(){if(t.cloneActive=!t.cloneActive,t.cloneActive){!1===t.switchVFXActive&&t.switchVFX();var n=e.scope("container");n.pos.x=0,n.pos.y=0,n.scale=1;var o=e.cloneContainer();function i(){setTimeout((function(){n.pos.x=-.1,setTimeout((function(){n.pos.x=0}),500)}),1e3)}$('sf-m[name="dropdown"], animate',o).remove(),sf.window.create({title:"Cloned Sketch Container",templateHTML:e.cloneContainer()},i),$(".mini-blackprint").removeClass("hidden").append(o),i()}else $(".mini-blackprint").addClass("hidden").text(""),sf.window.destroy()},t.switchVFXActive=!1,t.switchVFX=function(){t.switchVFXActive=!t.switchVFXActive,t.switchVFXActive?(e.scope("container").$el.addClass("performance"),t.visualizeActive=!1,Blackprint.settings("visualizeFlow",!1)):e.scope("container").$el.removeClass("performance")},t.visualizeActive=!0,t.visualizeFlow=function(){t.visualizeActive=!t.visualizeActive,Blackprint.settings("visualizeFlow",t.visualizeActive)},t.saveSketch=function(t){e.scope("dropdown").show([{title:"Copy JSON",callback:function(){var t=e.exportJSON();navigator.clipboard.writeText(t),swal({title:"Copied to clipboard!",text:t})}},{title:"To File",callback:function(){var t=document.createElement("a"),n=new Blob([e.exportJSON()],{type:"application/json"});t.href=URL.createObjectURL(n),t.download="blackprint.json",t.click(),setTimeout((function(){URL.revokeObjectURL(t.href)}),1e4)}}],t.x,t.y)},t.loadSketch=function(t){e.scope("dropdown").show([{title:"Append from JSON",callback:function(){swal({title:"Append from JSON",content:"input"}).then((function(t){e.importJSON(t)}))}},{title:"Import JSON",callback:function(){swal({title:"Import JSON",content:"input"}).then((function(t){t&&(e.clearNodes(),e.importJSON(t))}))}},{title:"From File",callback:function(){var e=document.createElement("input");e.setAttribute("type","file"),e.onchange=function(){console.log(345,this)},e.click()}}],t.x,t.y)}}));var l=new sf.views("vw-ground","ground");l.maxCache=100,l.addRoute([{path:"/",template:"vw-ground/ground","vw-page":[{path:"/page/:pageIndex",template:"vw-ground/vw-page/sketch-page",on:{showed:function(){sf.model("header").showOptions=!0},leaving:function(){sf.model("header").showOptions=!1}}},{path:"/getting-started",template:"vw-ground/vw-page/getting-started"}]}]).on("finish",(function(){var e;void 0!==(e=l).lastSibling&&$(e.lastSibling).animateKey("scaleDown",.6,(function(){$(this).addClass("disable-anim")})),$(e.showedSibling).removeClass("disable-anim").animateKey("scaleUpDown",{duration:.6,delay:.3,visible:!1}),clearTimeout(a),a=setTimeout((function(){a=!1,$(e.relatedDOM).removeClass("disable-anim")}),1e3)})).on("error",console.error),sf.views.onCrossing=function(e,t){window.open(e,t).focus()};var s=!1;sf.component("sketch-page",(function(t){t.init=function(){s||(s=!0,setTimeout((function(){e.importJSON({"Input/file":[{id:0,x:74,y:26,outputs:{URL:[{id:7,name:"URL"}]}},{id:1,x:47,y:557}],"WebAudio/input/microphone":[{id:2,x:21,y:321}],"WebAudio/output/destination":[{id:3,x:597,y:273}],"WebAudio/effect/PingPongDelay":[{id:4,x:322,y:222,options:{mix:.5,time:.3,feedback:.5},outputs:{Out:[{id:3,name:"In"}]}}],"example/button/simple":[{id:5,x:35,y:139,outputs:{Clicked:[{id:7,name:"Play"}]}},{id:6,x:39,y:225,outputs:{Clicked:[{id:7,name:"Pause"}]}}],"WebAudio/player":[{id:7,x:325,y:34,outputs:{AudioNode:[],Element:[],VideoTrack:[{id:9,name:"VideoTrack"}],AudioTrack:[]}}],"Input/slider-box":[{id:8,x:141,y:417,options:{0:{value:0,min:-100,max:100,step:.1},1:{value:0,min:-100,max:100,step:.1},2:{value:1,min:-100,max:100,step:.1},3:{value:1,min:-100,max:100,step:.1},4:{value:0,min:-100,max:100,step:.1}},outputs:{0:[{id:10,name:"x"}],1:[{id:10,name:"y"}],2:[{id:10,name:"ScaleX"}],3:[{id:10,name:"ScaleY"}],4:[{id:10,name:"Rotate"}]}}],"WebAudio/visualize/video":[{id:9,x:593,y:25}],"Graphics/sprite":[{id:10,x:364,y:374},{id:11,x:510,y:544}],"Graphics/visualize/canvas":[{id:12,x:756,y:269},{id:13,x:749,y:490}],"Graphics/converter/gif":[{id:14,x:246,y:643}],"decoration/text/notes":[{id:15,x:931,y:27,options:{value:"Sorry it's messy here ｡ﾟ( ﾟ^∀^ﾟ)ﾟ｡\n\nFirst you need to open video file.\nTrigger the play, or connect AudioNode to PingPongDelay first.\n\nThe AudioNode can be connected directly to WebAudio Destination.\n\nMedia Player's Element can be connected to Sprite Source."}},{id:16,x:58,y:737,options:{value:"To begin with GIF animation, open your GIF file.\n\nThen connect to GIF Player.\nConnect the Canvas to Sprite's Source\nthen connect the Sprite to Canvas Visualization."}}]})}),1e3))}}))}));
//# sourceMappingURL=myjs.min.js.map
